{"version":3,"sources":["components/ToggleButton/action.js","components/ShoppingCart/ShoppingCart.js","components/Categories.Client/action.js","components/Preloader/Preloader.js","components/Categories.Client/Categories.Client.js","components/NavBar/adction.js","pages/Home.page/action.js","components/NavBar/NavBar.js","components/ToggleButton/ToggleButton.js","components/RatingButton/RatingButton.js","components/Products.Client/Products.Client.js","components/BottomNavBar/action.js","components/BottomNavBar/BottomNavBar.js","components/Catalog/Catalog.js","components/ToUpButton/ToUpButton.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","components/UserInfo/UserInfo.js","components/AdminPanelHeader/AdminPanelHeader.js","pages/AdminPanel.page.js","components/Categories.Admin/action.js","components/Categories.Admin/Categories.Admin.js","components/Products.Admin/action.js","components/ProductsFilter/ProductsFilter.js","components/Products.Admin/Products.Admin.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/AdminDashboard/AdminDashboard.js","components/OrderHeader/OrederHeader.js","static/cities.js","components/OrderSteps/action.js","components/OrderContactInfo/OrderContactInfo.js","components/OrderPayWay/OrderPayWay.js","components/OrderConfirmation/OrderConfirmation.js","components/OrderSteps/OrderSteps.js","pages/Order.page/Order.page.js","components/ProductEditor/action.js","components/ProductEditor/ProductEditor.js","routes/routes.js","components/AuthForm/reducer.js","components/Products.Admin/reducer.js","components/ProductCreator/reducer.js","components/Categories.Admin/reducer.js","components/CategoryCreator/reducer.js","components/Categories.Client/reducer.js","pages/Home.page/reducer.js","components/NavBar/reducer.js","components/ToggleButton/reducer.js","components/BottomNavBar/reducer.js","components/OrderSteps/reducer.js","components/ProductEditor/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/Products.Admin/saga.js","components/ProductCreator/saga.js","components/Categories.Admin/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","components/NavBar/saga.js","components/ToggleButton/saga.js","components/ProductEditor/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["addToShoppingCartAction","product","type","payload","delFromShoppingCartAction","id","connect","state","cart","shoppingCartState","dispatch","delFromSoppingCart","bindActionCreators","cartHandleClose","enqueueSnackbar","useSnackbar","className","AppBar","position","color","Toolbar","Hidden","only","Typography","variant","Button","component","NavLink","to","disabled","length","onClick","IconButton","edge","aria-label","Icon","List","map","item","ListItem","key","_id","Card","CardMedia","image","img","title","name","CardContent","gutterBottom","description","CardActions","disableSpacing","size","fontSize","prices","price","reduce","a","b","total","toFixed","setCurrentCategoryAction","category","Preloader","CircularProgress","categories","forClientState","loadingCategories","currentCategory","currentCategoryState","setCurrentCategory","disablePadding","fullWidth","classes","endIcon","setFilterValueAction","value","getProductsForClientRequestAction","limit","page","getProductsForClientSuccessAction","products","productsLength","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","clearMessageAction","setFilterValue","clearMessage","useState","focus","setFocus","cartOpen","setCartOpen","menuOpen","setMenuOpen","setValue","useEffect","handleMenuClose","searchHandler","inputRef","createRef","style","zIndex","mdUp","aria-controls","aria-haspopup","event","Drawer","onClose","open","paper","Divider","Box","Link","href","target","rel","smDown","mdDown","orientation","flexItem","startIcon","FormControl","TextField","label","onChange","onKeyPress","current","blur","inputProps","ref","onFocus","InputProps","endAdornment","InputAdornment","onBlur","Badge","badgeContent","aria-describedby","anchor","closeAfterTransition","BackdropProps","timeout","addToCart","delFromCart","children","selected","setSelected","findProduct","find","handler","RatingButton","ratingValue","setRatinValue","Rating","newValue","loadingProducts","getProductsForClientRequest","Paper","elevation","Grid","container","direction","xs","sm","md","lg","CardActionArea","changeCurrentPageAction","currentPage","paginationState","changeCurrentPage","console","log","xsDown","Pagination","count","Math","ceil","shape","PaperProps","ToUpButton","show","containerRef","Zoom","in","unmountOnExit","Fab","scroll","top","behavior","getCategoriesForClientRequest","React","currentPageIndex","showScrollTo","setShowScrollTo","onScroll","scrollTop","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","accessLevel","loginFailureAction","logoutAction","userId","loading","authState","registrationRequest","loginRequest","setOpen","anchorEl","setAnchorEl","email","password","err","setErr","setForm","changeInputHandler","popperHandler","currentTarget","Popper","placement","transition","TransitionProps","Fade","justify","alignContent","error","required","ButtonGroup","AuthPage","DeveloperPage","settingsList","path","icon","nav","listItem","root","listIcon","divider","AdminSettingsList","location","useLocation","findName","matchPath","pathname","ListItemText","light","ListItemIcon","levels","level","logout","dialog","setDialog","findLevel","handleCloseDialog","Avatar","alt","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","autoFocus","undefined","margin","padding","AdminRoutes","getCategoriesRequestAction","getCategoriesSuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","categoriesState","oneCategoryLoading","categoryCreatorState","getCategoriesRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","Checkbox","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","changePageAction","productsState","filterOptions","createFilterOptions","matchFrom","stringify","option","Autocomplete","options","sort","getOptionLabel","freeSolo","blurOnSelect","clearOnEscape","renderInput","params","renderOption","onInputChange","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","changePage","checkboxChangeHendler","TableCreator","amount","addProductRequestAction","addProductFailureAction","productCreatorState","categoriesLoading","addProductRequest","addProductFailure","FormHelperText","Select","displayEmpty","addCategoryRequestAction","addCategoryFailureAction","success","addCategoryRequest","setCategory","addCatogory","useCallback","autoComplete","OrderHeader","handlePopoverClose","Popover","disableRestoreFocus","aria-owns","onMouseEnter","onMouseLeave","cities","city","area","setStepAction","step","setStep","helperText","setSuccess","setFalure","steps","stepsState","switchRender","Stepper","activeStep","index","labelProps","Step","StepLabel","OrderPage","Container","maxWidth","getProductForEditRequestAction","labels","editState","getProductForEditorRequest","sale","productKeys","Object","keys","filter","resetHandler","resetControler","select","width","height","src","mapStateToProps","isAuth","Routes","AdminPanelPage","exact","HomePage","AdminDashboard","ProductsForAdmin","ProductEditor","CategoriesForAdmin","sessionStorage","getItem","checkToken","jwt","verify","e","initialState","localStorage","JSON","parse","completed","rootReducer","combineReducers","action","filterState","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","headers","then","response","json","fetchLogin","call","data","status","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","forClientWatcher","fetchProductsForClient","fetchCategoriesForClient","getFilteredProductsWorker","filterWatcher","fetchFilteredProducts","filterValue","shoppingCartWorker","shoppingCartWatcher","putToLocalStorage","takeEvery","editProductWorker","editProductWatcher","fetchProductForEdit","rootSaga","all","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","theme","createMuiTheme","palette","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"6hCAIaA,EAA0B,SAAAC,GACrC,MAAO,CACLC,KANgC,uBAOhCC,QAASF,IAIAG,EAA4B,SAAAC,GACvC,MAAO,CACLH,KAZkC,yBAalCC,QAASE,I,gBC6JEC,eAZS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,kBAAkBD,SAIP,SAAAE,GACzB,MAAO,CACLC,mBAAoBC,YAAmBR,EAA2BM,MAIvDJ,EAhIM,SAAC,GAAmD,IAAjDE,EAAgD,EAAhDA,KAAMK,EAA0C,EAA1CA,gBAAiBF,EAAyB,EAAzBA,mBACrCG,EAAoBC,wBAApBD,gBAeR,OACE,yBAAKE,UAAU,eACb,kBAACC,EAAA,EAAD,CACEC,SAAS,SACTF,UAAU,uBACVG,MAAM,WAEN,kBAACC,EAAA,EAAD,CAASJ,UAAU,YACjB,kBAACK,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACnB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,+CAIF,kBAACC,EAAA,EAAD,CACAN,MAAM,YACNK,QAAQ,YACRE,UAAWC,IACXC,GAAG,SACHC,UAAWrB,EAAKsB,OAAS,GALzB,mFAQA,kBAACT,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACnB,kBAACG,EAAA,EAAD,CACEN,MAAM,UACNK,QAAQ,WACRO,QAASlB,GAHX,4GAQF,kBAACQ,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,OACzB,kBAACU,EAAA,EAAD,CACEC,KAAK,MACLd,MAAM,UACNe,aAAW,cACXH,QAASlB,EACTG,UAAU,iBACVQ,QAAQ,YAER,kBAACW,EAAA,EAAD,kBAKR,kBAACC,EAAA,EAAD,CAAMpB,UAAU,gBACbR,GAAQA,EAAKsB,OAAS,EAAItB,EAAK6B,KAAI,SAAAC,GAAI,OACtC,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAKG,IAAKzB,UAAU,aACjC,kBAAC0B,EAAA,EAAD,CACE1B,UAAU,OACVQ,QAAQ,YAER,kBAACmB,EAAA,EAAD,CACE3B,UAAU,WACV4B,MAAON,EAAKO,IACZC,MAAOR,EAAKS,OAEd,kBAACC,EAAA,EAAD,CACEhC,UAAU,oBAEV,kBAACO,EAAA,EAAD,CAAY0B,cAAY,EAACzB,QAAQ,KAAKE,UAAU,MAC7CY,EAAKS,MAER,kBAACxB,EAAA,EAAD,CAAYP,UAAU,gBAAgBQ,QAAQ,QAAQL,MAAM,gBAAgBO,UAAU,KACnFY,EAAKY,YACLZ,EAAKY,YACLZ,EAAKY,aAER,yBAAKlC,UAAU,WAIjB,kBAACmC,EAAA,EAAD,CACEC,gBAAgB,EAChBpC,UAAU,qBAEV,kBAACgB,EAAA,EAAD,CACEqB,KAAK,QACLtB,QAAS,WAlFE,IAAC1B,IAkFwBiC,EAAKG,IAjFvD9B,EAAmBN,GACnBS,EAAgB,wGAkFF,kBAACqB,EAAA,EAAD,qBAKL,yBAAKnB,UAAU,mBAAkB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,QAAQ8B,SAAU,GAAInC,MAAM,iBAAhD,+EAExC,kBAACF,EAAA,EAAD,CACEC,SAAS,SACTF,UAAU,sBACVG,MAAM,WAEN,kBAACC,EAAA,EAAD,CAASJ,UAAU,mBACjB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAASL,MAAM,WAAnC,mCA1GM,WACZ,IAAMoC,EAAS/C,EAAK6B,KAAI,SAAAC,GAAI,OAAIA,EAAKkB,SACrC,OAAID,EAAOzB,OAAS,EACXyB,EAAOE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAE5B,EAqGmDC,GAAQC,QAAQ,GAAtE,SACA,kBAACtC,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBCrJGsC,EAA2B,SAAAC,GACtC,MAAO,CACL7D,KALgC,uBAMhCC,QAAS4D,I,kBCQEC,G,OARG,SAAC,GAAmB,IAAjBhD,EAAgB,EAAhBA,UACnB,OACE,yBAAKA,UAAWA,EAAS,4BAAwBA,GAAc,qBAC7D,kBAACiD,EAAA,EAAD,SCkDS3D,eAdS,SAAAC,GACtB,MAAO,CACL2D,WAAY3D,EAAM4D,eAAeD,WACjCE,kBAAmB7D,EAAM4D,eAAeC,kBACxCC,gBAAiB9D,EAAM+D,qBAAqBD,oBAIrB,SAAA3D,GACzB,MAAO,CACL6D,mBAAoB3D,YAAmBkD,EAA0BpD,MAItDJ,EA3Ca,SAAC,GAA4E,IAA1E4D,EAAyE,EAAzEA,WAAYK,EAA6D,EAA7DA,mBAAoBH,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBAqBhF,OACE,kBAACjC,EAAA,EAAD,CAAMpB,UAAU,kBAAkBwD,gBAAc,GAC7CJ,EAAoB,kBAAC,EAAD,MAA4BF,EArBxC7B,KAAI,SAACC,GAAD,OACb,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAKS,MAClB,kBAACtB,EAAA,EAAD,CACEgD,WAAS,EACTpB,KAAK,QACLqB,QAAS,CACPD,UAAYJ,IAAoB/B,EAAKS,KAAO,wBAA0B,kBAExEvB,QAAQ,OACRO,QAAS,kBAAMwC,EAAmBjC,EAAKS,OACvC5B,MAAOkD,IAAoB/B,EAAKS,KAAO,YAAc,UACrD4B,QAASN,IAAoB/B,EAAKS,KAAO,kBAACZ,EAAA,EAAD,iBAAwB,MAEjE,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,UAAUc,EAAKS,eC7BhC6B,EAAuB,SAAAC,GAClC,MAAO,CACL3E,KAJ4B,mBAK5BC,QAAS0E,ICIAC,EAAoC,SAACf,EAAUgB,EAAOC,GACjE,MAAO,CACL9E,KAX2C,kCAY3CC,QAAS,CACP4D,WACAgB,QACAC,UAKOC,EAAoC,SAACC,EAAUC,GAC1D,MAAO,CACLjF,KArB2C,kCAsB3CC,QAAS,CACP+E,WACAC,oBAKOC,EAAmC,SAAAC,GAC9C,MAAO,CACLnF,KA9B2C,kCA+B3CC,QAASkF,IAIAC,EAAsC,WACjD,MAAO,CACLpF,KApC4C,sCA+CnCqF,EAAsC,SAAAF,GACjD,MAAO,CACLnF,KA/C4C,oCAgD5CC,QAASkF,IAIAG,EAAqB,WAChC,MAAO,CACLtF,KArDyB,kBC4QdI,eAdS,SAAAC,GACtB,MAAO,CACL8E,QAAS9E,EAAM4D,eAAekB,QAC9B7E,KAAMD,EAAME,kBAAkBD,SAIP,SAAAE,GACzB,MAAO,CACL+E,eAAgB7E,YAAmBgE,EAAsBlE,GACzDgF,aAAc9E,YAAmB4E,EAAoB9E,MAI1CJ,EAnPA,SAAC,GAAqD,IAAnDmF,EAAkD,EAAlDA,eAAgBJ,EAAkC,EAAlCA,QAASK,EAAyB,EAAzBA,aAAclF,EAAW,EAAXA,KAC/CM,EAAoBC,wBAApBD,gBAD0D,EAExC6E,oBAAS,GAF+B,mBAE3DC,EAF2D,KAEpDC,EAFoD,OAGlCF,oBAAS,GAHyB,mBAG3DG,EAH2D,KAGjDC,EAHiD,OAIlCJ,oBAAS,GAJyB,mBAI3DK,EAJ2D,KAIjDC,EAJiD,OAKxCN,mBAAS,IAL+B,mBAK3Dd,EAL2D,KAKpDqB,EALoD,KAO5DrF,EAAkB,WACtBkF,GAAY,IAMdI,qBAAU,WACJd,IACFvE,EAAgBuE,GAChBK,OAED,CAACL,EAASvE,IAEb,IAIMsF,EAAkB,WACtBH,GAAY,IAORI,EAAgB,WACpBZ,EAAeZ,GACfgB,GAAS,IAeLS,EAAWC,sBAEjB,OACE,kBAACtF,EAAA,EAAD,CAAQC,SAAS,SAASsF,MAAO,CAAEC,OAAQ,MAAQzF,UAAU,UAAUG,MAAM,UAAUO,UAAU,OAC/F,kBAACN,EAAA,EAAD,CAASJ,UAAU,YACjB,kBAACK,EAAA,EAAD,CAAQqF,MAAI,GACV,kBAAC1E,EAAA,EAAD,CACEE,aAAW,OACXyE,gBAAc,YACdC,gBAAc,OACd7E,QAvCa,SAAA8E,GACrBZ,GAAY,KAwCJ,kBAAC9D,EAAA,EAAD,KAAO6D,EAAW,QAAU,SAE9B,kBAACc,EAAA,EAAD,CACEtF,QAAQ,YACRuF,QAASX,EACTY,KAAMhB,EACNtB,QAAS,CACPuC,MAAO,yBAGT,kBAAChG,EAAA,EAAD,CACEC,SAAS,SACTF,UAAU,uBACVG,MAAM,WAEN,kBAACC,EAAA,EAAD,CAASJ,UAAU,YACjB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,eAAnC,WACA,kBAACgB,EAAA,EAAD,CACEC,KAAK,MACLd,MAAM,UACNe,aAAW,cACXH,QAASqE,EACTpF,UAAU,iBACVQ,QAAQ,YAER,kBAACW,EAAA,EAAD,iBAIN,yBAAKnB,UAAU,4BACb,kBAACO,EAAA,EAAD,CAAYC,QAAQ,UAAUR,UAAU,gBAAxC,qGACA,kBAACkG,EAAA,EAAD,CAAS1F,QAAQ,SAASR,UAAU,iBACpC,kBAAC,EAAD,MACA,kBAACkG,EAAA,EAAD,CAAS1F,QAAQ,SAASR,UAAU,kBAEtC,kBAACC,EAAA,EAAD,CACEC,SAAS,SACTF,UAAU,eACVG,MAAM,WAEN,kBAACC,EAAA,EAAD,CAASJ,UAAU,YACjB,kBAACmG,EAAA,EAAD,CACEjF,aAAW,eACXlB,UAAU,oBAEV,kBAACoG,EAAA,EAAD,CAAMpG,UAAU,MAAMqG,KAAK,8BAA8BC,OAAO,SAASC,IAAI,cAC3E,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,gBAAgBsC,SAAS,QAAQnC,MAAM,YAEzD,kBAACiG,EAAA,EAAD,CAAMpG,UAAU,KAAKqG,KAAK,0DAA0DC,OAAO,SAASC,IAAI,cACtG,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,kBAAkBsC,SAAS,QAAQnC,MAAM,YAE3D,kBAACiG,EAAA,EAAD,CAAMpG,UAAU,MAAMqG,KAAK,wBAAwBC,OAAO,SAASC,IAAI,cACrE,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,kBAAkBsC,SAAS,QAAQnC,MAAM,iBAOrE,kBAACE,EAAA,EAAD,CAAQmG,QAAM,GACZ,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,MAApB,YAEF,kBAACH,EAAA,EAAD,CAAQoG,QAAM,GACZ,kBAACN,EAAA,EAAD,CAAKnG,UAAU,kBACb,kBAACkG,EAAA,EAAD,CAASQ,YAAY,WAAWC,UAAQ,IACxC,kBAAClG,EAAA,EAAD,CACED,QAAQ,YACRL,MAAM,UACNyG,UAAW,kBAACzF,EAAA,EAAD,eAHb,qBAOA,kBAAC+E,EAAA,EAAD,CAASQ,YAAY,WAAWC,UAAQ,IACxC,kBAAClG,EAAA,EAAD,CACED,QAAQ,YACRL,MAAM,YACNyG,UAAW,kBAACzF,EAAA,EAAD,eAHb,qBAOA,kBAAC+E,EAAA,EAAD,CAASQ,YAAY,WAAWC,UAAQ,MAG5C,kBAACE,EAAA,EAAD,CACE7G,UAAU,kBAEV,kBAAC8G,EAAA,EAAD,CACErD,WAAS,EACTpB,KAAK,QACL7B,QAAQ,WACRuG,MAAM,iCACNC,SA5HiB,SAACnB,GAC1BX,EAASW,EAAMS,OAAOzC,QA4HdA,MAAOA,EACPoD,WAjHS,SAAApB,GACC,UAAdA,EAAMrE,MACR6D,IACAC,EAAS4B,QAAQC,SA+GXC,WAAY,CACVC,IAAK/B,EACLgC,QAAS,kBAAMzC,GAAS,KAE1B0C,WAAY,CACVC,aACE,kBAACC,EAAA,EAAD,CAAgBvH,SAAS,OACtB0E,EACG,kBAAC5D,EAAA,EAAD,CACAqB,KAAK,QACLlC,MAAM,UACNY,QAASsE,EACTqC,OAAQ,kBAAM7C,GAAS,KACxB,kBAAC1D,EAAA,EAAD,gBACE0C,GAAS,kBAAC7C,EAAA,EAAD,CACVb,MAAM,UACNkC,KAAK,QACLtB,QAvIC,WACnBmE,EAAS,MAmImB,IAIV,kBAAC/D,EAAA,EAAD,oBAOd,kBAACH,EAAA,EAAD,CACEb,MAAOX,EAAKsB,OAAS,EAAI,UAAY,UACrCI,aAAW,OACXH,QA9Ke,WACrBgE,GAAY,KA+KN,kBAAC4C,EAAA,EAAD,CAAOC,aAAcpI,EAAKsB,OAAQX,MAAM,aACtC,kBAACgB,EAAA,EAAD,yBAIN,kBAACd,EAAA,EAAD,CAAQmG,QAAM,GACZ,kBAACV,EAAA,EAAD,CACEE,KAAMlB,EACN+C,mBAAiB,2BACjBnE,QAAS,CACPuC,MAAO,cAETF,QAASlG,EACTiI,OAAO,QACPC,sBAAoB,EACpBC,cAAe,CACbC,QAAS,MAGX,kBAAC,EAAD,CAAcpI,gBAAiBA,MAGnC,kBAACQ,EAAA,EAAD,CAAQqF,MAAI,GACV,kBAACI,EAAA,EAAD,CACEE,KAAMlB,EACN+C,mBAAiB,2BACjBnE,QAAS,CACPuC,MAAO,qBAETF,QAASlG,EACTiI,OAAO,QACPC,sBAAoB,EACpBC,cAAe,CACbC,QAAS,MAGX,kBAAC,EAAD,CAAcpI,gBAAiBA,U,0BCpM1BP,G,OAAAA,aAbS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,kBAAkBD,SAIP,SAAAE,GACzB,MAAO,CACLwI,UAAWtI,YAAmBZ,EAAyBU,GACvDyI,YAAavI,YAAmBR,EAA2BM,MAIhDJ,EAhDW,SAAC,GAAwD,EAAtD8I,SAAuD,IAA7CnJ,EAA4C,EAA5CA,QAASiJ,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,YAAa3I,EAAW,EAAXA,KAAW,EACjDmF,oBAAS,GADwC,mBAC1E0D,EAD0E,KAChEC,EADgE,KAEzExI,EAAoBC,wBAApBD,gBAERqF,qBAAU,WACR,IAAMoD,EAAc/I,EAAKgJ,MAAK,SAAAlH,GAAI,OAAIA,EAAKG,MAAQxC,EAAQwC,OAEzD6G,IADEC,KAKH,CAAC/I,IAEJ,IAAMiJ,EAAU,WACIjJ,EAAKgJ,MAAK,SAAAlH,GAAI,OAAIA,EAAKG,MAAQxC,EAAQwC,QAEvD3B,EAAgB,sGAChBqI,EAAYlJ,EAAQwC,KACpB6G,GAAY,KAEZxI,EAAgB,4GAChBoI,EAAUjJ,GACVqJ,GAAY,KAIhB,OAAOD,EACH,kBAACrH,EAAA,EAAD,CAAYD,QAAS0H,EAAStI,MAAM,WAClC,kBAACgB,EAAA,EAAD,eAEF,kBAACH,EAAA,EAAD,CAAYD,QAAS0H,EAAStI,MAAM,WAClC,kBAACgB,EAAA,EAAD,2B,SCjCKuH,I,OAAe,SAAC,GAAU,IAATrJ,EAAQ,EAARA,GAAQ,EACCsF,mBAAS,GADV,mBAC7BgE,EAD6B,KAChBC,EADgB,KAE5B9I,EAAoBC,wBAApBD,gBAaR,OACE,kBAACqG,EAAA,EAAD,CAAKzF,UAAU,MAAMV,UAAU,aAC7B,kBAAC6I,EAAA,EAAD,CACExG,KAAK,QACLN,KAAM1C,EACNwE,MAAO8E,EACP3B,SAjBgB,SAACnB,EAAOiD,GAC5BF,GAAeE,GAEbhJ,EADe,KAAbgJ,EACc,kFACPH,KAAiBG,GAA4B,IAAhBH,EACtB,wFAEA,mGAYhB,kBAACpI,EAAA,EAAD,CAAYG,UAAU,SAASF,QAAQ,WAAvC,mDAAiEmI,MC0DxDrJ,gBAPS,SAAAC,GACtB,MAAO,CACL2E,SAAU3E,EAAM4D,eAAee,SAC/B6E,gBAAiBxJ,EAAM4D,eAAe4F,oBATf,SAAArJ,GACzB,MAAO,CACLsJ,4BAA6BpJ,YAAmBkE,EAAmCpE,MAWxEJ,EA3BW,SAAC,GAAmC,IAAjC4E,EAAgC,EAAhCA,SAAU6E,EAAsB,EAAtBA,gBACrC,OACE,kBAACE,EAAA,EAAD,CAAOjJ,UAAU,qBAAqBkJ,UAAW,GAC/C,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVrJ,UAAU,cAET+I,EAAkB,kBAAC,EAAD,MAA+B7E,EA7C7C7C,KAAI,SAAAC,GACb,OACE,kBAAC6H,EAAA,EAAD,CAAM3H,IAAKF,EAAKG,IAAKH,MAAI,EAACgI,IAAI,EAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClD,kBAAC/H,EAAA,EAAD,CACE1B,UAAU,OACVQ,QAAQ,YAER,kBAACkJ,EAAA,EAAD,KACE,kBAAC/H,EAAA,EAAD,CACE3B,UAAU,WACV4B,MAAON,EAAKO,IACZC,MAAOR,EAAKS,OAEd,kBAACC,EAAA,EAAD,CAAahC,UAAU,gBACrB,kBAACO,EAAA,EAAD,CAAYP,UAAU,oBAAoBiC,cAAY,EAACzB,QAAQ,aAC5Dc,EAAKS,MAER,kBAAC,GAAD,CACE1C,GAAIiC,EAAKG,QAIf,kBAACU,EAAA,EAAD,CACEC,gBAAgB,GAEhB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAM,WAAWmB,EAAKkB,MAA/C,WACA,kBAAC,EAAD,CACEvD,QAASqC,e,mBChDVqI,I,OAA0B,SAAA3F,GACrC,MAAO,CACL9E,KAL+B,sBAM/BC,QAAS6E,KC2EE1E,gBAbS,SAAAC,GACtB,MAAO,CACL4E,eAAgB5E,EAAM4D,eAAegB,eACrCyF,YAAarK,EAAMsK,gBAAgBD,gBAIZ,SAAAlK,GACzB,MAAO,CACLoK,kBAAmBlK,YAAmB+J,GAAyBjK,MAIpDJ,EAhEM,SAAC,GAAwD,IAAtD6E,EAAqD,EAArDA,eAAgB2F,EAAqC,EAArCA,kBAAmBF,EAAkB,EAAlBA,YACzDG,QAAQC,IAAIJ,GAKZ,OACE,kBAAC3J,EAAA,EAAD,CACEC,SAAS,SACTF,UAAU,iBACVG,MAAM,UACN+I,UAAW,GAEX,kBAAC9I,EAAA,EAAD,CACEJ,UAAU,cAEV,kBAACK,EAAA,EAAD,CAAQ4J,QAAM,GACZ,kBAAC9D,EAAA,EAAD,CACEjF,aAAW,eACXlB,UAAU,oBAEV,kBAACoG,EAAA,EAAD,CAAMpG,UAAU,MAAMqG,KAAK,8BAA8BC,OAAO,SAASC,IAAI,cAC3E,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,gBAAgBsC,SAAS,QAAQnC,MAAM,YAEzD,kBAACiG,EAAA,EAAD,CAAMpG,UAAU,KAAKqG,KAAK,0DAA0DC,OAAO,SAASC,IAAI,cACtG,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,kBAAkBsC,SAAS,QAAQnC,MAAM,YAE3D,kBAACiG,EAAA,EAAD,CAAMpG,UAAU,MAAMqG,KAAK,wBAAwBC,OAAO,SAASC,IAAI,cACrE,kBAACpF,EAAA,EAAD,CAAMnB,UAAU,kBAAkBsC,SAAS,QAAQnC,MAAM,cAI9DgE,EAAiB,GACd,KACA,kBAAC+F,GAAA,EAAD,CACA7H,KAAK,QACLrC,UAAU,oBACVmK,MAAOC,KAAKC,KAAKlG,EAAiB,IAClCmG,MAAM,UACNnK,MAAM,YACN6G,SAtCgB,SAACnB,EAAOiD,GAChCgB,EAAkBhB,MAwCd,kBAACzI,EAAA,EAAD,CAAQ4J,QAAM,GACZ,kBAAC1J,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBCyCKlB,gBAXS,SAAAC,GACtB,MAAO,CACL4E,eAAgB5E,EAAM4D,eAAegB,eACrCE,QAAS9E,EAAM4D,eAAekB,YAIP,SAAA3E,GAAQ,MAAK,CACtC6D,mBAAoB3D,YAAmBkD,EAA0BpD,MAGpDJ,EA/EC,SAAC,GAA2C,EAAzC6E,eAA0C,IAA1BZ,EAAyB,EAAzBA,mBAMjC,OACE,kBAAC4C,EAAA,EAAD,CACEnG,UAAU,mBAEV,kBAACmJ,EAAA,EAAD,CACEC,WAAS,GAET,kBAAC/I,EAAA,EAAD,CAAQmG,QAAM,GACZ,kBAAC2C,EAAA,EAAD,CAAM7H,MAAI,EAACkI,GAAI,EAAGC,GAAI,GACpB,kBAAC3D,EAAA,EAAD,CACEtF,QAAQ,YACRR,UAAU,uBACVgG,MAAI,EACJuE,WAAY,CACVrB,UAAW,IAGb,kBAAC3I,EAAA,EAAD,CACEP,UAAU,mBACVQ,QAAQ,MAFV,qGAMA,kBAAC0F,EAAA,EAAD,CAAS1F,QAAQ,WACjB,kBAAC2F,EAAA,EAAD,CAAKnG,UAAU,mBACb,kBAACS,EAAA,EAAD,CACEgD,WAAS,EACTtD,MAAM,UACNK,QAAQ,YACRO,QAjCO,WACrBwC,EAAmB,2DAiCLlB,KAAK,SALP,gEASA,kBAAC5B,EAAA,EAAD,CACEgD,WAAS,EACTtD,MAAM,YACNK,QAAQ,YACR6B,KAAK,SAJP,kEASF,kBAAC6D,EAAA,EAAD,CAAS1F,QAAQ,WACjB,kBAAC,EAAD,SAIN,kBAAC2I,EAAA,EAAD,CACE7H,MAAI,EACJmI,GAAI,GACJD,GAAI,EACJF,GAAI,IAEJ,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,oBC/EGkB,I,OAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAMjC,OACE,yBAAK1K,UAAU,gBACb,kBAAC2K,GAAA,EAAD,CACE1C,QAAS,IACT2C,GAAIH,EACJI,eAAa,GAEb,kBAACC,GAAA,EAAD,CACE3K,MAAM,UACNe,aAAW,KACXH,QAdkB,WACxB2J,EAAaxD,QAAQ6D,OAAO,CAAEC,IAAK,EAAGC,SAAU,aAe1C,kBAAC9J,EAAA,EAAD,yBCsCK7B,gBAfS,SAAAC,GACtB,MAAO,CACL8D,gBAAiB9D,EAAM+D,qBAAqBD,gBAC5CuG,YAAarK,EAAMsK,gBAAgBD,gBAIZ,SAAAlK,GACzB,MAAO,CACLwL,8BAA+BtL,YAAmB0E,EAAqC5E,GACvFsJ,4BAA6BpJ,YAAmBkE,EAAmCpE,GACnFoK,kBAAmBlK,YAAmB+J,GAAyBjK,MAIpDJ,EAlDE,SAAC,GAAqH,IAAnH0J,EAAkH,EAAlHA,4BAA6BkC,EAAqF,EAArFA,8BAA+B7H,EAAsD,EAAtDA,gBAAiBuG,EAAqC,EAArCA,YAAaE,EAAwB,EAAxBA,kBACtGY,EAAeS,IAAM5F,YACrB6F,EAAmBxB,EAAc,EAF6F,EAG5FjF,oBAAS,GAHmF,mBAG7H0G,EAH6H,KAG/GC,EAH+G,KAKpInG,qBAAU,WACR+F,MACC,CAACA,IAEJ/F,qBAAU,WACgB,KAApB9B,GACF2F,EAA4B3F,EAbpB,GAa4C+H,KAErD,CAAC/H,EAAiBuG,IAErBzE,qBAAU,WACR2E,EAAkB,KACjB,CAACzG,IASJ,OACE,yBAAKgE,IAAKqD,EAAc1K,UAAU,mBAAmBuL,SARlC,WACfb,EAAaxD,QAAQsE,UAAY,IACnCF,GAAgB,GAEhBA,GAAgB,KAKhB,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYb,KAAMY,EAAcX,aAAcA,Q,iBCjCvCe,GAA4B,SAACC,GACxC,MAAO,CACLxM,KAVgC,uBAWhCC,QAASuM,IAWAC,GAA4B,SAACC,GACxC,MAAO,CACL1M,KAtBgC,uBAuBhCC,QAASyM,IAIAC,GAAqB,SAACH,GACjC,MAAO,CACLxM,KA5ByB,gBA6BzBC,QAASuM,IAIAI,GAAqB,SAACC,EAAOC,GACxC,MAAO,CACL9M,KAlCyB,gBAmCzBC,QAAS,CAAC4M,QAAOC,iBAIRC,GAAqB,SAACL,GACjC,MAAO,CACL1M,KAxCyB,gBAyCzBC,QAASyM,IAKAM,GAAe,SAAAC,GAC1B,MAAO,CACLjN,KA/CkB,SAgDlBC,QAASgN,I,8BCoGE7M,I,OAAAA,aARS,SAACC,GACvB,MAAO,CACL6M,QAAS7M,EAAM8M,UAAUD,QACzB/H,QAAS9E,EAAM8M,UAAUhI,YAVH,SAAC3E,GACzB,MAAO,CACL4M,oBAAqB1M,YAAmB6L,GAA2B/L,GACnE6M,aAAc3M,YAAmBiM,GAAoBnM,MAY1CJ,EAlIE,SAAC,GAA6D,IAA3DgN,EAA0D,EAA1DA,oBAAqBC,EAAqC,EAArCA,aAAcH,EAAuB,EAAvBA,QAAS/H,EAAc,EAAdA,QACtDvE,EAAoBC,wBAApBD,gBADoE,EAEpD6E,oBAAS,GAF2C,mBAErEqB,EAFqE,KAE/DwG,EAF+D,OAG5C7H,qBAH4C,mBAGrE8H,EAHqE,KAG3DC,EAH2D,OAItD/H,mBACpB,CAAEgI,OAAO,EAAOC,UAAU,IALgD,mBAIrEC,EAJqE,KAIhEC,EAJgE,OAOpDnI,mBACtB,CAAEgI,MAAO,GAAIC,SAAU,KARmD,mBAOrElB,EAPqE,KAO/DqB,EAP+D,KAWtEC,EAAqB,SAAAnH,GACzBkH,EAAQ,gBACHrB,EADE,gBAEJ7F,EAAMS,OAAOvE,KAAO8D,EAAMS,OAAOzC,SAEpCiJ,EAAO,gBACFD,EADC,gBAEHhH,EAAMS,OAAOvE,OAAQ8D,EAAMS,OAAOzC,MAAM/C,OAAS,OAIhDmM,EAAgB,SAACpH,GACrB6G,EAAY7G,EAAMqH,eAClBV,GAASxG,IAiBX,OANAb,qBAAU,WACJd,GACFvE,EAAgBuE,KAEjB,CAACA,EAASvE,IAGX,yBAAKE,UAAU,aACb,kBAACmN,GAAA,EAAD,CAAQnH,KAAMA,EAAMyG,SAAUA,EAAU1L,QAASkM,EAAeG,UAAU,eAAeC,YAAU,IAChG,gBAAGC,EAAH,EAAGA,gBAAH,OACC,kBAACC,GAAA,EAAD,iBAAUD,EAAV,CAA2BrF,QAAS,MAClC,kBAACgB,EAAA,EAAD,KACE,kBAAC1I,EAAA,EAAD,CAAYP,UAAU,iBAAiBQ,QAAQ,SAA/C,+CAKR,kBAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACoE,QAAQ,SAASC,aAAa,SAASzN,UAAU,aAC/D,kBAACmJ,EAAA,EAAD,CAAM7H,MAAI,EAACgI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG/I,UAAWuI,KACjD,kBAACpC,EAAA,EAAD,CAAa7G,UAAU,qBACrB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,SAAnC,UAEA,kBAACO,EAAA,EAAD,CAAYC,QAAQ,WAApB,mCAIA,kBAACsG,EAAA,EAAD,CACE4G,MAAOb,EAAIF,MACX3M,UAAU,aACVX,GAAG,QACH0H,MAAM,QACNvG,QAAQ,WACRuB,KAAK,QACL7C,KAAK,QACLkI,WAAY,CAAEvD,MAAO6H,EAAKiB,OAC1B3F,SAAUgG,EACVW,UAAQ,IAEV,kBAAC7G,EAAA,EAAD,CACE4G,MAAOb,EAAID,SACX5M,UAAU,aACVX,GAAG,WACH0H,MAAM,WACNvG,QAAQ,WACRuB,KAAK,WACL7C,KAAK,WACL8H,SAAUgG,EACV5F,WAAY,CAAEvD,MAAO6H,EAAKkB,UAC1Be,UAAQ,IAEV,kBAACC,GAAA,EAAD,CAAapN,QAAQ,YAAYR,UAAU,kBACzC,kBAACS,EAAA,EAAD,CACEN,MAAM,UACNyG,UAAW,kBAACzF,EAAA,EAAD,gBACXjC,KAAK,SACL6B,QA3DO,WACnBwL,EAAab,IA2DD7K,SAAUuL,GAEV,kBAAC7L,EAAA,EAAD,CAAYC,QAAQ,UAApB,mCAEF,kBAACC,EAAA,EAAD,CACEN,MAAM,UACNyG,UAAW,kBAACzF,EAAA,EAAD,gBACXjC,KAAK,SACL6B,QAxEU,WACtBuL,EAAoBZ,IAwER7K,SAAUuL,GAEV,kBAAC7L,EAAA,EAAD,CAAYC,QAAQ,UAApB,uEAEF,kBAACC,EAAA,EAAD,CAAQM,QAASkM,EAAejN,UAAU,eAAeG,MAAM,WAC7D,kBAACgB,EAAA,EAAD,+BCxHD0M,GANE,WACf,OACE,kBAAC,GAAD,OCGWC,GANO,WACpB,OACE,uD,oBCaSC,I,OAAe,CAC1B,CACEhM,KAAM,oGACNiM,KAAM,mBACNC,KAAM,UACNC,KAAK,GAEP,CACEnM,KAAM,kFACNiM,KAAM,kBACNC,KAAM,YACNC,KAAK,GAEP,CACEnM,KAAM,8FACNiM,KAAM,oBACNC,KAAM,WACNC,KAAK,GAEP,CACEnM,KAAM,0GACNiM,KAAM,qBACNC,KAAM,OACNC,KAAK,KAIHxK,GAAU,CACdyK,SAAU,CACRC,KAAM,aACN/F,SAAU,uBAEZgG,SAAU,CACRD,KAAM,eAERE,QAAS,CACPF,KAAM,YAIGG,GAAoB,WAC/B,IAAMC,EAAWC,cACXC,EAAWX,GAAavF,MAAK,SAAAlH,GAAI,OAAIqN,YAAUH,EAASI,SAAUtN,EAAK0M,SAE7E,OACE,kBAAClI,EAAA,EAAD,CACEE,MAAI,EACJxF,QAAQ,YACRR,UAAU,mBACV0D,QAAS,CACPuC,MAAO,aAETiD,UAAW,IAEX,kBAAC9H,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMR,GAAG,mBAAmBZ,UAAU,WACpC,kBAACuB,EAAA,EAAD,CACEmC,QAASA,GAAQyK,UAEjB,kBAACU,GAAA,EAAD,KACE,kBAACtO,EAAA,EAAD,CAAYC,QAAQ,MAApB,cAEI,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,iCAOV,kBAAC0F,EAAA,EAAD,CACE1F,QAAQ,SACRsO,OAAK,EACLpL,QAASA,GAAQ4K,UAElBP,GAAa1M,KAAI,SAACC,GACjB,GAAIA,EAAK4M,IACP,OACE,kBAAC3M,EAAA,EAAD,CACEvB,UAAW0O,GAAYA,EAASV,OAAS1M,EAAK0M,KAAO,iCAAmC,aACxFxM,IAAKF,EAAK0M,KACVtN,UAAWC,IACXC,GAAIU,EAAK0M,KACTxN,QAAQ,YACRkD,QAASA,GAAQyK,UAEjB,kBAACY,GAAA,EAAD,CACErL,QAASA,GAAQ2K,UAEjB,kBAAClN,EAAA,EAAD,CAAMmB,SAAS,SAAShB,EAAK2M,OAE/B,kBAACY,GAAA,EAAD,KACE,kBAACtO,EAAA,EAAD,CAAYC,QAAQ,WACjBc,EAAKS,YAQpB,kBAACR,EAAA,EAAD,CACEb,UAAWC,IACXH,QAAQ,YACRI,GAAG,aACHZ,UAAU,+CACV,kBAAC+O,GAAA,EAAD,CACErL,QAASA,GAAQ2K,UAEjB,kBAAClN,EAAA,EAAD,CAAMmB,SAAS,SAAf,SAEF,kBAACuM,GAAA,EAAD,KACE,kBAACtO,EAAA,EAAD,CAAYC,QAAQ,WAApB,0E,sEC7GJwO,I,OAAS,CACb,CACEC,MAAO,EACPhB,KAAM,KACNlH,MAAO,+FAET,CACEkI,MAAO,EACPhB,KAAM,IACNlH,MAAO,0DAET,CACEkI,MAAO,EACPhB,KAAM,IACNlH,MAAO,gEAET,CACEkI,MAAO,IACPhB,KAAM,IACNlH,MAAO,oFAyHIzH,gBAbS,SAAAC,GACtB,MAAO,CACLyM,YAAazM,EAAM8M,UAAUN,MAAMC,YACnCG,OAAQ5M,EAAM8M,UAAUN,MAAMI,WAIP,SAAAzM,GACzB,MAAO,CACLwP,OAAQtP,YAAmBsM,GAAcxM,MAI9BJ,EApHE,SAAC,GAAqC,IAAnC4P,EAAkC,EAAlCA,OAAQlD,EAA0B,EAA1BA,YAA0B,KAAbG,OACPxH,mBAAS,OADW,mBAC7C8H,EAD6C,KACnCC,EADmC,OAExB/H,oBAAS,GAFe,mBAE7CwK,EAF6C,KAErCC,EAFqC,KAI9CC,EAAYL,GAAOxG,MAAK,SAAAlH,GAAI,OAAIA,EAAK2N,QAAUjD,MAAgB,EAc/DsD,EAAoB,WACxBF,GAAU,IAOZ,OACE,6BACE,kBAACG,GAAA,EAAD,CACEC,IAAI,OACJzO,QAxBiB,SAAA8E,GACrB6G,EAAY7G,EAAMqH,gBAwBdlN,UAAU,eAETqP,EAAUpB,MAEb,kBAACwB,GAAA,EAAD,CACEpQ,GAAG,cACHoN,SAAUA,EACViD,aAAW,EACX1J,KAAM2J,QAAQlD,GACd1G,QA9BkB,WACtB2G,EAAY,OA8BRxD,UAAW,EACX0G,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAGd,kBAACE,GAAA,EAAD,CAAUpP,UAAQ,GAChB,kBAACN,EAAA,EAAD,CAAYC,QAAQ,YAAYL,MAAM,WAAtC,+CACYkP,EAAUtI,QAGxB,kBAACkJ,GAAA,EAAD,CAAUlP,QA3CS,WACvBqO,GAAU,KA0CN,4BACA,kBAACa,GAAA,EAAD,CAAUrP,GAAG,SAASG,QApCN,WACpBmO,KAmCkDxO,UAAWC,KAAzD,mCAEF,kBAACuP,GAAA,EAAD,CACElK,KAAMmJ,EACNpJ,QAASuJ,EACTa,kBAAgB,qBAChBtI,mBAAiB,4BAEjB,kBAACuI,GAAA,EAAD,CAAa/Q,GAAG,sBAAhB,mFACA,kBAACgR,GAAA,EAAD,KACE,kBAAC9P,EAAA,EAAD,CAAYC,QAAQ,aAClB,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,WAAlC,oGADF,iSAMA,kBAACI,EAAA,EAAD,CAAYC,QAAQ,aAClB,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,WAAlC,+DADF,uWAMA,kBAACI,EAAA,EAAD,CAAYC,QAAQ,aAClB,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,WAAlC,qEADF,sZAMA,kBAACI,EAAA,EAAD,CAAYC,QAAQ,aAClB,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,WAAlC,uFADF,ujBAOF,kBAACmQ,GAAA,EAAD,KACE,kBAAC7P,EAAA,EAAD,CAAQM,QAASuO,EAAmBnP,MAAM,UAAUoQ,WAAS,GAA7D,oDC1GKjR,I,OAAAA,eArBU,WACvB,IAAMkP,EAAWC,cACXC,EAAWX,GAAavF,MAAK,SAAAlH,GAAI,OAAIqN,YAAUH,EAASI,SAAUtN,EAAK0M,SAE7E,OACE,kBAAC/N,EAAA,EAAD,CACEC,SAAS,SACTC,MAAM,WAEN,kBAACC,EAAA,EAAD,CACEJ,UAAU,sBAEV,kBAACO,EAAA,EAAD,CAAYC,QAAQ,cACJgQ,IAAb9B,EAAyBA,EAAS3M,KAAO,IAE5C,kBAAC,GAAD,YCmBOzC,gBAXS,SAAAC,GACtB,MAAO,CACL4M,OAAQ5M,EAAM8M,UAAUN,MAAMI,WAIP,SAAAzM,GACzB,MAAO,KAIMJ,EAjCQ,WACrB,OACE,kBAAC6J,EAAA,EAAD,CACEC,WAAS,EACTpJ,UAAU,eAEV,kBAACmJ,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACf,kBAACN,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACb,kBAAC,GAAD,OAEF,kBAACN,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,EAAGzJ,UAAU,gBAC1B,kBAAC,GAAD,OAEF,kBAACmJ,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACb,kBAACtD,EAAA,EAAD,CAAKX,MAAO,CAAEiL,OAAQ,GAAIC,QAAS,KACjC,kBAACC,GAAD,YChBGC,GAA6B,WACxC,MAAO,CACL1R,KAZkC,2BAezB2R,GAA6B,SAAA3N,GACxC,MAAO,CACLhE,KAhBkC,yBAiBlCC,QAAS+D,IAUA4N,GAA8B,SAAAzR,GACzC,MAAO,CACLH,KA3BgC,uBA4BhCC,QAASE,IAWA0R,GAA8B,SAAA1M,GACzC,MAAO,CACLnF,KAvCgC,uBAwChCC,QAASkF,IAIA2M,GAAqC,SAAC3R,EAAI4R,GACrD,MAAO,CACL/R,KA7C6C,oCA8C7CC,QAAS,CACPE,KACA4R,aAYOC,GAAqC,SAAC7M,GACjD,MAAO,CACLnF,KA5D6C,oCA6D7CC,QAASkF,I,sECwDE/E,I,OAAAA,aAjBS,SAAAC,GACtB,MAAO,CACL8E,QAAS9E,EAAM4R,gBAAgB9M,QAC/BnB,WAAY3D,EAAM4R,gBAAgBjO,WAClCkJ,QAAS7M,EAAM4R,gBAAgB/E,QAC/BgF,mBAAoB7R,EAAM8R,qBAAqBjF,YAIxB,SAAA1M,GACzB,MAAO,CACL4R,qBAAsB1R,YAAmBgR,GAA4BlR,GACrE6R,sBAAuB3R,YAAmBkR,GAA6BpR,GACvE8R,6BAA8B5R,YAAmBoR,GAAoCtR,MAI1EJ,EAvGY,SAAC,GAQrB,IAPL4D,EAOI,EAPJA,WACAoO,EAMI,EANJA,qBACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,6BACAJ,EAGI,EAHJA,mBACAhF,EAEI,EAFJA,QACA/H,EACI,EADJA,QAEQvE,EAAoBC,wBAApBD,gBAKRqF,qBAAU,WACRmM,MACC,IAEHnM,qBAAU,WACJd,GACFvE,EAAgBuE,KAEjB,CAACA,IAEJ,IAAMrB,EAAY,WAChB,OACE,yBAAKhD,UAAU,aACb,kBAACiD,EAAA,EAAD,QAKN,OACE,yBAAKjD,UAAU,cACb,kBAACyR,GAAA,EAAD,CAAgBzR,UAAU,kBAAkBU,UAAWuI,KACrD,kBAACyI,GAAA,EAAD,CAAOC,cAAY,EAACtP,KAAK,QAAQnB,aAAW,sBAC1C,kBAAC0Q,GAAA,EAAD,CAAW5R,UAAU,iBACnB,kBAAC6R,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,gHACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,4GACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,gDAGJ,kBAACC,GAAA,EAAD,KACG9O,EAAW7B,KAAI,SAAA4Q,GACd,OACE,kBAACJ,GAAA,EAAD,CAAUrQ,IAAKyQ,EAAIxQ,KACjB,kBAACqQ,GAAA,EAAD,CAAWpR,UAAU,KAAKwR,MAAM,OAC7BD,EAAIxQ,KAEP,kBAACqQ,GAAA,EAAD,KAAYG,EAAIlQ,MAChB,kBAAC+P,GAAA,EAAD,CAAWC,MAAM,UAEb,QAAUE,EAAIxQ,IACV,kBAACuB,EAAD,MACA,kBAACmP,GAAA,EAAD,CACAhS,MAAM,UACN4B,KAAMkQ,EAAIxQ,IACVwP,QAASgB,EAAIxH,OAAQ,EACrBzD,SAAU,SAACnB,GAlDE,IAACxG,EAAI4R,EAAJ5R,EAmDiB4S,EAAIxQ,IAnDjBwP,EAmDsBpL,EAAMS,OAAO2K,QAlD3EO,EAA6BnS,EAAI4R,IAoDXpQ,SAAUuL,GAAWgF,KAI7B,kBAACU,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC/Q,EAAA,EAAD,CACEhB,UAAU,eACVe,QAAS,WAAQwQ,EAAsBU,EAAIxQ,MAC3CZ,SAAUuL,GAAWgF,GAErB,kBAACjQ,EAAA,EAAD,qCCpFTiR,GAA2B,SAACrO,EAAOC,GAC9C,MAAO,CACL9E,KAbgC,uBAchCC,QAAS,CACP4E,QACAC,UAKOqO,GAA2B,SAACnO,EAAUC,GACjD,MAAO,CACLjF,KAtBgC,uBAuBhCC,QAAS,CACP+E,WACAC,oBAKOmO,GAA2B,SAAAjO,GACtC,MAAO,CACLnF,KA/BgC,uBAgChCC,QAASkF,IAIAkO,GAA6B,SAAClT,EAAI4R,GAC7C,MAAO,CACL/R,KAlCoC,2BAmCpCC,QAAS,CACPE,KACA4R,aAYOuB,GAA6B,SAAAnO,GACxC,MAAO,CACLnF,KAjDoC,2BAkDpCC,QAASkF,IAIAoO,GAA6B,SAAApT,GACxC,MAAO,CACLH,KA7D+B,sBA8D/BC,QAASE,IAWAqT,GAA6B,SAAArO,GACxC,MAAO,CACLnF,KAzE+B,sBA0E/BC,QAASkF,IAIAsO,GAAmB,SAAA3O,GAC9B,MAAO,CACL9E,KA5EuB,cA6EvBC,QAAS6E,I,oBCPE1E,I,OAAAA,aAZS,SAAAC,GACtB,MAAO,CACL2E,SAAU3E,EAAMqT,cAAc1O,aAIP,SAAAxE,GACzB,MAAO,CACL+E,eAAgB7E,YAAmBgE,EAAsBlE,MAI9CJ,EA/DQ,SAAC,GAAkC,IAAhC4E,EAA+B,EAA/BA,SAAUO,EAAqB,EAArBA,eAAqB,GAC/B0G,IAAM5F,YACJZ,mBAAS,KAFoB,mBAEzCO,GAFyC,WAGjD2N,EAAgBC,aAAoB,CACxCC,UAAW,QACXC,UAAW,SAAAC,GAAM,OAAIA,EAAOlR,QAe9B,OACE,yBACE/B,UAAU,uBAEV,kBAACkT,GAAA,EAAD,CACEzP,WAAS,EACTpB,KAAK,QACLhD,GAAG,WACH8T,QAASjP,EAASkP,MAAK,SAAA9R,GAAI,OAAIA,EAAKS,QACpCsR,eAAgB,SAACJ,GAAD,OAAYA,EAAOlR,MAAQkR,GAC3CjM,SAlBgB,SAACnB,EAAOiD,GAE1BrE,EADc,OAAbqE,EACc,IAEAA,EAAS/G,MAAQ+G,IAe9BwK,UAAQ,EACRC,cAAY,EACZC,eAAa,EACbC,YAAa,SAACC,GAAD,OACX,kBAAC5M,EAAA,EAAD,iBAAe4M,EAAf,CACE3M,MAAM,qGACNvG,QAAQ,eAGZmT,aAAc,SAACrS,GAAD,OACZ,kBAACf,EAAA,EAAD,CAAYC,QAAQ,SAASc,EAAKS,KAAlC,OAA6C,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,WAAWc,EAAKyB,YAGnF6Q,cApCgB,SAAC/N,EAAOiD,GAC5B5D,EAAS4D,IAoCL+J,cAAeA,SCqGRvT,I,OAAAA,aApBS,SAAAC,GACtB,MAAO,CACL6M,QAAS7M,EAAMqT,cAAcxG,QAC7BlI,SAAU3E,EAAMqT,cAAc1O,SAC9BG,QAAS9E,EAAMqT,cAAcvO,QAC7BwP,kBAAmBtU,EAAMqT,cAAciB,kBACvC1P,eAAgB5E,EAAMqT,cAAczO,eACpCyF,YAAarK,EAAMqT,cAAchJ,gBAIV,SAAAlK,GACzB,MAAO,CACLoU,mBAAoBlU,YAAmBwS,GAA0B1S,GACjEqU,qBAAsBnU,YAAmB2S,GAA4B7S,GACrEsU,qBAAsBpU,YAAmB6S,GAA4B/S,GACrEuU,WAAYrU,YAAmB+S,GAAkBjT,MAItCJ,EAlIU,SAAC,GAWnB,IAVL8M,EAUI,EAVJA,QACAlI,EASI,EATJA,SACA4P,EAQI,EARJA,mBACAC,EAOI,EAPJA,qBACAF,EAMI,EANJA,kBACAG,EAKI,EALJA,qBACA3P,EAII,EAJJA,QACAF,EAGI,EAHJA,eACAyF,EAEI,EAFJA,YACAqK,EACI,EADJA,WAEQnU,EAAoBC,wBAApBD,gBAERqF,qBAAU,WACR2O,EAAmB,GAAIlK,EAAc,KACpC,CAACA,IAEJzE,qBAAU,WACJd,GACFvE,EAAgBuE,KAEjB,CAACA,IAEJ,IAAM6P,EAAwB,SAACrO,GAC7BkO,EAAqBlO,EAAMS,OAAOvE,KAAM8D,EAAMS,OAAO2K,UAWjDkD,EAAe,WACnB,OACE,kBAAC1C,GAAA,EAAD,CAAgBzR,UAAU,kBAAkBU,UAAWuI,KACrD,kBAACyI,GAAA,EAAD,CAAOC,cAAY,EAACtP,KAAK,QAAQnB,aAAW,oBAC1C,kBAAC0Q,GAAA,EAAD,CAAW5R,UAAU,iBACnB,kBAAC6R,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,gEACA,kBAACA,GAAA,EAAD,qEACA,kBAACA,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,4GACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,kFACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,gDAGJ,kBAACC,GAAA,EAAD,KACG9N,EAAS7C,KAAI,SAAA4Q,GACZ,OACE,kBAACJ,GAAA,EAAD,CAAUrQ,IAAKyQ,EAAIxQ,KACjB,kBAACqQ,GAAA,EAAD,CAAWpR,UAAU,KAAKwR,MAAM,OAC7BD,EAAIxQ,KAEP,kBAACqQ,GAAA,EAAD,KAAaG,EAAIlQ,MACjB,kBAAC+P,GAAA,EAAD,KAAaG,EAAImC,QACjB,kBAACtC,GAAA,EAAD,KAAaG,EAAIzP,OACjB,kBAACsP,GAAA,EAAD,CAAWC,MAAM,UACf,kBAACI,GAAA,EAAD,CAAUtR,SAAUgT,IAAsB5B,EAAIxQ,IAAKtB,MAAM,UAAU4B,KAAMkQ,EAAIxQ,IAAKwP,QAASgB,EAAIxH,KAAMzD,SAAUkN,KAEjH,kBAACpC,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC/Q,EAAA,EAAD,CACEN,UAAW0F,IACXxF,GAAI,CACFgO,SAAS,kBAAD,OAAoBqD,EAAIxQ,KAChClC,MAAO,CAAEF,GAAI4S,EAAIxQ,MAEnBZ,SAAUgT,IAAsB5B,EAAIxQ,KAEpC,kBAACN,EAAA,EAAD,eAGJ,kBAAC2Q,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC/Q,EAAA,EAAD,CACED,QAAS,WAlDP,IAAC1B,IAkD4B4S,EAAIxQ,IAjDrDuS,EAAqB3U,IAkDHwB,SAAUgT,IAAsB5B,EAAIxQ,KAEpC,kBAACN,EAAA,EAAD,iCAYpB,OACE,kBAAC8H,EAAA,EAAD,CAAOjJ,UAAU,iBACf,kBAAC,GAAD,MACCoM,EAAU,kBAAC,EAAD,CAAWpM,UAAU,cAAiB,kBAACmU,EAAD,MAChDhQ,EAAiB,GACd,kBAAC+F,GAAA,EAAD,CACAlK,UAAU,yBACV6D,MAAO+F,EACPO,MAAOC,KAAKC,KAAKlG,EAAiB,IAClChE,MAAM,YACN6G,SAvEkB,SAACnB,EAAOiD,GAChCmL,EAAWnL,MAwEL,U,oBCpIGuL,I,OAA0B,SAAA3I,GACrC,MAAO,CACLxM,KAP+B,sBAQ/BC,QAASuM,KAWA4I,GAA0B,SAAAjQ,GACrC,MAAO,CACLnF,KAnB+B,sBAoB/BC,QAASkF,IAIAG,GAAqB,WAChC,MAAO,CACLtF,KAzByB,eCsKdI,gBAnBS,SAAAC,GACtB,MAAO,CACL6M,QAAS7M,EAAMgV,oBAAoBnI,QACnCS,IAAKtN,EAAMgV,oBAAoB1H,IAC/B3J,WAAY3D,EAAM4R,gBAAgBjO,WAClCsR,kBAAmBjV,EAAM4R,gBAAgB/E,QACzC/H,QAAS9E,EAAMgV,oBAAoBlQ,YAIZ,SAAA3E,GACzB,MAAO,CACL+U,kBAAmB7U,YAAmByU,GAAyB3U,GAC/DgV,kBAAmB9U,YAAmB0U,GAAyB5U,GAC/D4R,qBAAsB1R,YAAmBgR,GAA4BlR,GACrEgF,aAAc9E,YAAmB4E,GAAoB9E,MAI1CJ,EA9JQ,SAAC,GAQjB,IAPL+E,EAOI,EAPJA,QACA+H,EAMI,EANJA,QACAqI,EAKI,EALJA,kBACAvR,EAII,EAJJA,WACAoO,EAGI,EAHJA,qBACAkD,EAEI,EAFJA,kBACA9P,EACI,EADJA,aAEQ5E,EAAoBC,wBAApBD,gBADJ,EAEoB6E,mBACtB,CACE5C,KAAM,GACNgB,SAAU,GACVqR,OAAQ,GACRvS,IAAK,GACLK,YAAa,GACbM,MAAO,KATP,mBAEGkJ,EAFH,KAESqB,EAFT,KAaEC,EAAqB,SAAAnH,GACzBkH,EAAQ,gBAAKrB,EAAN,gBAAa7F,EAAMS,OAAOvE,KAAO8D,EAAMS,OAAOzC,UA+BvD,OAxBAsB,qBAAU,WACRmM,MACC,IAEHnM,qBAAU,WACQ,mHAAZd,GACF0I,EAAQ,CACNhL,KAAM,GACNgB,SAAU,GACVqR,OAAQ,GACRvS,IAAK,GACLK,YAAa,GACbM,MAAO,OAGV,IAEH2C,qBAAU,WACJd,IACFvE,EAAgBuE,GAChBK,OAED,CAACL,IAGF,kBAAC4E,EAAA,EAAD,CAAOjJ,UAAU,gBACf,kBAAC6G,EAAA,EAAD,CACE7G,UAAU,mBACVyQ,OAAO,QACP9C,UAAQ,EACRtL,KAAK,QACLoB,WAAS,GAET,kBAACkR,GAAA,EAAD,CACE3U,UAAU,sBADZ,qGAGA,kBAAC4U,GAAA,EAAD,CACE5U,UAAU,oBACV6D,MAAO6H,EAAK3I,SACZiE,SAAUgG,EACVjL,KAAK,WACL8S,cAAY,EACZrU,QAAQ,WACR6B,KAAK,QACLxB,SAAU2T,EACV/Q,WAAS,GAET,kBAACwM,GAAA,EAAD,CAAUpM,MAAM,GAAGhD,UAAQ,GAA3B,2GAGCqC,EAAW7B,KAAI,SAAAC,GACd,OAAQ,kBAAC2O,GAAA,EAAD,CAAUzO,IAAKF,EAAKS,KAAM8B,MAAOvC,EAAKS,MAAOT,EAAKS,UAG9D,kBAAC+E,EAAA,EAAD,CACErD,WAAS,EACTpE,GAAG,OACH0H,MAAM,mDACNvG,QAAQ,WACRuB,KAAK,OACLM,KAAK,QACL2E,SAAUgG,EACVnJ,MAAO6H,EAAK3J,OAEd,kBAAC+E,EAAA,EAAD,CACErD,WAAS,EACTpE,GAAG,SACH0H,MAAM,qEACNvG,QAAQ,WACRuB,KAAK,SACLM,KAAK,QACL2E,SAAUgG,EACVnJ,MAAO6H,EAAK0I,SAEd,kBAACtN,EAAA,EAAD,CACEzH,GAAG,QACH0H,MAAM,2BACNvG,QAAQ,WACRuB,KAAK,QACLM,KAAK,QACL2E,SAAUgG,EACVnJ,MAAO6H,EAAKlJ,MACZiB,WAAS,IAEX,kBAACqD,EAAA,EAAD,CACEzH,GAAG,cACH0H,MAAM,mDACNvG,QAAQ,WACRuB,KAAK,cACLM,KAAK,QACL2E,SAAUgG,EACVnJ,MAAO6H,EAAKxJ,YACZuB,WAAS,IAEX,kBAACqD,EAAA,EAAD,CACEzH,GAAG,MACH0H,MAAM,2EACNvG,QAAQ,WACRuB,KAAK,MACLM,KAAK,QACL2E,SAAUgG,EACVnJ,MAAO6H,EAAK7J,IACZ4B,WAAS,IAEX,kBAAChD,EAAA,EAAD,CAAQT,UAAU,kBAAkBQ,QAAQ,YAAYL,MAAM,UAAUU,SAAUuL,EAASrL,QA5GvE,WACxB0T,EAAkB/I,KA2Gd,yDC5IKoJ,I,OAA2B,SAAC/S,GACvC,MAAO,CACL7C,KANgC,uBAOhCC,QAAS4C,KAWAgT,GAA2B,SAAC1Q,GACvC,MAAO,CACLnF,KAlBgC,uBAmBhCC,QAASkF,ICyDE/E,gBAfS,SAAAC,GACtB,MAAO,CACL8E,QAAS9E,EAAM8R,qBAAqBhN,QACpC+H,QAAS7M,EAAM8R,qBAAqBjF,QACpC4I,QAASzV,EAAM8R,qBAAqB2D,YAIb,SAAAtV,GACzB,MAAO,CACLuV,mBAAoBrV,YAAmBkV,GAA0BpV,GACjEgF,aAAc9E,YAAmB4E,EAAoB9E,MAI1CJ,EAnES,SAAC,GAMlB,IALL+E,EAKI,EALJA,QACA4Q,EAII,EAJJA,mBACA7I,EAGI,EAHJA,QACA4I,EAEI,EAFJA,QACAtQ,EACI,EADJA,aACI,EAC4BC,mBAAS,CAAE5C,KAAM,KAD7C,mBACGgB,EADH,KACamS,EADb,KAEIpV,EAAoBC,wBAApBD,gBAMFqV,EAAcC,uBAAY,WAC9BH,EAAmBlS,EAAShB,QAC3B,CAACgB,EAAShB,KAAMkT,IAenB,OAbA9P,qBAAU,WACJ6P,GACFE,EAAY,CAAEnT,KAAM,OAErB,CAACiT,IAEJ7P,qBAAU,WACJd,IACFvE,EAAgBuE,GAChBK,OAED,CAACL,EAASvE,IAGX,yBAAKE,UAAU,4BACb,kBAACiJ,EAAA,EAAD,CAAOjJ,UAAU,yBACf,kBAAC2U,GAAA,EAAD,4HACA,kBAAC7N,EAAA,EAAD,CACErD,WAAS,EACTpE,GAAG,iBACH0H,MAAM,mDACNvG,QAAQ,WACRuB,KAAK,OACLM,KAAK,QACL2E,SAhCmB,SAAAnB,GACzBqP,EAAY,CAAEnT,KAAM8D,EAAMS,OAAOzC,SAgC3BA,MAAOd,EAAShB,KAChBsT,aAAa,QAEf,kBAAC5U,EAAA,EAAD,CAAQT,UAAU,mBAAmBQ,QAAQ,YAAYL,MAAM,UAAUU,SAAUuL,EAASrL,QAASoU,GAArG,yDCjCO7V,gBAJS,SAAAC,GACtB,MAAO,KAG+B,KAAzBD,EAjBQ,WACrB,OACE,kBAAC6J,EAAA,EAAD,CAAMC,WAAS,EAACpJ,UAAU,mBACxB,kBAACmJ,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACb,kBAAC,GAAD,OAEF,kBAACN,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACb,kBAAC,GAAD,W,oBC4CO6L,I,OArDK,WAAO,IAAD,EACQ3Q,mBAAS,MADjB,mBACjB8H,EADiB,KACPC,EADO,KAOlB6I,EAAqB,WACzB7I,EAAY,OAGR1G,EAAO2J,QAAQlD,GACrB,OACE,4BAAQzM,UAAU,iBAChB,kBAACwV,GAAA,EAAD,CACEnW,GAAG,oBACH2G,KAAMA,EACNyG,SAAUA,EACVoD,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdhK,QAASwP,EACTE,qBAAmB,GAEnB,kBAAClV,EAAA,EAAD,CAAYC,QAAQ,WAApB,6EACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,8CACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAApB,6DACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAApB,qFACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,aAAlC,wJAEF,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAACC,EAAA,EAAD,CACED,QAAQ,WACRL,MAAM,UACNuV,YAAW1P,EAAO,yBAAsBwK,EACxC5K,gBAAc,OACdJ,MAAO,CAACC,OAAO,MACfkQ,aAvCoB,SAAC9P,GACzB6G,EAAY7G,EAAMqH,gBAuCdnM,QAASwU,EACTK,aAAcL,EACd5R,QAAS,kBAACxC,EAAA,EAAD,cATX,wB,8BCzCO0U,I,OAAS,CACpB,CAACC,KAAM,qEAAeC,KAAM,mIAC5B,CAACD,KAAM,6CAAWC,KAAM,qGACxB,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,4EAAiBC,KAAM,+FAC9B,CAACD,KAAM,mDAAYC,KAAM,iHACzB,CAACD,KAAM,mDAAYC,KAAM,iHACzB,CAACD,KAAM,yDAAaC,KAAM,+FAC1B,CAACD,KAAM,6CAAWC,KAAM,+FACxB,CAACD,KAAM,6CAAWC,KAAM,qGACxB,CAACD,KAAM,wFAAmBC,KAAM,2GAChC,CAACD,KAAM,iCAASC,KAAM,+IACtB,CAACD,KAAM,mDAAYC,KAAM,+FACzB,CAACD,KAAM,mDAAYC,KAAM,qGACzB,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,iCAASC,KAAM,qGACtB,CAACD,KAAM,mDAAYC,KAAM,+FACzB,CAACD,KAAM,6CAAWC,KAAM,iHACxB,CAACD,KAAM,mDAAYC,KAAM,qGACzB,CAACD,KAAM,uCAAUC,KAAM,qGACvB,CAACD,KAAM,yDAAaC,KAAM,iHAC1B,CAACD,KAAM,wFAAmBC,KAAM,gJAChC,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,mDAAYC,KAAM,qGACzB,CAACD,KAAM,0GAAsBC,KAAM,iHACnC,CAACD,KAAM,yDAAaC,KAAM,+IAC1B,CAACD,KAAM,6CAAWC,KAAM,2GACxB,CAACD,KAAM,2BAAQC,KAAM,+FACrB,CAACD,KAAM,6CAAWC,KAAM,yFACxB,CAACD,KAAM,uFAAkBC,KAAM,+FAC/B,CAACD,KAAM,+DAAcC,KAAM,+FAC3B,CAACD,KAAM,yDAAaC,KAAM,2GAC1B,CAACD,KAAM,0DAAcC,KAAM,+IAC3B,CAACD,KAAM,2EAAgBC,KAAM,mIAC7B,CAACD,KAAM,yDAAaC,KAAM,qGAC1B,CAACD,KAAM,6CAAWC,KAAM,iHACxB,CAACD,KAAM,6CAAWC,KAAM,qGACxB,CAACD,KAAM,2BAAQC,KAAM,qGACrB,CAACD,KAAM,iCAASC,KAAM,qGACtB,CAACD,KAAM,mDAAYC,KAAM,+FACzB,CAACD,KAAM,yDAAaC,KAAM,+FAC1B,CAACD,KAAM,+DAAcC,KAAM,iHAC3B,CAACD,KAAM,mDAAYC,KAAM,uHACzB,CAACD,KAAM,iCAASC,KAAM,uHACtB,CAACD,KAAM,mDAAYC,KAAM,uHACzB,CAACD,KAAM,mDAAYC,KAAM,+IACzB,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,yDAAaC,KAAM,+IAC1B,CAACD,KAAM,6CAAWC,KAAM,2GACxB,CAACD,KAAM,iCAASC,KAAM,qGACtB,CAACD,KAAM,2EAAgBC,KAAM,qGAC7B,CAACD,KAAM,mDAAYC,KAAM,+FACzB,CAACD,KAAM,iCAASC,KAAM,2GACtB,CAACD,KAAM,2BAAQC,KAAM,yFACrB,CAACD,KAAM,yDAAaC,KAAM,6HAC1B,CAACD,KAAM,uCAAUC,KAAM,+FACvB,CAACD,KAAM,6CAAWC,KAAM,uHACxB,CAACD,KAAM,iCAASC,KAAM,2GACtB,CAACD,KAAM,mDAAYC,KAAM,+FACzB,CAACD,KAAM,6CAAWC,KAAM,iHACxB,CAACD,KAAM,uCAAUC,KAAM,2GACvB,CAACD,KAAM,qEAAeC,KAAM,iHAC5B,CAACD,KAAM,qEAAeC,KAAM,qGAC5B,CAACD,KAAM,mDAAYC,KAAM,2GACzB,CAACD,KAAM,mDAAYC,KAAM,uHACzB,CAACD,KAAM,mDAAYC,KAAM,uHACzB,CAACD,KAAM,+DAAcC,KAAM,+FAC3B,CAACD,KAAM,yDAAaC,KAAM,+FAC1B,CAACD,KAAM,uCAAUC,KAAM,2FCnEZC,I,OAAgB,SAAAC,GAC3B,MAAO,CACL/W,KAJoB,WAKpBC,QAAS8W,KCkDE3W,eAAQ,MANI,SAAAI,GACzB,MAAO,CACLwW,QAAStW,YAAmBoW,GAAetW,MAIhCJ,EA5CU,SAAC,GAAiB,IAAf4W,EAAc,EAAdA,QAEpBrD,EAAgBC,aAAoB,CACxCC,UAAW,QACXC,UAAW,SAAAC,GAAM,OAAIA,EAAO6C,QAG9B,OACE,0BAAM9V,UAAU,eAAeqV,aAAa,OAC1C,kBAACvO,EAAA,EAAD,CAAWrD,WAAS,EAACpE,GAAG,QAAQ0C,KAAK,QAAQgF,MAAM,kFAAiBvG,QAAQ,WAAWmN,UAAQ,IAC/F,kBAAC7G,EAAA,EAAD,CAAWrD,WAAS,EAACpE,GAAG,OAAO0C,KAAK,OAAOgF,MAAM,uEAAgBvG,QAAQ,WAAWmN,UAAQ,IAC5F,kBAACuF,GAAA,EAAD,CAAczP,WAAS,EACrBpE,GAAG,OACH8T,QAAS0C,GAAOzC,MAAK,SAAA9R,GAAI,OAAIA,EAAKwU,QAClCzC,eAAgB,SAACJ,GAAD,OAAYA,EAAO6C,MACnCrC,YAAa,SAACC,GAAD,OAAY,kBAAC5M,EAAA,EAAD,iBAAe4M,EAAf,CAAuB3M,MAAM,kFAAiBvG,QAAQ,WAAWmN,UAAQ,MAClGgG,aAAc,SAACrS,GAAD,OACZ,6BACE,kBAACf,EAAA,EAAD,CAAYC,QAAQ,SAASc,EAAKwU,MAClC,kBAACvV,EAAA,EAAD,CAAYC,QAAQ,WAAWc,EAAKyU,QAGxClD,cAAeA,IAEjB,kBAAC/L,EAAA,EAAD,CACErD,WAAS,EACTpE,GAAG,QACH0C,KAAK,QACLgF,MAAM,QACNvG,QAAQ,WACR2V,WAAW,0RAEb,kBAAC5V,EAAA,EAAD,CAAYC,QAAQ,WAApB,uGACA,kBAACC,EAAA,EAAD,CAAQD,QAAQ,YAAYL,MAAM,UAAUY,QAAS,kBAAMmV,EAAQ,KAAnE,oECZS5W,I,OAAAA,YAAQ,MANI,SAAAI,GACzB,MAAO,CACLwW,QAAStW,YAAmBoW,GAAetW,MAIhCJ,EAxBK,SAAC,GAAiB,IAAf4W,EAAc,EAAdA,QACrB,OACE,0BAAMlW,UAAU,gBACd,kBAAC8G,EAAA,EAAD,CAAWzH,GAAG,WAAWsO,UAAQ,EAAC5G,MAAM,gEAAcvG,QAAQ,aAC9D,kBAACsG,EAAA,EAAD,CAAWzH,GAAG,WAAWsO,UAAQ,EAAC5G,MAAM,4EAAgBvG,QAAQ,aAChE,yBAAKR,UAAU,gBACb,kBAAC8G,EAAA,EAAD,CAAWzH,GAAG,WAAWsO,UAAQ,EAAC5G,MAAM,4EAAgBvG,QAAQ,aAChE,kBAACsG,EAAA,EAAD,CAAWzH,GAAG,WAAWsO,UAAQ,EAAC5G,MAAM,MAAMvG,QAAQ,cAExD,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,uGACA,yBAAKR,UAAU,sBACb,kBAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWL,MAAM,UAAUY,QAAS,kBAAMmV,EAAQ,KAAlE,kCACA,kBAACzV,EAAA,EAAD,CAAQD,QAAQ,YAAYL,MAAM,UAAUY,QAAS,kBAAMmV,EAAQ,KAAnE,sEC+EO5W,I,OAAAA,YAAQ,MANI,SAAAI,GACzB,MAAO,CACLwW,QAAStW,YAAmBoW,GAAetW,MAIhCJ,EAzFW,SAAC,GAAiB,IAAf4W,EAAc,EAAdA,QAAc,EACTvR,mBAAS,MADA,mBAClC8H,EADkC,KACxBC,EADwB,OAEX/H,oBAAS,GAFE,mBAEzByR,GAFyB,aAGbzR,oBAAS,GAHI,mBAG1B0R,GAH0B,aAIf1R,mBAAS,IAJM,mBAIlCd,EAJkC,KAI3BqB,EAJ2B,KAUnCqQ,EAAqB,WACzB7I,EAAY,OAiBR1G,EAAO2J,QAAQlD,GACrB,OACE,0BAAMzM,UAAU,iBACd,kBAACwV,GAAA,EAAD,CACEnW,GAAG,mBACH2G,KAAMA,EACNyG,SAAUA,EACVoD,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QAEdhK,QAASwP,EACTE,qBAAmB,GAEnB,kBAAClV,EAAA,EAAD,CAAYC,QAAQ,SAApB,6BAEF,kBAACsG,EAAA,EAAD,CACErD,WAAS,EACTpE,GAAG,MACHH,KAAK,WACL6H,MAAM,+IACNvG,QAAQ,WACRL,MAAM,UACN6G,SAzCgB,SAAAnB,GACpBX,EAASW,EAAMS,OAAOzC,QAyClB8J,UAAQ,EACRpG,WAAY,CACVC,aACE,kBAACC,EAAA,EAAD,CACEvH,SAAS,OAET,kBAACiB,EAAA,EAAD,CACEqE,MAAO,CAAEC,OAAQ,MACjBkQ,aA1DY,SAAC9P,GACzB6G,EAAY7G,EAAMqH,gBA0DN0I,aAAcL,EACdpV,MAAM,WAJR,YAYR,kBAACI,EAAA,EAAD,CAAYC,QAAQ,WAApB,iGACA,yBAAKR,UAAU,sBACb,kBAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWL,MAAM,UAAUY,QAAS,kBAAMmV,EAAQ,KAAlE,kCACA,kBAACzV,EAAA,EAAD,CAAQD,QAAQ,YAAYL,MAAM,UAAUY,QA3D1B,WACR,SAAV8C,GACFuS,GAAW,GACXF,EAAQ,KAERG,GAAU,GACVH,EAAQ,MAqDN,4EC3EFI,GAAQ,CACZ,CACE5V,UAAW,eACXqG,MAAO,qGAET,CACErG,UAAW,UACXqG,MAAO,kHAET,CACErG,UAAW,eACXqG,MAAO,wHA0FIzH,gBAbS,SAAAC,GACtB,MAAO,CACL0W,KAAM1W,EAAMgX,WAAWN,SAIA,SAAAvW,GACzB,MAAO,CACLwW,QAAStW,YAAmBoW,GAAetW,MAKhCJ,EAtFI,SAAC,GAAuB,IAArB2W,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAoD1B,OACE,0BAAMlW,UAAU,eAnDG,WACnB,OAAQiW,GACN,KAAK,EACH,OAAO,kBAAC,GAAD,MAET,KAAK,EACH,OAAO,kBAAC,GAAD,MAET,KAAK,EACH,OACE,yBAAKjW,UAAU,kBACb,kBAACmB,EAAA,EAAD,CAAMmB,SAAS,QAAQtC,UAAU,gBAAjC,SACA,kBAACO,EAAA,EAAD,CAAYC,QAAQ,aAApB,wJACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAApB,iOACA,kBAACC,EAAA,EAAD,CACED,QAAQ,YACRL,MAAM,UACNO,UAAWC,IACXI,QAAS,WAAOmV,EAAQ,IACxBtV,GAAG,KALL,4DAYN,KAAK,EACH,OACE,yBAAKZ,UAAU,kBACb,kBAACmB,EAAA,EAAD,CAAMmB,SAAS,QAAQtC,UAAU,eAAjC,SACA,kBAACO,EAAA,EAAD,CAAYC,QAAQ,aAApB,6LACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAApB,yFACA,kBAACC,EAAA,EAAD,CACED,QAAQ,YACRL,MAAM,UACNO,UAAWC,IACXI,QAAS,WAAOmV,EAAQ,IACxBtV,GAAG,KALL,4DAYN,QACE,OAAO,kBAAC,GAAD,OAOR4V,GACD,kBAACC,GAAA,EAAD,CAASC,WAAYT,GAClBK,GAAMjV,KAAI,SAACC,EAAMqV,GAChB,IACMC,EAAa,GAInB,OAHa,IAAVD,IACDL,GAAM,GAAGM,WAAWlJ,OAAQ,GAG5B,kBAACmJ,GAAA,EAAD,eAAMrV,IAAKF,EAAKZ,WANA,IAOd,kBAACoW,GAAA,EAAcF,EAAatV,EAAKyF,gBC7EhCgQ,GATG,WAChB,OACE,kBAACC,GAAA,EAAD,CAAWC,SAAS,KAAKvW,UAAWuI,KAClC,kBAAC,GAAD,MACA,kBAAC,GAAD,QCJOiO,GAAiC,SAAA7X,GAC5C,MAAO,CACLH,KAPwC,+BAQxCC,QAASE,IAkBAmF,GAAqB,WAChC,MAAO,CACLtF,KAzByB,kBC2BvBiY,I,OAAS,CACb,CACEpV,KAAM,OACNgF,MAAO,uEAET,CACEhF,KAAM,WACNgF,MAAO,0DAET,CACEhF,KAAM,QACNgF,MAAO,4BAET,CACEhF,KAAM,MACNgF,MAAO,sEAET,CACEhF,KAAM,cACNgF,MAAO,oDAET,CACEhF,KAAM,SACNgF,MAAO,gEAET,CACEhF,KAAM,OACNgF,MAAO,0CA0MIzH,gBAjBS,SAAAC,GACtB,MAAO,CACLN,QAASM,EAAM6X,UAAUnY,QACzBoF,QAAS9E,EAAM6X,UAAU/S,QACzB+H,QAAS7M,EAAM6X,UAAUhL,QACzBlJ,WAAY3D,EAAM4D,eAAeD,eAIV,SAAAxD,GACzB,MAAO,CACL2X,2BAA4BzX,YAAmBsX,GAAgCxX,GAC/EgF,aAAc9E,YAAmB4E,GAAoB9E,GACrD4R,qBAAsB1R,YAAmB0E,EAAqC5E,MAInEJ,EAtMO,SAAC,GAShB,IARLkP,EAQI,EARJA,SACA6I,EAOI,EAPJA,2BACApY,EAMI,EANJA,QACAoF,EAKI,EALJA,QACAK,EAII,EAJJA,aACA0H,EAGI,EAHJA,QACAkF,EAEI,EAFJA,qBACApO,EACI,EADJA,WAEQpD,EAAoBC,wBAApBD,gBADJ,EAEoB6E,mBAAS,CAC/B5C,KAAM,GACNS,MAAO,GACPX,IAAK,yGACLkB,SAAU,yDACVqR,OAAQ,GACRlS,YAAa,GACboV,KAAM,KATJ,mBAEG5L,EAFH,KAESqB,EAFT,KAWJ5H,qBAAU,WACRkS,EAA2B7I,EAASjP,MAAMF,IAC1CiS,MACC,IAEHnM,qBAAU,WACJlG,EAAQ8C,MACVgL,EAAQ,CACNhL,KAAM9C,EAAQ8C,KACdS,MAAOvD,EAAQuD,MACfX,IAAK5C,EAAQ4C,IACbkB,SAAU9D,EAAQ8D,SAClBqR,OAAQnV,EAAQmV,OAChBlS,YAAajD,EAAQiD,YACrBoV,KAAMrY,EAAQqY,SAGjB,CAACrY,IAEJkG,qBAAU,WACJd,IACFvE,EAAgBuE,GAChBK,OAED,CAACL,IAEJ,IAAMkT,EAAcC,OAAOC,KAAKxY,GAASyY,QAAO,SAAAlW,GAC9C,OAAQA,GACN,IAAK,MACL,IAAK,MACL,IAAK,OAAQ,OAAO,EACpB,QAAS,OAAO,MAoBdwL,EAAqB,SAAAnH,GACzBkH,EAAQ,gBAAKrB,EAAN,gBAAa7F,EAAMS,OAAOvE,KAAO8D,EAAMS,OAAOzC,UAGjD8T,EAAe,SAAA9R,GACnBkH,EAAQ,gBAAKrB,EAAN,gBAAa7F,EAAMqH,cAAcnL,KAAO9C,EAAQ4G,EAAMqH,cAAcnL,UAGvE6V,EAAiB,SAACtW,GACtB,GAAa,aAATA,GAAuBrC,EAAQqC,KAAUoK,EAAKpK,GAChD,OACE,kBAACN,EAAA,EAAD,CAAYqB,KAAK,QAAQN,KAAMT,EAAMP,QAAS4W,GAAc,kBAACxW,EAAA,EAAD,CAAMmB,SAAS,SAAf,aAKlE,OACE,kBAAC6G,EAAA,EAAD,CAAMC,WAAS,EAAC1I,UAAWuI,KACxBmD,QAA6BoE,IAAlB9E,EAAK3I,SACb,kBAAC,EAAD,MAEF,oCACE,kBAACoG,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,GACb,kBAACtD,EAAA,EAAD,CAAKnG,UAAU,+BACb,kBAAC6G,EAAA,EAAD,CACEpD,WAAS,EACTzD,UAAU,uBAEV,kBAAC2U,GAAA,EAAD,iHACC4C,EAAYlW,KAAI,SAAAC,GAAI,MAAc,aAATA,EACtB,kBAACwF,EAAA,EAAD,CACA+Q,QAAM,EACN9Q,MAAOoQ,GAAO3O,MAAK,SAAAzB,GAAK,OAAIA,EAAMhF,OAAST,KAAMyF,MACjDhF,KAAMT,EACNE,IAAKF,EACLuC,MAAO6H,EAAKpK,GACZ0F,SAAUgG,EACVzF,WAAY,CACVC,aAAcoQ,EAAetW,KAG9B4B,EAAW7B,KAAI,SAAC4R,GAAD,OACd,kBAAChD,GAAA,EAAD,CAAUzO,IAAKyR,EAAOxR,IAAKoC,MAAOoP,EAAOlR,MACtCkR,EAAOlR,UAIZ,kBAAC+E,EAAA,EAAD,CACAC,MAAOoQ,GAAO3O,MAAK,SAAAzB,GAAK,OAAIA,EAAMhF,OAAST,KAAMyF,MACjDhF,KAAMT,EACNE,IAAKF,EACLuC,MAAO6H,EAAKpK,GACZ0F,SAAUgG,EACVzF,WAAY,CACVC,aAAcoQ,EAAetW,YAOzC,kBAAC6H,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,EAAGzJ,UAAU,uBAC1B,kBAAC0B,EAAA,EAAD,CACE1B,UAAU,OACVQ,QAAQ,YAER,kBAACmB,EAAA,EAAD,CACE3B,UAAU,WACV8B,MAAO4J,EAAK3J,MAEZ,yBACE+V,MAAM,OACNC,OAAO,OACPC,IAAKtM,EAAK7J,OAGd,kBAACG,EAAA,EAAD,CAAahC,UAAU,gBACrB,kBAACO,EAAA,EAAD,CAAYP,UAAU,oBAAoBiC,cAAY,EAACzB,QAAQ,aAC5DkL,EAAK3J,MAER,kBAACoE,EAAA,EAAD,CAAKzF,UAAU,MAAMV,UAAU,aAC7B,kBAAC6I,EAAA,EAAD,CACExG,KAAK,QACLN,KAAK,SACL8B,MAAO,EACPhD,UAAQ,IAEV,kBAACN,EAAA,EAAD,CAAYG,UAAU,SAASF,QAAQ,WAAvC,uDAGJ,kBAAC2B,EAAA,EAAD,CACEC,gBAAgB,GAEhB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAM,WAAWuL,EAAKlJ,MAA/C,WACA,kBAACxB,EAAA,EAAD,CAAYb,MAAM,WAAU,kBAACgB,EAAA,EAAD,2BAMtC,kBAACgI,EAAA,EAAD,CAAM7H,MAAI,EAACmI,GAAI,IACb,kBAACrJ,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAQM,QAtHS,WACvBgM,EAAQ,CACNhL,KAAM9C,EAAQ8C,KACdS,MAAOvD,EAAQuD,MACfX,IAAK5C,EAAQ4C,IACbkB,SAAU9D,EAAQ8D,SAClBqR,OAAQnV,EAAQmV,OAChBlS,YAAajD,EAAQiD,YACrBoV,KAAMrY,EAAQqY,SA8GV,oDACA,kBAAC7W,EAAA,EAAD,CAAQM,QA3GQ,cA2GhB,gEC9LJkX,GAAkB,SAAA1Y,GACtB,MAAO,CACL2Y,OAAQ3Y,EAAM8M,UAAU6L,SAIfC,GAAS7Y,YAAQ2Y,GAAR3Y,EAtCA,SAAC,GAAgB,IAAd4Y,EAAa,EAAbA,OACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlK,KAAK,SAAStN,UAAWwX,EAASE,GAAiBvK,KAC1D,kBAAC,IAAD,CAAOG,KAAK,aAAaqK,OAAK,EAAC3X,UAAWoN,KAC1C,kBAAC,IAAD,CAAOE,KAAK,SAASqK,OAAK,EAAC3X,UAAWqW,KACtC,kBAAC,IAAD,CAAO/I,KAAK,IAAIqK,OAAK,EAAC3X,UAAW4X,KACjC,kBAAC,IAAD,CAAU1X,GAAG,UAgCN+P,GAAcrR,YAAQ2Y,GAAR3Y,EA3BO,SAAC,GACjC,OADgD,EAAb4Y,OAG/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlK,KAAK,mBAAmBqK,OAAK,EAAC3X,UAAW6X,KAChD,kBAAC,IAAD,CAAOvK,KAAK,kBAAkBqK,OAAK,EAAC3X,UAAW8X,KAC/C,kBAAC,IAAD,CAAOxK,KAAK,qBAAqBqK,OAAK,EAAC3X,UAAW+X,KAClD,kBAAC,IAAD,CAAOzK,KAAK,oBAAoBqK,OAAK,EAAC3X,UAAWgY,KACjD,kBAAC,IAAD,CAAU9X,GAAG,sBAKf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,GAAG,e,qBC5BfmL,KAAS4M,eAAeC,QAAQ,UAAWD,eAAeC,QAAQ,SAElEC,GAAa,WACjB,IACE,OAAOC,KAAIC,OAAOhN,GAAO,SACzB,MAAOiN,GACP,OAAO,IAILC,GAAe,CACnBvN,KAAM,GACNU,SAAS,EACTL,MAAO8M,KACPX,SAAUW,KACVxU,QAAS,MCZL4U,GAAe,CACnBpF,kBAAmB,GACnBzH,SAAS,EACTlI,SAAU,GACVG,QAAS,KACTuF,YAAa,EACbzF,eAAgB,GCjBZ8U,GAAe,CACnB7M,SAAS,EACT/H,QAAS,MCSL4U,GAAe,CACnB/V,WAAY,GACZkJ,SAAS,EACT/H,QAAS,MCdL4U,GAAe,CACnB7M,SAAS,EACT/H,QAAS,KACT2Q,SAAS,GCHLiE,GAAe,CACnB5V,gBAAiB,0DCOb4V,GAAe,CACnB/V,WAAY,GACZgB,SAAU,GACV6E,iBAAiB,EACjB3F,mBAAmB,EACnBiB,QAAS,KACTF,eAAgB,GCdZ8U,GAAe,CACnBpV,MAAO,I,UCDHoV,GAAe,CACnBzZ,KAAM0Z,aAAaN,QAAQ,iBAAmBO,KAAKC,MAAMF,aAAaN,QAAQ,kBAAoB,ICD9FK,GAAe,CACnBrP,YAAa,GCDTqP,GAAe,CACnBhD,KAAM,EACNoD,WAAW,GCHPJ,GAAe,CACnBha,QAAS,GACTmN,SAAS,EACT/H,QAAS,MCUEiV,GAAcC,YAAgB,CACzClN,UZauB,WAAmC,IAAlC9M,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACzD,OAAQA,EAAOta,MACb,I7B/BgC,uB6BgC9B,OAAO,gBACFK,EADL,CAEEmM,KAAM8N,EAAOra,QACbiN,SAAS,EACT/H,QAAS,OAGb,I7BtCgC,uB6BiDhC,I7BhDgC,uB6BiD9B,OAAO,gBACF9E,EADL,CAEEmM,KAAM,CACJiB,MAAO,GACPC,SAAU,IAEZR,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,I7B1DyB,gB6B2DvB,OAAO,gBACFI,EADL,CAEEmM,KAAM,CACJiB,MAAO,GACPC,SAAU,IAEZR,SAAS,EACT/H,QAAS,OAGb,I7BpEyB,gB6BqEvB,OAAO,gBACF9E,EADL,CAEEmM,KAAM,CACJiB,MAAO,GACPC,SAAU,IAEZR,SAAS,EACT/H,QAAS,KACT0H,MAAOyN,EAAOra,QAAQ4M,MACtBmM,QAAQ,IAGZ,I7BhFyB,gB6BiFvB,OAAO,gBACF3Y,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,I7BtFkB,S6BuFhB,OAAO,gBACFI,EADL,CAEEwM,MAAO,KACPmM,QAAQ,EACRxM,KAAM,CACJiB,MAAO,GACPC,SAAU,IAEZvI,QAAS,OAGb,QAAS,OAAO9E,IYvFlBqT,cXM2B,WAAmC,IAAlCrT,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC7D,OAAQA,EAAOta,MACb,IpBzBgC,uBoB0B9B,OAAO,gBAAIK,EAAX,CAAkB6M,SAAS,EAAM/H,QAAS,OAC5C,IpB1BgC,uBoB2B9B,OAAO,gBAAI9E,EAAX,CAAkB6M,SAAS,EAAOlI,SAAUsV,EAAOra,QAAQ+E,SAAUC,eAAgBqV,EAAOra,QAAQgF,iBACtG,IpB3BgC,uBoB4B9B,OAAO,gBAAI5E,EAAX,CAAkB6M,SAAS,EAAOlI,SAAU,GAAIG,QAASmV,EAAOra,QAASgF,eAAgB,IAC3F,IpBzBoC,2BoB0BlC,OAAO,gBAAI5E,EAAX,CAAkBsU,kBAAmB2F,EAAOra,QAAQE,GAAIgF,QAAS,OACnE,IpB1BoC,2BoB4BpC,IpB3BoC,2BoB4BlC,OAAO,gBAAI9E,EAAX,CAAkBsU,kBAAmB,GAAIxP,QAASmV,EAAOra,UAC3D,IpBlC+B,sBoBmC7B,OAAO,gBAAII,EAAX,CAAkBsU,kBAAmB2F,EAAOra,QAAQE,GAAIgF,QAAS,OACnE,IpBnC+B,sBoBqC/B,IpBpC+B,sBoBqC7B,OAAO,gBAAI9E,EAAX,CAAkBsU,kBAAmB,GAAIxP,QAASmV,EAAOra,UAC3D,IpBlCuB,coBmCrB,OAAO,gBAAII,EAAX,CAAkBqK,YAAa4P,EAAOra,UACxC,QACE,OAAO,gBAAKI,KW5BhBgV,oBVViC,WAAmC,IAAlChV,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACnE,OAAQA,EAAOta,MACb,IlBV+B,sBkBW7B,OAAO,gBACFK,EADL,CAEE6M,SAAS,IAGb,IlBf+B,sBkBsB/B,IlBrB+B,sBkBsB7B,OAAO,gBACF7M,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,IlB3ByB,akB4BvB,OAAO,gBACFI,EADL,CAEE8E,QAAS,OAGb,QAAS,OAAO9E,IUjBlB4R,gBTC6B,WAAmC,IAAlC5R,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC/D,OAAQA,EAAOta,MACb,IxBtBkC,yBwBuBhC,OAAO,gBACFK,EADL,CAEE6M,SAAS,EACT/H,QAAS,OAGb,IxB5BkC,yBwB6BhC,OAAO,gBACF9E,EADL,CAEE6M,SAAS,EACTS,IAAK,KACL3J,WAAYsW,EAAOra,QACnBkF,QAAS,OAGb,IxBpCkC,yBwBqChC,OAAO,gBACF9E,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,IxB1CgC,uBwB2C9B,OAAO,gBACFI,EADL,CAEE6M,SAAS,EACT/H,QAAS,OAGb,IxBhDgC,uBwBuDhC,IxBtDgC,uBwBuD9B,OAAO,gBACF9E,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,IxB5D6C,oCwB6D3C,OAAO,gBACFI,EADL,CAEE6M,SAAS,EACT/H,QAAS,OAGb,IxBlE6C,oCwByE7C,IxBxE6C,oCwByE3C,OAAO,gBACF9E,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,UAGpB,QACE,OAAO,gBACFI,KSrET8R,qBRXkC,WAAmC,IAAlC9R,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACpE,OAAQA,EAAOta,MACb,IlBXgC,uBkBY9B,OAAO,gBACFK,EADL,CAEE6M,SAAS,EACT/H,QAAS,KACT2Q,SAAS,IAGb,IlBlBgC,uBkBmB9B,OAAO,gBACFzV,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,QAChB6V,SAAS,IAGb,IlBzBgC,uBkB0B9B,OAAO,gBACFzV,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,QAChB6V,SAAS,IAGb,QACE,OAAO,gBAAKzV,KQfhB4D,eND4B,WAAmC,IAAlC5D,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC9D,OAAQA,EAAOta,MACb,I7CtB2C,kC6CuBzC,OAAO,gBACFK,EADL,CAEEwJ,iBAAiB,EACjB1E,QAAS,KACTH,SAAU,KAGd,I7C7B2C,kC6C8BzC,OAAO,gBACF3E,EADL,CAEEwJ,iBAAiB,EACjB1E,QAAS,KACTH,SAAUsV,EAAOra,QAAQ+E,SACzBC,eAAgBqV,EAAOra,QAAQgF,iBAGnC,I7CrC2C,kC6CsCzC,OAAO,gBACF5E,EADL,CAEEwJ,iBAAiB,EACjB7E,SAAU,GACVG,QAASmV,EAAOra,QAChBgF,eAAgB,IAGpB,I7C7C4C,oC6C8C1C,OAAO,gBACF5E,EADL,CAEE6D,mBAAmB,EACnBiB,QAAS,KACTnB,WAAY,KAGhB,I7CpD4C,oC6CqD1C,OAAO,gBACF3D,EADL,CAEE6D,mBAAmB,EACnBF,WAAYsW,EAAOra,QACnBkF,QAAS,OAGb,I7C3D4C,oC6C4D1C,OAAO,gBACF9E,EADL,CAEE6D,mBAAmB,EACnBF,WAAY,GACZmB,QAASmV,EAAOra,UAGpB,I7ClEyB,gB6CmEvB,OAAO,gBACFI,EADL,CAEE8E,QAAS,OAGb,QACE,OAAO9E,IMzDX+D,qBPfkC,WAAmC,IAAlC/D,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACpE,OAAQA,EAAOta,MACb,IhDTgC,uBgDU9B,OAAO,gBACFK,EADL,CAEE8D,gBAAiBmW,EAAOra,UAG5B,QAAS,OAAOI,IOQlBka,YLhByB,WAAmC,IAAlCla,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC3D,OAAQA,EAAOta,MACb,I/CT4B,mB+CU1B,OAAO,gBACFK,EADL,CAEEsE,MAAO2V,EAAOra,UAGlB,QAAS,OAAOI,IKSlBE,kBJjB+B,WAAmC,IAAlCF,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACjE,OAAQA,EAAOta,MACb,IrDTgC,uBqDU9B,OAAO,gBACFK,EADL,CAEEC,KAAK,GAAD,oBAAMD,EAAMC,MAAZ,CAAkBga,EAAOra,YAGjC,IrDdkC,yBqDehC,OAAO,gBACFI,EADL,CAEEC,KAAMD,EAAMC,KAAKkY,QAAO,SAAApW,GAAI,OAAIA,EAAKG,MAAQ+X,EAAOra,aAGxD,QAAS,OAAOI,IIIlBsK,gBHlB6B,WAAmC,IAAlCtK,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC/D,OAAQA,EAAOta,MACb,I3CT+B,sB2CU7B,OAAO,gBACFK,EADL,CAEEqK,YAAa4P,EAAOra,UAGxB,QAAS,OAAOI,IGWlBgX,WFlBwB,WAAmC,IAAlChX,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCAC1D,OAAQA,EAAOta,MACb,InBVoB,WmBWlB,OAAO,gBACFK,EADL,CAEE0W,KAAMuD,EAAOra,UAGjB,QAAS,OAAOI,IEWlB6X,UDnBuB,WAAmC,IAAlC7X,EAAiC,uDAAzB0Z,GAAcO,EAAW,uCACzD,OAAQA,EAAOta,MACb,IdVwC,+BcWtC,OAAO,gBACFK,EADL,CAEE6M,SAAS,EACTnN,QAAS,KAGb,IdhBwC,+BciBtC,OAAO,gBACFM,EADL,CAEE6M,SAAS,EACTnN,QAASua,EAAOra,UAGpB,IdtBuC,8BcuBrC,OAAO,gBACFI,EADL,CAEE6M,SAAS,EACT/H,QAASmV,EAAOra,QAChBF,QAAS,KAGb,Id7ByB,gBc8BvB,OAAO,gBACFM,EADL,CAEE8E,QAAS,OAGb,QAAS,OAAO9E,M,mDEDVma,I,aAaAC,I,aAcAC,I,aAIAC,IAnDJC,GAAgB,SAAApO,GACpB,OAAOqO,MAAM,qBAAsB,CACjCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAL,gBAAoBtH,IAC1BwO,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGzBC,GAAa,SAAC5O,GAClB,OAAOqO,MAAM,kBAAmB,CAC9BC,OAAQ,OACRC,KAAMd,KAAKnG,UAAL,gBAAoBtH,IAC1BwO,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAG/B,SAAUX,GAAmBF,GAA7B,wEAEiB,OAFjB,kBAEuBe,aAAKT,GAAeN,EAAOra,SAFlD,YAEUqb,EAFV,QAGaC,OAHb,gBAIM,OAJN,SAIYC,a1CzBH,CACLxb,KAhBgC,uBAiBhCC,Q0CuBsCqb,EAAKnW,UAJ/C,8BAMM,OANN,UAMYqW,aAAI/O,GAA0B6O,EAAKnW,UAN/C,gCASI,OATJ,oCASUqW,aAAI/O,GAA0B,iOATxC,uDAaA,SAAUgO,GAAYH,GAAtB,wEAEiB,OAFjB,kBAEuBe,aAAKD,GAAYd,EAAOra,SAF/C,YAEUqb,EAFV,QAGaC,OAHb,iBAIM,OAJN,SAIYC,aAAI5O,GAAmBgN,KAAIC,OAAOyB,EAAKzO,MAAO,WAJ1D,OAKM,OALN,SAKY4M,eAAegC,QAAQ,QAASH,EAAKzO,OALjD,+BAOM,OAPN,UAOY2O,aAAIzO,GAAmBuO,EAAKnW,UAPxC,gCAUI,OAVJ,oCAUUqW,aAAIzO,GAAmB,iOAVjC,uDAcA,SAAU2N,GAAaJ,GAAvB,kEACE,OADF,SACQb,eAAeiC,WAAW,SADlC,wCAIA,SAAUf,KAAV,kEACE,OADF,SACQgB,a1CrE4B,uB0CqEKnB,IADzC,OAEE,OAFF,SAEQmB,a1CnEqB,gB0CmEKlB,IAFlC,OAGE,OAHF,SAGQkB,a1CjEc,S0CiEKjB,IAH3B,wCAMeC,U,aCzBLiB,I,aASAC,I,aAcAC,I,aAcAC,IApEJC,GAAgB,SAAC,GAAmB,IAAlBnX,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAC7B,OAAO+V,MAAM,uCAAwC,CACnDC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAACjP,QAAOC,SAC7BkW,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGzBc,GAAqB,SAAChc,GAC1B,OAAO4a,MAAM,qBAAsB,CACjCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAL,gBAAmB7T,IACzB+a,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGzBe,GAAkB,SAAC/b,GACvB,OAAO0a,MAAM,oBAAqB,CAChCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAAC3T,OACtB6a,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAG/B,SAAUS,GAAkBtB,GAA5B,wEAEiB,OAFjB,kBAEuBe,aAAKW,GAAe1B,EAAOra,SAFlD,OAGI,OADMqb,EAFV,gBAGUE,aAAIrI,GAAyBmI,EAAKtW,SAAUsW,EAAKrW,iBAH3D,8BAKI,OALJ,mCAKUuW,aAAIpI,GAAyB,4GALvC,sDASA,SAAUyI,GAAoBvB,GAA9B,wEAEiB,OAFjB,kBAEuBe,aAAKY,GAAoB3B,EAAOra,SAFvD,YAEUqb,EAFV,QAGYC,OAHZ,iBAIM,OAJN,SAIYC,ajCbH,CACLxb,KA3CoC,2BA4CpCC,QiCWuCqb,EAAKnW,UAJhD,OAKM,OALN,SAKYqW,aAAIrI,GAAyBmI,EAAKtW,WAL9C,+BAOM,OAPN,UAOYwW,aAAIlI,GAA2BgI,EAAKnW,UAPhD,gCAUI,OAVJ,oCAUUqW,aAAIlI,GAA2B,4GAVzC,uDAcA,SAAUwI,GAAiBxB,GAA3B,wEAEiB,OAFjB,kBAEuBe,aAAKa,GAAiB5B,EAAOra,SAFpD,YAEUqb,EAFV,QAGaC,OAHb,iBAIM,OAJN,SAIYC,ajCNH,CACLxb,KAnE+B,sBAoE/BC,QiCIuCqb,EAAKnW,UAJhD,OAKM,OALN,SAKYqW,aAAIrI,GAAyBmI,EAAKtW,WAL9C,+BAOM,OAPN,UAOYwW,aAAIpI,GAAyBkI,EAAKnW,UAP9C,gCAUI,OAVJ,oCAUUqW,aAAIhI,GAA2B,4GAVzC,uDAcA,SAAUuI,KAAV,kEACE,OADF,SACQJ,ajCvF4B,uBiCuFKC,IADzC,OAEE,OAFF,SAEQD,ajClFgC,2BiCkFKE,IAF7C,OAGE,OAHF,SAGQF,ajCtF2B,sBiCsFKG,IAHxC,wCAMeC,U,aCtELI,I,aAcAC,IAxBJC,GAAqB,SAAC7P,GAC1B,OAAOqO,MAAM,oBAAqB,CAChCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAL,gBAAmBtH,IACzBwO,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAG/B,SAAUgB,GAAiB7B,GAA3B,wEAEiB,OAFjB,kBAEuBe,aAAKgB,GAAoB/B,EAAOra,SAFvD,YAEUqb,EAFV,QAGaC,OAHb,gBAIM,OAJN,SAIYC,a/BbH,CACLxb,KAb+B,sBAc/BC,Q+BWoCqb,EAAKnW,UAJ7C,WAMQmW,EAAKgB,OANb,iBAOM,OAPN,UAOYd,aAAIpG,GAAwBkG,EAAKnW,UAP7C,gCAUI,OAVJ,oCAUUqW,aAAIpG,GAAwB,4GAVtC,uDAcA,SAAUgH,KAAV,kEACE,OADF,SACQT,a/BrC2B,sB+BqCKQ,IADxC,wCAIeC,U,aCILG,I,aASAC,I,aAcCC,I,aAcDC,IAhEJC,GAAkB,WACtB,OAAO9B,MAAM,sBAAuB,CAClCC,OAAQ,QACPG,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAGf0B,GAAsB,SAAC1c,GAC3B,OAAO0a,MAAM,sBAAuB,CAClCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAAC3T,OACtB6a,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAIf2B,GAA6B,SAAC7c,GAClC,OAAO4a,MAAM,uBAAwB,CACnCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAL,gBAAmB7T,IACzB+a,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAG/B,SAAUoB,KAAV,wEAEiB,OAFjB,kBAEuBlB,aAAKsB,IAF5B,OAGI,OADMrB,EAFV,gBAGUE,aAAI7J,GAA2B2J,IAHzC,8BAKI,OALJ,mCAKUE,arC3BD,CACLxb,KArBkC,yBAsBlCC,QqCyBqC,4GALzC,sDASA,SAAUuc,GAAkBlC,GAA5B,wEAEiB,OAFjB,kBAEuBe,aAAKwB,GAAqBvC,EAAOra,SAFxD,YAEUqb,EAFV,QAGaC,OAHb,iBAIM,OAJN,SAIYC,aAAI7J,GAA2B2J,EAAKtX,aAJhD,OAKM,OALN,SAKYwX,arCtBH,CACLxb,KAjCgC,uBAkChCC,QqCoBwCqb,EAAKnW,UALjD,+BAOM,OAPN,UAOYqW,aAAI3J,GAA4ByJ,EAAKnW,UAPjD,gCAUI,OAVJ,oCAUUqW,aAAI3J,GAA4B,4GAV1C,uDAcC,SAAU4K,GAA4BnC,GAAtC,wEAEgB,OAFhB,kBAEsBe,aAAKyB,GAA4BxC,EAAOra,SAF9D,YAESqb,EAFT,QAGYC,OAHZ,iBAIK,OAJL,SAIWC,aAAI7J,GAA2B2J,EAAKtX,aAJ/C,OAKK,OALL,SAKWwX,arCZH,CACLxb,KAtD6C,oCAuD7CC,QqCU+Cqb,EAAKnW,UALvD,+BAOK,OAPL,UAOWqW,aAAIxJ,GAAmCsJ,EAAKnW,UAPvD,gCAUG,OAVH,oCAUSqW,aAAIxJ,GAAmC,4GAVhD,uDAcD,SAAU0K,KAAV,kEACE,OADF,SACQf,arClF8B,yBqCkFKY,IAD3C,OAEE,OAFF,SAEQZ,arChF4B,uBqCgFKa,IAFzC,OAGE,OAHF,SAGQb,arC9EyC,oCqC8EKc,IAHtD,wCAMeC,U,aCrELK,I,aAcAC,IAxBJC,GAAsB,SAACpa,GAC3B,OAAOgY,MAAM,sBAAuB,CAClCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAACjR,SACtBmY,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAG/B,SAAU4B,GAAkBzC,GAA5B,wEAEiB,OAFjB,kBAEuBe,aAAK4B,GAAqB3C,EAAOra,SAFxD,YAEUqb,EAFV,QAGaC,OAHb,iBAIM,OAJN,SAIYC,aAAI7J,GAA2B2J,EAAKtX,aAJhD,OAKM,OALN,SAKYwX,a/BXH,CACLxb,KAZgC,uBAahCC,Q+BSqCqb,EAAKnW,UAL9C,+BAOM,OAPN,UAOYqW,aAAI3F,GAAyByF,EAAKnW,UAP9C,gCAUI,OAVJ,oCAUUqW,aAAI3F,GAAyB,4GAVvC,uDAcA,SAAUmH,KAAV,kEACE,OADF,SACQrB,a/BjC4B,uB+BiCKoB,IADzC,wCAIeC,U,aCnBLE,I,aAaAC,I,aAaAC,IAxCJC,GAAyB,SAAC,GAA6B,IAA5BxZ,EAA2B,EAA3BA,SAAUgB,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAChD,OAAO+V,MAAM,yCAA0C,CACrDC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAACjQ,WAAUgB,QAAOC,SACvCkW,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAGfmC,GAA2B,WAC/B,OAAOzC,MAAM,kCAAkCI,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAGjE,SAAU+B,GAA4B5C,GAAtC,wEAEiB,OAFjB,kBAEuBe,aAAKgC,GAAwB/C,EAAOra,SAF3D,YAEUqb,EAFV,QAGYC,OAHZ,gBAIM,OAJN,SAIYC,aAAIzW,EAAkCuW,EAAKtW,SAAUsW,EAAKrW,iBAJtE,8BAMM,OANN,UAMYuW,aAAItW,EAAiCoW,EAAKnW,UANtD,gCASI,OATJ,oCASUqW,aAAItW,EAAiC,oOAT/C,uDAaA,SAAUiY,KAAV,wEAEiB,OAFjB,kBAEuB9B,aAAKiC,IAF5B,YAEUhC,EAFV,QAGYC,OAHZ,gBAIM,OAJN,SAIYC,azDUH,CACLxb,KAzC4C,oCA0C5CC,QyDZgDqb,EAAKtX,aAJzD,8BAMM,OANN,UAMYwX,aAAInW,EAAoCiW,EAAKnW,UANzD,gCASI,OATJ,oCASUqW,aAAInW,EAAoC,oOATlD,uDAaA,SAAU+X,KAAV,kEACE,OADF,SACQzB,azD5CuC,kCyD4CKuB,IADpD,OAEE,OAFF,SAEQvB,azD1CwC,oCyD0CMwB,IAFtD,wCAKeC,U,aChCLG,I,aAgBAC,IA1BJC,GAAwB,SAACC,GAC7B,OAAO7C,MAAM,sCAAuC,CAClDC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAAC4J,gBACtB1C,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAGrB,SAAUoC,GAA0BjD,GAApC,wEACE,OADF,SACQkB,aAAI5X,EAAyB,KADrC,OAGiB,OAHjB,kBAGuByX,aAAKoC,GAAuBnD,EAAOra,SAH1D,YAGUqb,EAHV,QAIYC,OAJZ,iBAKM,OALN,SAKYC,aAAIzW,EAAkCuW,EAAKtW,SAAUsW,EAAKrW,iBALtE,OAMM,OANN,UAMYuW,aAAIrI,GAAyBmI,EAAKtW,WAN9C,gCAQM,OARN,UAQYwW,aAAItW,EAAiCoW,EAAKnW,UARtD,QASM,OATN,UASYqW,aAAIpI,GAAyBkI,EAAKnW,UAT9C,gCAYI,OAZJ,oCAYUqW,aAAItW,EAAiC,mKAZ/C,uDAgBA,SAAUsY,KAAV,kEACE,OADF,SACQ7B,a3DjCwB,mB2DiCK4B,IADrC,wCAIeC,U,aC7BLG,I,aAKAC,IATJC,GAAoB,SAACvd,GACzB0Z,aAAayB,QAAQ,gBAAkBxB,KAAKnG,UAAUxT,KAGxD,SAAUqd,KAAV,wEACe,OADf,SACqBhF,cAAO,SAAAtY,GAAK,OAAIA,EAAME,kBAAkBD,QAD7D,OAEE,OADMA,EADR,gBAEQ+a,aAAKwC,GAAkBvd,GAF/B,wCAKA,SAAUsd,KAAV,kEACE,OADF,SACQE,ajEb4B,uBiEaIH,IADxC,OAEE,OAFF,SAEQG,ajEb8B,yBiEaIH,IAF1C,wCAKeC,U,aCJLG,I,aAWAC,IArBJC,GAAsB,SAAA9d,GAC1B,OAAO0a,MAAM,qBAAsB,CACjCC,OAAQ,OACRC,KAAMd,KAAKnG,UAAU,CAAC3T,OACtB6a,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAAA2B,GAAG,OAAIA,EAAIzB,WAGrB,SAAU4C,GAAkBzD,GAA5B,wEAEiB,OAFjB,kBAEuBe,aAAK4C,GAAqB3D,EAAOra,SAFxD,YAEUqb,EAFV,QAGYC,OAHZ,gBAIM,OAJN,SAIYC,axBJH,CACLxb,KAbwC,+BAcxCC,QwBE2Cqb,EAAKvb,UAJpD,8BAMM,OANN,UAMYyb,axBCH,CACLxb,KAnBuC,8BAoBvCC,QwBH0Cqb,EAAKnW,UANnD,iHAWA,SAAU6Y,KAAV,kEACE,OADF,SACQrC,axBzBoC,+BwByBKoC,IADjD,wCAIeC,U,aChBEE,IAAV,SAAUA,KAAV,kEACL,OADK,SACCC,aAAI,CACRxD,KACAoB,KACAK,KACAM,KACAM,KACAI,KACAI,KACAI,KACAI,OAVG,wCCPP,IAAMI,GAAkBC,OAAOC,sCAAwCC,IACjEC,GAAkBC,eAGlBC,GAAQC,YACZvE,GACAgE,GAAgBQ,YAAgBJ,MAGlCA,GAAgBK,IAAIX,IAELQ,U,2DCFXI,GAAQC,aAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAMC,KAAK,MAEbC,UAAW,CACTF,KAAMG,KAAO,QAGhBC,SAEHR,GAAQS,aAAoBT,IAgBbU,OAdf,WACE,OACE,kBAAC,IAAD,CAAUd,MAAOA,IACf,kBAACe,GAAA,EAAD,CAAeX,MAAOA,IACpB,kBAAC,mBAAD,CAAkBY,SAAU,EAAGC,iBAAkB,IAAMhP,aAAc,CAAEE,WAAY,QAASD,SAAU,WACpG,kBAAC,IAAD,KACE,kBAACqI,GAAD,WCrBQxI,QACW,cAA7B4N,OAAO/O,SAASsQ,UAEe,UAA7BvB,OAAO/O,SAASsQ,UAEhBvB,OAAO/O,SAASsQ,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdC,OAAM,SAAA/R,GACL3D,QAAQ2D,MAAMA,EAAMrJ,c","file":"static/js/main.b4c80b97.chunk.js","sourcesContent":["export const ADD_TO_SHOPPING_CART = 'ADD_TO_SHOPPING_CART'\nexport const DEL_FROM_SHOPPING_CART = 'DEL_FROM_SHOPPING_CART'\n\n\nexport const addToShoppingCartAction = product => {\n  return {\n    type: ADD_TO_SHOPPING_CART,\n    payload: product\n  }\n}\n\nexport const delFromShoppingCartAction = id => {\n  return {\n    type: DEL_FROM_SHOPPING_CART,\n    payload: id\n  }\n}","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport './ShoppingCart.scss'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CardActionArea,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Icon,\r\n  ListItem,\r\n  Typography,\r\n  Hidden,\r\n  Button,\r\n  Link,\r\n  List,\r\n  Box,\r\n  AppBar,\r\n  Toolbar\r\n} from '@material-ui/core'\r\nimport { bindActionCreators } from 'redux'\r\nimport { delFromShoppingCartAction } from '../ToggleButton/action'\r\nimport { useSnackbar } from 'notistack'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    label: \"Название\",\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: \"Цена\",\r\n  },\r\n  {\r\n    id: 'delete',\r\n    label: \"Удалить\",\r\n  },\r\n]\r\n\r\nconst ShoppingCart = ({ cart, cartHandleClose, delFromSoppingCart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const total = () => {\r\n    const prices = cart.map(item => item.price)\r\n    if (prices.length > 0) {\r\n      return prices.reduce((a, b) => a + b)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const delFromCartHandler = (id) => {\r\n    delFromSoppingCart(id)\r\n    enqueueSnackbar('Удалено из корзины')\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bar nav-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bar\">\r\n          <Hidden only={['xs', 'md']}>\r\n            <Typography variant=\"h6\">\r\n              Корзина\r\n          </Typography>\r\n          </Hidden>\r\n          <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          component={NavLink}\r\n          to='/order'\r\n          disabled={!cart.length > 0}>\r\n            Оформить заказ\r\n          </Button>\r\n          <Hidden only={['xs', 'md']}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={cartHandleClose}\r\n            >\r\n              Продолжить покупки\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden only={['sm', 'lg', 'xl']}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"close-modal\"\r\n              onClick={cartHandleClose}\r\n              className=\"btn-close-cart\"\r\n              variant=\"outlined\"\r\n            >\r\n              <Icon>close</Icon>\r\n            </IconButton>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List className=\"cart-wrapper\">\r\n        {cart && cart.length > 0 ? cart.map(item => (\r\n          <ListItem key={item._id} className=\"cart-item\">\r\n            <Card\r\n              className=\"card\"\r\n              variant=\"outlined\"\r\n            >\r\n              <CardMedia\r\n                className=\"card-img\"\r\n                image={item.img}\r\n                title={item.name}\r\n              />\r\n              <CardContent\r\n                className=\"card-description\"\r\n              >\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography className=\"text-overfill\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {item.description}\r\n                  {item.description}\r\n                  {item.description}\r\n                </Typography>\r\n                <div className=\"count\">\r\n\r\n                </div>\r\n              </CardContent>\r\n              <CardActions\r\n                disableSpacing={true}\r\n                className=\"cart-card-actions\"\r\n              >\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => { delFromCartHandler(item._id) }}\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          </ListItem>\r\n        )) : <div className=\"cart-empry-text\"><Typography variant=\"body1\" fontSize={30} color=\"textSecondary\">Корзина пуста</Typography></div>}\r\n      </List>\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bottom-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bottom-bar\">\r\n          <Typography variant=\"button\" color=\"primary\" >Всего: {total().toFixed(2)}&nbsp;$</Typography>\r\n          <Typography variant=\"h6\">LOGOtip</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    delFromSoppingCart: bindActionCreators(delFromShoppingCartAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = ({ className }) => {\r\n  return (\r\n    <div className={className ? `preloader-wrapper ${className}` : \"preloader-wrapper\" }>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './Categories.Client.scss'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesForClient = ({ categories, setCurrentCategory, loadingCategories, currentCategory }) => {\r\n  const listCreator = (arr) => {\r\n    return arr.map((item) => (\r\n      <ListItem key={item.name}>\r\n        <Button\r\n          fullWidth\r\n          size=\"small\"\r\n          classes={{\r\n            fullWidth: (currentCategory === item.name ? 'full-width-btn active' : 'full-width-btn')\r\n          }}\r\n          variant='text'\r\n          onClick={() => setCurrentCategory(item.name)}\r\n          color={currentCategory === item.name ? 'secondary' : 'default'}\r\n          endIcon={currentCategory === item.name ? <Icon>beenhere</Icon> : null}\r\n        >\r\n          <Typography variant=\"button\">{item.name}</Typography>\r\n        </Button>\r\n      </ListItem>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <List className=\"categories-list\" disablePadding>\r\n      {loadingCategories ? <Preloader /> : listCreator(categories)}\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForClient)","export const SET_FILTER_VALUE = 'SET_FILTER_VALUE'\n\nexport const setFilterValueAction = value => {\n  return {\n    type: SET_FILTER_VALUE,\n    payload: value\n  }\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = (category, limit, page) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: {\r\n      category,\r\n      limit,\r\n      page\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = (products, productsLength) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: {\r\n      products,\r\n      productsLength\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearMessageAction = () => {\r\n  return {\r\n    type: CLEAR_MESSAGE\r\n  }\r\n}\r\n","import React, { useState, useEffect, createRef, forwardRef } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  Drawer,\r\n  FormControl,\r\n  Divider,\r\n  Link,\r\n  Grid,\r\n  Fab\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setFilterValueAction } from './adction';\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearMessageAction } from '../../pages/Home.page/action';\r\n\r\n\r\nconst NavBar = ({ setFilterValue, message, clearMessage, cart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [focus, setFocus] = useState(false)\r\n  const [cartOpen, setCartOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n  const cartHandleClose = () => {\r\n    setCartOpen(false)\r\n  }\r\n  const CartHandleOpen = () => {\r\n    setCartOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  const handleMenuOpen = event => {\r\n    setMenuOpen(true)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const searchHandler = () => {\r\n    setFilterValue(value)\r\n    setFocus(false)\r\n  }\r\n\r\n  const clearHandler = () => {\r\n    setValue('')\r\n  }\r\n\r\n  const keyHandler = event => {\r\n    if (event.key === 'Enter') {\r\n      searchHandler()\r\n      inputRef.current.blur()\r\n    }\r\n  }\r\n\r\n\r\n  const inputRef = createRef()\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" style={{ zIndex: 1201 }} className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden mdUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            onClose={handleMenuClose}\r\n            open={menuOpen}\r\n            classes={{\r\n              paper: 'mobild-drawer-papper'\r\n            }}\r\n          >\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar nav-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Typography variant=\"h3\" className=\"logo-mobile\">LOGOtip</Typography>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"close-modal\"\r\n                  onClick={handleMenuClose}\r\n                  className=\"btn-close-cart\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <div className=\"categories-list-wrapper \">\r\n              <Typography variant=\"caption\" className=\"menu-caption\">Категории товаров</Typography>\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n              <CategoriesForClient />\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n            </div>\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Box\r\n                  aria-label=\"social-links\"\r\n                  className=\"social-btn-group\"\r\n                >\r\n                  <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                </Box>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 95 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n          </Box>\r\n        </Hidden>\r\n        <FormControl\r\n          className=\"search-wrapper\"\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onChange={inputFilterHandler}\r\n            value={value}\r\n            onKeyPress={keyHandler}\r\n            inputProps={{\r\n              ref: inputRef,\r\n              onFocus: () => setFocus(true)\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {focus\r\n                    ? <IconButton\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={searchHandler}\r\n                      onBlur={() => setFocus(false)}\r\n                    ><Icon>search</Icon></IconButton>\r\n                    : (value && <IconButton\r\n                      color=\"default\"\r\n                      size=\"small\"\r\n                      onClick={clearHandler}\r\n                    > <Icon>clear</Icon></IconButton>)\r\n                  }\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <IconButton\r\n          color={cart.length > 0 ? 'primary' : 'default'}\r\n          aria-label=\"cart\"\r\n          onClick={CartHandleOpen}\r\n        >\r\n          <Badge badgeContent={cart.length} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper-mobile'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.forClientState.message,\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch),\r\n    clearMessage: bindActionCreators(clearMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Box, Fab, IconButton } from '@material-ui/core';\n\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addToShoppingCartAction, delFromShoppingCartAction } from './action'\n\nconst PriceToggleButton = ({ children, product, addToCart, delFromCart, cart }) => {\n  const [selected, setSelected] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    const findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      setSelected(true)\n    } else {\n      setSelected(false)\n    }\n  }, [cart])\n\n  const handler = () => {\n    let findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      enqueueSnackbar('Удалено из корзины')\n      delFromCart(product._id)\n      setSelected(false)\n    } else {\n      enqueueSnackbar('Добавлено в корзину')\n      addToCart(product)\n      setSelected(true)\n    }\n  }\n\n  return selected\n    ? <IconButton onClick={handler} color=\"inherit\">\n        <Icon>check</Icon>\n      </IconButton>\n    : <IconButton onClick={handler} color=\"primary\">\n        <Icon>shopping_cart</Icon>\n      </IconButton>\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: bindActionCreators(addToShoppingCartAction, dispatch),\n    delFromCart: bindActionCreators(delFromShoppingCartAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceToggleButton)","import React, { useState } from 'react'\nimport { Rating } from '@material-ui/lab'\nimport { Box, Typography} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\nimport './RatingButton.scss'\n\nexport const RatingButton = ({id}) => {\n  const [ratingValue, setRatinValue] = useState(0)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const ratingHandler = (event, newValue) => {\n    setRatinValue(+newValue)\n    if(+newValue === 0) {\n      enqueueSnackbar('Оценка удалена')\n    } else if (ratingValue !== +newValue && ratingValue !== 0) {\n      enqueueSnackbar('Оценка изменена')\n    } else {\n      enqueueSnackbar('Спасибо за оценку')\n    }\n  }\n\n  return (\n    <Box component=\"div\" className=\"ratingBtn\">\n      <Rating\n        size=\"small\"\n        name={id}\n        value={ratingValue}\n        onChange={ratingHandler}\n      />\n      <Typography component=\"legend\" variant=\"caption\">&nbsp;Отзывов: {ratingValue}</Typography>\n    </Box>\n  )\n}","import React, { useRef, useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\n\r\nimport './Products.Client.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action'\r\nimport { bindActionCreators } from 'redux'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport PriceToggleButton from '../ToggleButton/ToggleButton'\r\nimport { RatingButton } from '../RatingButton/RatingButton'\r\n\r\n\r\n\r\nconst productCreator = (arr) => {\r\n  return arr.map(item => {\r\n    return (\r\n      <Grid key={item._id} item xs={!2} sm={6} md={4} lg={3}>\r\n        <Card\r\n          className=\"card\"\r\n          variant=\"outlined\"\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className=\"card-img\"\r\n              image={item.img}\r\n              title={item.name}\r\n            />\r\n            <CardContent className=\"card-content\">\r\n              <Typography className=\"card-content-text\" gutterBottom variant=\"subtitle1\">\r\n                {item.name}\r\n              </Typography>\r\n              <RatingButton\r\n                id={item._id}\r\n              />\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions\r\n            disableSpacing={true}\r\n          >\r\n            <Typography variant=\"h4\" color=\"primary\">{item.price} &#8372;</Typography>\r\n            <PriceToggleButton\r\n              product={item}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    )\r\n  })\r\n}\r\n\r\n\r\nconst ProductsForClient = ({ products, loadingProducts }) => {\r\n  return (\r\n    <Paper className=\"cards-list-wrapper\" elevation={1}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        className=\"cards-list\"\r\n      >\r\n        {loadingProducts ? <Preloader /> : productCreator(products)}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForClient)","export const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE'\n\n\nexport const changeCurrentPageAction = page => {\n  return {\n    type: CHANGE_CURRENT_PAGE,\n    payload: page\n  }\n}","import React, { useState, useEffect } from 'react'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Box,\n  Icon,\n  Hidden,\n  Link\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab'\nimport { connect } from 'react-redux'\n\nimport './BottomNavBar.scss'\nimport { bindActionCreators } from 'redux';\nimport { changeCurrentPageAction } from './action';\n\nconst BottomNavBar = ({ productsLength, changeCurrentPage, currentPage }) => {\n  console.log(currentPage)\n  const paginationHandler = (event, newValue) => {\n    changeCurrentPage(newValue)\n  }\n\n  return (\n    <AppBar\n      position=\"static\"\n      className=\"app-bottom-bar\"\n      color=\"inherit\"\n      elevation={1}\n    >\n      <Toolbar\n        className=\"bottom-bar\"\n      >\n        <Hidden xsDown>\n          <Box\n            aria-label=\"social-links\"\n            className=\"social-btn-group\"\n          >\n            <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\n            </Link>\n          </Box>\n        </Hidden>\n        {productsLength < 18\n          ? null\n          : <Pagination\n            size=\"small\"\n            className=\"bottom-pagination\"\n            count={Math.ceil(productsLength / 18)}\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={paginationHandler}\n          />\n        }\n        <Hidden xsDown>\n          <Typography variant=\"h6\">LOGOtip</Typography>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    productsLength: state.forClientState.productsLength,\n    currentPage: state.paginationState.currentPage\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomNavBar)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n  Drawer,\r\n  Divider,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client'\r\nimport ProductsForClient from '../Products.Client/Products.Client'\r\n\r\nimport './Catalog.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\r\nimport BottomNavBar from '../BottomNavBar/BottomNavBar'\r\n\r\n\r\nconst Catalog = ({ productsLength, setCurrentCategory }) => {\r\n\r\n  const popularHandler = () => {\r\n    setCurrentCategory('Популярно')\r\n  }\r\n\r\n  return (\r\n    <Box \r\n      className=\"catalog-wrapper\"\r\n    >\r\n      <Grid\r\n        container\r\n      >\r\n        <Hidden smDown>\r\n          <Grid item md={3} lg={2}>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className=\"categories-container\"\r\n              open\r\n              PaperProps={{\r\n                elevation: 1\r\n              }}\r\n            >\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Категории товаров\r\n              </Typography>\r\n              <Divider variant=\"middle\" />\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={popularHandler}\r\n                  size=\"small\"\r\n                >\r\n                  Популярное\r\n                </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                >\r\n                  Лучшие цены\r\n                </Button>\r\n              </Box>\r\n              <Divider variant=\"middle\" />\r\n              <CategoriesForClient />\r\n            </Drawer>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={9}\r\n          xs={12}\r\n        >\r\n          <ProductsForClient />\r\n          <BottomNavBar />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productsLength: state.forClientState.productsLength,\r\n    message: state.forClientState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, { useEffect, useState } from 'react'\nimport { Fab, Icon, Zoom } from '@material-ui/core'\nimport './ToUpButton.scss'\n\n\nexport const ToUpButton = ({ show, containerRef }) => {\n\n  const handleScrollToTop = () => {\n    containerRef.current.scroll({ top: 0, behavior: 'smooth' })\n  }\n\n  return (\n    <div className=\"to-up-button\">\n      <Zoom\n        timeout={350}\n        in={show}\n        unmountOnExit\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={handleScrollToTop}\n        >\n          <Icon>expand_less</Icon>\n        </Fab>\n      </Zoom>\n    </div>\n  )\n}","import React, {useEffect, useState} from 'react'\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\nimport { ToUpButton } from '../../components/ToUpButton/ToUpButton'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCategoriesForClientRequestAction, getProductsForClientRequestAction } from './action'\r\nimport { changeCurrentPageAction } from '../../components/BottomNavBar/action'\r\n\r\nconst limit = 16\r\n\r\nconst HomePage = ({ getProductsForClientRequest, getCategoriesForClientRequest, currentCategory, currentPage, changeCurrentPage }) => {\r\n  const containerRef = React.createRef()\r\n  const currentPageIndex = currentPage - 1\r\n  const [showScrollTo, setShowScrollTo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== '') {\r\n      getProductsForClientRequest(currentCategory, limit, currentPageIndex)\r\n    }\r\n  }, [currentCategory, currentPage])\r\n\r\n  useEffect(() => {\r\n    changeCurrentPage(1)\r\n  }, [currentCategory])\r\n\r\n  const handleScroll = () => {\r\n    if (containerRef.current.scrollTop > 400) {\r\n      setShowScrollTo(true)\r\n    } else {\r\n      setShowScrollTo(false)\r\n    }\r\n  }\r\n  return  (\r\n    <div ref={containerRef} className=\"scroll-container\" onScroll={handleScroll}>\r\n      <NavBar />\r\n      <Catalog />\r\n      <ToUpButton show={showScrollTo} containerRef={containerRef} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentCategory: state.currentCategoryState.currentCategory,\r\n    currentPage: state.paginationState.currentPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch),\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch),\r\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token, accessLevel) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: {token, accessLevel}\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = userId => {\r\n  return {\r\n    type: LOGOUT,\r\n    payload: userId\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} onClick={popperHandler} placement=\"bottom-start\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center' alignContent='center' className=\"container\">\r\n        <Grid item xs={12} sm={8} md={6} lg={4} component={Paper}>\r\n          <FormControl className=\"auth-form-wrapper\">\r\n            <Typography variant=\"h3\" className=\"title\">\r\n              LOGOtip\r\n            <Typography variant=\"caption\">\r\n                админ\r\n            </Typography>\r\n            </Typography>\r\n            <TextField\r\n              error={err.email}\r\n              className=\"auth-input\"\r\n              id=\"email\"\r\n              label=\"email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              inputProps={{ value: form.email }}\r\n              onChange={changeInputHandler}\r\n              required\r\n            />\r\n            <TextField\r\n              error={err.password}\r\n              className=\"auth-input\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={changeInputHandler}\r\n              inputProps={{ value: form.password }}\r\n              required\r\n            />\r\n            <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>forward</Icon>}\r\n                type=\"submit\"\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Войти</Typography>\r\n            </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>add_box</Icon>}\r\n                type=\"submit\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Регистрация</Typography>\r\n            </Button>\r\n              <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n                <Icon>help_outline</Icon>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm)","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, matchPath, NavLink, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets',\r\n    nav: true,\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list',\r\n    nav: true,\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category',\r\n    nav: true,\r\n  },\r\n  {\r\n    name: 'Редактор продуктов',\r\n    path: '/admin/product/:id',\r\n    icon: 'edit',\r\n    nav: false,\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  const location = useLocation()\r\n  const findName = settingsList.find(item => matchPath(location.pathname, item.path))\r\n\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          if (item.nav) {\r\n            return (\r\n              <ListItem\r\n                className={findName && findName.path === item.path ? \"drawer-btn-selected drawer-btn\" : \"drawer-btn\"}\r\n                key={item.path}\r\n                component={NavLink}\r\n                to={item.path}\r\n                variant=\"contained\"\r\n                classes={classes.listItem}\r\n              >\r\n                <ListItemIcon\r\n                  classes={classes.listIcon}\r\n                >\r\n                  <Icon fontSize=\"small\">{item.icon}</Icon>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  <Typography variant=\"caption\">\r\n                    {item.name}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            )\r\n          }\r\n        })}\r\n      </List>\r\n      <ListItem\r\n        component={NavLink}\r\n        variant=\"contained\"\r\n        to='/developer'\r\n        className=\"to-developer drawer-btn-selected drawer-btn\">\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon fontSize=\"small\">code</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            Разработчик\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Drawer>\r\n  )\r\n}","import React, { useState } from 'react'\nimport {\n  Typography,\n  Menu,\n  Avatar,\n  MenuItem,\n  Dialog,\n  Button,\n  DialogActions,\n  DialogTitle,\n  DialogContent\n} from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { logoutAction } from '../AuthForm/action'\nimport { connect } from 'react-redux'\n\nimport './UserInfo.scss'\n\nconst levels = [\n  {\n    level: 0,\n    icon: 'CM',\n    label: 'Контент-менеджер'\n  },\n  {\n    level: 1,\n    icon: 'M',\n    label: 'Модератор'\n  },\n  {\n    level: 1,\n    icon: 'S',\n    label: 'Супервизор'\n  },\n  {\n    level: 100,\n    icon: 'A',\n    label: 'Администратор'\n  },\n\n]\n\nconst UserInfo = ({ logout, accessLevel, userId }) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [dialog, setDialog] = useState(false)\n\n  const findLevel = levels.find(item => item.level === accessLevel) || 0\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const handleOpenDialog = () => {\n    setDialog(true)\n  }\n\n  const handleCloseDialog = () => {\n    setDialog(false)\n  }\n\n  const logoutHandler = () => {\n    logout()\n  }\n\n  return (\n    <div>\n      <Avatar\n        alt=\"user\"\n        onClick={handleOpenMenu}\n        className=\"avatar-icon\"\n      >\n        {findLevel.icon}\n      </Avatar>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        elevation={1}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <MenuItem disabled>\n          <Typography variant=\"subtitle1\" color=\"primary\">\n            Уровень: {findLevel.label}\n          </Typography>\n        </MenuItem>\n        <MenuItem onClick={handleOpenDialog}>Инфо</MenuItem>\n        <MenuItem to='/admin' onClick={logoutHandler} component={NavLink}>Выйти</MenuItem>\n      </Menu>\n      <Dialog\n        open={dialog}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Уровни доступа</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Контент-менеджер &nbsp;\n              </Typography>\n              - предлагает измeнения/добавления товара или категории.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Модератор &nbsp;\n              </Typography>\n              - подтверждает измeнения/добавленя товара, категории, отзыва на сайте.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Супервизор &nbsp;\n              </Typography>\n              - доступ к статистике пользователей админ панели, статистика продажи товаров.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Администратор &nbsp;\n              </Typography>\n              - всё выше перечисленное, подтверждает создание нового пользователя, предоставление/измeнения прав доступа.\n            </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Понятно\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    accessLevel: state.authState.token.accessLevel,\n    userId: state.authState.token.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: bindActionCreators(logoutAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo)","import React from 'react'\nimport UserInfo from '../UserInfo/UserInfo';\nimport { Typography, AppBar, Toolbar, Icon } from '@material-ui/core'\nimport { settingsList } from '../AdminSettingsList/AdminSettingsList'\nimport { connect } from 'react-redux';\nimport { matchPath, useLocation } from 'react-router-dom';\n\nimport './AdminPanelHeader.scss'\n\n\nconst AdminPanelHeader = () => {\n  const location = useLocation()\n  const findName = settingsList.find(item => matchPath(location.pathname, item.path))\n  \n  return (\n    <AppBar\n      position=\"sticky\"\n      color=\"inherit\"\n    >\n      <Toolbar\n        className=\"admin-panel-header\"\n      >\n        <Typography variant=\"body1\">\n          {findName !== undefined ? findName.name : ''}\n        </Typography>\n        <UserInfo />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default connect()(AdminPanelHeader)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport AdminPanelHeader from \"../components/AdminPanelHeader/AdminPanelHeader\";\r\n\r\nconst AdminPanelPage = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      className=\"admin-panel\"\r\n    >\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <AdminPanelHeader/>\r\n      </Grid>\r\n      <Grid item lg={2} className=\"admin-drawer\">\r\n        <AdminSettingsList/>\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20 }} >\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.authState.token.userId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoriesRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategoriesSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoriesFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCategoriesRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction } from './action'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n} from '@material-ui/core'\r\n\r\nimport './Categories.Admin.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoriesForAdmin = ({\r\n  categories,\r\n  getCategoriesRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoriesRequest()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                          color=\"primary\"\r\n                          name={row._id}\r\n                          checked={row.show || false}\r\n                          onChange={(event) => {\r\n                            showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                          }}\r\n                          disabled={loading || oneCategoryLoading}\r\n                        />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      className=\"centered-btn\"\r\n                      onClick={() => { deleteCategoryRequest(row._id) }}\r\n                      disabled={loading || oneCategoryLoading}\r\n                    >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesRequest: bindActionCreators(getCategoriesRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForAdmin)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST'\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS'\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE'\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST'\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS'\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE'\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST'\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS'\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE'\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'\r\n\r\nexport const getProductsRequestAction = (limit, page) => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST,\r\n    payload: {\r\n      limit,\r\n      page\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = (products, productsLength) => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: {\r\n      products,\r\n      productsLength\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const changePageAction = page => {\r\n  return {\r\n    type: CHANGE_PAGE,\r\n    payload: page\r\n  }\r\n}","import React, { useState } from 'react'\nimport {\n  TextField,\n  Typography,\n  Button,\n  Grid,\n  MenuItem\n} from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\nimport { connect } from 'react-redux'\n\nimport './ProductsFilter.scss'\nimport { bindActionCreators } from 'redux'\nimport { setFilterValueAction } from '../NavBar/adction'\n\nconst ProductsFilter = ({ products, setFilterValue }) => {\n  const autocompleteRef = React.createRef()\n  const [value, setValue] = useState('')\n  const filterOptions = createFilterOptions({\n    matchFrom: 'start',\n    stringify: option => option.name,\n  })\n\n  const changeHandler = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const filterHandler = (event, newValue) => {\n    if(newValue === null) {\n      setFilterValue(' ')\n    } else {\n      setFilterValue(newValue.name || newValue)\n    }\n  }\n\n  return (\n    <div\n      className=\"product-list-filter\"\n    >\n      <Autocomplete\n        fullWidth\n        size='small'\n        id=\"products\"\n        options={products.sort(item => item.name)}\n        getOptionLabel={(option) => option.name || option}\n        onChange={filterHandler}\n        freeSolo\n        blurOnSelect\n        clearOnEscape\n        renderInput={(params) =>\n          <TextField {...params}\n            label=\"Введите имя товара\"\n            variant=\"outlined\"\n          />\n        }\n        renderOption={(item) => (\n          <Typography variant=\"body1\">{item.name}&nbsp;<Typography variant=\"caption\">{item.category}</Typography></Typography>\n          \n        )}\n        onInputChange={changeHandler}\n        filterOptions={filterOptions}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.productsState.products\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsFilter)","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n  changePageAction,\r\n} from './action'\r\n\r\nimport {\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab'\r\nimport { useSnackbar } from 'notistack'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport ProductFilter from '../ProductsFilter/ProductsFilter'\r\n\r\nimport './Products.Admin.scss'\r\n\r\nconst ProductsForAdmin = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message,\r\n  productsLength,\r\n  currentPage,\r\n  changePage\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  useEffect(() => {\r\n    getProductsRequest(18, currentPage - 1)\r\n  }, [currentPage])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    deleteProductRequest(id)\r\n  }\r\n\r\n  const changePageHandler = (event, newValue) => {\r\n    changePage(newValue)\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Редактировать</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row._id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={{\r\n                        pathname: `/admin/product/${row._id}`,\r\n                        state: { id: row._id }\r\n                      }}\r\n                      disabled={oneProductLoading === row._id}\r\n                    >\r\n                      <Icon>edit</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      onClick={() => { deleteHandler(row._id) }}\r\n                      disabled={oneProductLoading === row._id}\r\n                    >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"products-list\">\r\n      <ProductFilter />\r\n      {loading ? <Preloader className=\"preloader\" /> : <TableCreator />}\r\n      {productsLength > 18\r\n        ? <Pagination\r\n          className=\"admin-table-pagintaion\"\r\n          value={currentPage}\r\n          count={Math.ceil(productsLength / 18)}\r\n          color=\"secondary\"\r\n          onChange={changePageHandler}\r\n        />\r\n        : null}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading,\r\n    productsLength: state.productsState.productsLength,\r\n    currentPage: state.productsState.currentPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n    changePage: bindActionCreators(changePageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForAdmin)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearMessageAction = () => {\r\n  return {\r\n    type: CLEAR_MESSAGE\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, clearMessageAction } from './action'\r\nimport { getCategoriesRequestAction } from '../Categories.Admin/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  getCategoriesRequest,\r\n  categoriesLoading,\r\n  clearMessage\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoriesRequest()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message === 'Новый товар добавлен') {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearMessage()\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <Paper className=\"form-wrapper\">\r\n      <FormControl\r\n        className=\"add-product-form\"\r\n        margin=\"dense\"\r\n        required\r\n        size=\"small\"\r\n        fullWidth\r\n      >\r\n        <FormHelperText\r\n          className=\"product-add-helper\"\r\n        >Добавление товара</FormHelperText>\r\n        <Select\r\n          className=\"categories-select\"\r\n          value={form.category}\r\n          onChange={changeInputHandler}\r\n          name=\"category\"\r\n          displayEmpty\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          disabled={categoriesLoading}\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Выберите категорию\r\n            </MenuItem>\r\n          {categories.map(item => {\r\n            return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n          })}\r\n        </Select>\r\n        <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Название\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.name}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"amount\"\r\n          label=\"Колличество\"\r\n          variant=\"outlined\"\r\n          name=\"amount\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.amount}\r\n        />\r\n        <TextField\r\n          id=\"price\"\r\n          label=\"Цена\"\r\n          variant=\"outlined\"\r\n          name=\"price\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.price}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          id=\"description\"\r\n          label=\"Описание\"\r\n          variant=\"outlined\"\r\n          name=\"description\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.description}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          id=\"img\"\r\n          label=\"Изображение (url)\"\r\n          variant=\"outlined\"\r\n          name=\"img\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.img}\r\n          fullWidth\r\n        />\r\n        <Button className=\"add-product-btn\" variant=\"contained\" color=\"primary\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n      </FormControl>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    getCategoriesRequest: bindActionCreators(getCategoriesRequestAction, dispatch),\r\n    clearMessage: bindActionCreators(clearMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearMessageAction } from '../../pages/Home.page/action'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n  clearMessage\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setCategory({ name: '' })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"category-creator-wrapper\">\r\n      <Paper className=\"category-creator-form\">\r\n        <FormHelperText>Добавление категории</FormHelperText>\r\n        <TextField\r\n          fullWidth\r\n          id=\"categgory-name\"\r\n          label=\"Название\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={category.name}\r\n          autoComplete=\"off\"\r\n        />\r\n        <Button className=\"add-category-btn\" variant=\"contained\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch),\r\n    clearMessage: bindActionCreators(clearMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport ProductCreator from '../ProductCreator/ProductCreator'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <CategoryCreator />\r\n      </Grid>\r\n      <Grid item lg={12}>\r\n        <ProductCreator />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(AdminDashboard)","import React, { useState } from 'react'\nimport { Typography, Icon, Popover, Button } from '@material-ui/core'\n\nimport './OrderHeader.scss'\n\nconst OrderHeader = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl)\n  return (\n    <header className=\"oreder-header\">\n      <Popover\n        id=\"help-over-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography variant=\"caption\">График работы</Typography>\n        <Typography variant=\"h5\">ПН - ПТ: 09:00 - 18:00</Typography>\n        <Typography variant=\"body1\">Суббота: 09:00 - 15:00</Typography>\n        <Typography variant=\"body1\">Воскресенье: 09:00 - 14:00</Typography>\n        <Typography variant=\"body2\" color=\"secondary\">Внимание! Важная информация</Typography>\n      </Popover>\n      <Typography variant=\"h3\">LOGOtip</Typography>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        aria-owns={open ? 'help-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        style={{zIndex:1400}}\n        onMouseEnter={handlePopoverOpen}\n        onClick={handlePopoverClose}\n        onMouseLeave={handlePopoverClose}\n        endIcon={<Icon>help</Icon>}\n      >\n        +380 73 069 XX XX\n      </Button>\n    </header>\n  )\n}\n\nexport default OrderHeader","export const cities = [\n  {city: 'Александрия', area: 'Кировоградская область' },\n  {city: 'Алчевск', area: 'Луганская область'},\n  {city: 'Бахмут', area: 'Донецкая область'},\n  {city: 'Белая Церковь', area: 'Киевская область'},\n  {city: 'Бердичев', area: 'Житомирская область'},\n  {city: 'Бердянск', area: 'Запорожская область'},\n  {city: 'Борисполь', area: 'Киевская область'},\n  {city: 'Бровары', area: 'Киевская область'},\n  {city: 'Винница', area: 'Винницкая область'},\n  {city: 'Горишние Плавни', area: 'Полтавская область'},\n  {city: 'Днепр', area: 'Днепропетровская область'},\n  {city: 'Горловка', area: 'Донецкая область'},\n  {city: 'Довжанск', area: 'Луганская область'},\n  {city: 'Донецк', area: 'Донецкая область'},\n  {city: 'Дубно', area: 'Ровенская область'},\n  {city: 'Енакиево', area: 'Донецкая область'},\n  {city: 'Житомир', area: 'Житомирская область'},\n  {city: 'Жмеринка', area: 'Винницкая область'},\n  {city: 'Жовква', area: 'Львовская область'},\n  {city: 'Запорожье', area: 'Запорожская область'},\n  {city: 'Ивано-Франковск', area: 'Ивано-Франковская область'},\n  {city: 'Измаил', area: 'Одесская область'},\n  {city: 'Ирпень', area: 'Киевская область'},\n  {city: 'Кадиевка', area: 'Луганская область'},\n  {city: 'Каменец-Подольский', area: 'Хмельницкая область'},\n  {city: 'Каменское', area: 'Днепропетровская область'},\n  {city: 'Каховка', area: 'Херсонская область'},\n  {city: 'Киев', area: 'Киевская область'},\n  {city: 'Конотоп', area: 'Сумская область'},\n  {city: 'Константиновка', area: 'Донецкая область'},\n  {city: 'Краматорск', area: 'Донецкая область'},\n  {city: 'Кременчуг', area: 'Полтавская область'},\n  {city: 'Кривой Рог', area: 'Днепропетровская область'},\n  {city: 'Кропивницкий', area: 'Кировоградская область'},\n  {city: 'Лисичанск', area: 'Луганская область'},\n  {city: 'Лозовая', area: 'Харьковская область'},\n  {city: 'Луганск', area: 'Луганская область'},\n  {city: 'Луцк', area: 'Волынская область'},\n  {city: 'Львов', area: 'Львовская область'},\n  {city: 'Макеевка', area: 'Донецкая область'},\n  {city: 'Мариуполь', area: 'Донецкая область'},\n  {city: 'Мелитополь', area: 'Запорожская область'},\n  {city: 'Мукачево', area: 'Закарпатская область'},\n  {city: 'Нежин', area: 'Черниговская область'},\n  {city: 'Николаев', area: 'Николаевская область'},\n  {city: 'Никополь', area: 'Днепропетровская область'},\n  {city: 'Одесса', area: 'Одесская область'},\n  {city: 'Павлоград', area: 'Днепропетровская область'},\n  {city: 'Полтава', area: 'Полтавская область'},\n  {city: 'Ровно', area: 'Ровенская область'},\n  {city: 'Северодонецк', area: 'Луганская область'},\n  {city: 'Славянск', area: 'Донецкая область'},\n  {city: 'Смела', area: 'Черкасская область'},\n  {city: 'Сумы', area: 'Сумская область'},\n  {city: 'Тернополь', area: 'Тернопольская область'},\n  {city: 'Торецк', area: 'Донецкая область'},\n  {city: 'Ужгород', area: 'Закарпатская область'},\n  {city: 'Умань', area: 'Черкасская область'},\n  {city: 'Харцызск', area: 'Донецкая область'},\n  {city: 'Харьков', area: 'Харьковская область'},\n  {city: 'Херсон', area: 'Херсонская область'},\n  {city: 'Хмельницкий', area: 'Хмельницкая область'},\n  {city: 'Хрустальный', area: 'Луганская область'},\n  {city: 'Черкассы', area: 'Черкасская область'},\n  {city: 'Чернигов', area: 'Черниговская область'},\n  {city: 'Черновцы', area: 'Черниговская область'},\n  {city: 'Черноморск', area: 'Одесская область'},\n  {city: 'Чистяково', area: 'Донецкая область'},\n  {city: 'Шостка', area: 'Сумская область'}\n]\n","export const SET_STEP = 'SET_STEP'\n\nexport const setStepAction = step => {\n  return {\n    type: SET_STEP,\n    payload: step\n  }\n}","import React from 'react'\nimport { TextField, Button, Typography } from '@material-ui/core'\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Autocomplete } from '@material-ui/lab'\nimport { cities } from '../../static/cities'\n\nimport './OrderContactInfo.scss'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setStepAction } from '../OrderSteps/action';\n\nconst OrderContactInfo = ({ setStep }) => {\n\n  const filterOptions = createFilterOptions({\n    matchFrom: 'start',\n    stringify: option => option.city,\n  });\n\n  return (\n    <form className=\"contact-form\" autoComplete=\"off\">\n      <TextField fullWidth id=\"phone\" name=\"phone\" label=\"Номер телефона\" variant=\"outlined\" required />\n      <TextField fullWidth id=\"name\" name=\"name\" label=\"Имя и фамилия\" variant=\"outlined\" required />\n      <Autocomplete fullWidth\n        id=\"city\"\n        options={cities.sort(item => item.city)}\n        getOptionLabel={(option) => option.city}\n        renderInput={(params) => <TextField {...params} label=\"Выберите город\" variant=\"outlined\" required />}\n        renderOption={(item) => (\n          <div>\n            <Typography variant=\"body1\">{item.city}</Typography>\n            <Typography variant=\"caption\">{item.area}</Typography>\n          </div>\n        )}\n        filterOptions={filterOptions}\n      />\n      <TextField\n        fullWidth\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        helperText=\"Если вы хотите следить за статусом выполнения заказа\"\n      />\n      <Typography variant=\"caption\">* обязательное поле</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setStep(1)}>Продолжить</Button>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderContactInfo)","import React from 'react'\nimport { TextField, Button, Typography } from '@material-ui/core'\n\nimport './OrderPayWay.scss'\nimport { setStepAction } from '../OrderSteps/action'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nconst OrderPayWay = ({ setStep }) => {\n  return (\n    <form className=\"pay-way-form\">\n      <TextField id=\"card-num\" required label=\"Номер карты\" variant=\"outlined\"></TextField>\n      <TextField id=\"card-num\" required label=\"Имя держателя\" variant=\"outlined\"></TextField>\n      <div className=\"short-inputs\">\n        <TextField id=\"card-num\" required label=\"Срок действия\" variant=\"outlined\"></TextField>\n        <TextField id=\"card-num\" required label=\"CVV\" variant=\"outlined\"></TextField>\n      </div>\n      <Typography variant=\"caption\">* обязательное поле</Typography>\n      <div className=\"order-button-group\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep(0)}>Назад</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setStep(2)}>Продолжить</Button>\n      </div>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderPayWay)","import React, { useState } from 'react'\nimport { TextField, Typography, Button, Icon, InputAdornment, Popover, Paper, Modal } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nimport { bindActionCreators } from 'redux'\nimport { setStepAction } from '../OrderSteps/action'\nimport { connect } from 'react-redux'\n\nimport './OrderConfirmation.scss'\n\nconst OrderConfirmation = ({ setStep }) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [success, setSuccess] = useState(false)\n  const [falure, setFalure] = useState(false)\n  const [value, setValue] = useState('')\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  }\n\n  const changeHandler = event => {\n    setValue(event.target.value)\n  }\n\n  const lastStepHandler = () => {\n    if (value === '1234') {\n      setSuccess(true)\n      setStep(3)\n    } else {\n      setFalure(true)\n      setStep(4)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  return (\n    <form className=\"order-confirm\">\n      <Popover\n        id=\"key-over-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography variant=\"body2\">Код: 1234</Typography>\n      </Popover>\n      <TextField\n        fullWidth\n        id=\"key\"\n        type=\"password\"\n        label=\"Введите код подтверждения\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onChange={changeHandler}\n        required\n        InputProps={{\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n            >\n              <Icon\n                style={{ zIndex: 1400 }}\n                onMouseEnter={handlePopoverOpen}\n                onMouseLeave={handlePopoverClose}\n                color=\"primary\"\n              >\n                help\n                </Icon>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Typography variant=\"caption\" >* обязательно поле</Typography>\n      <div className=\"order-button-group\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep(1)}>Назад</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={lastStepHandler}>Подтвердить</Button>\n      </div>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderConfirmation)","import React from 'react'\nimport { Stepper, Step, StepLabel, Typography, Icon, Button } from '@material-ui/core'\n\nimport './OrderSteps.scss'\nimport OrderContactInfo from '../OrderContactInfo/OrderContactInfo'\nimport OrderPayWay from '../OrderPayWay/OrderPayWay'\nimport OrderConfirmation from '../OrderConfirmation/OrderConfirmation'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setStepAction } from './action'\nimport { bindActionCreators } from 'redux'\n\nconst steps = [\n  {\n    component: 'contact-info',\n    label: 'Контактные данные'\n  },\n  {\n    component: 'pay-way',\n    label: 'Выбор способа оплаты'\n  },\n  {\n    component: 'confirmation',\n    label: 'Подтвержение платежа'\n  }\n]\n\nconst OrderSteps = ({ step, setStep }) => {\n\n  const switchRender = () => {\n    switch (step) {\n      case 1: {\n        return <OrderPayWay />\n      }\n      case 2: {\n        return <OrderConfirmation />\n      }\n      case 3: {\n        return (\n          <div className='result-wrapper'>\n            <Icon fontSize=\"large\" className=\"success-icon\">check</Icon>\n            <Typography variant=\"subtitle2\">Заказ отправлен в обработку.</Typography>\n            <Typography variant=\"body2\">Ожидайте звонка, для подтверждения заказа</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={NavLink}\n              onClick={() => {setStep(0)}}\n              to='/'\n            >\n              На главную\n            </Button>\n          </div>\n        )\n      }\n      case 4: {\n        return (\n          <div className='result-wrapper'>\n            <Icon fontSize=\"large\" className=\"falure-icon\">close</Icon>\n            <Typography variant=\"subtitle2\">Произошла ошибка, попробуйте снова.</Typography>\n            <Typography variant=\"body2\">Описание ошибки</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={NavLink}\n              onClick={() => {setStep(0)}}\n              to='/'\n            >\n              На главную\n            </Button>\n          </div>\n        )\n      }\n      default: {\n        return <OrderContactInfo />\n      }\n    }\n  }\n\n  return (\n    <main className=\"order-steps\">\n      {switchRender()}\n      <Stepper activeStep={step}>\n        {steps.map((item, index) => {\n          const stepProps = {}\n          const labelProps = {}\n          if(index === 4) {\n            steps[2].labelProps.error = true\n          }\n          return (\n            <Step key={item.component} {...stepProps}>\n              <StepLabel {...labelProps}>{item.label}</StepLabel>\n            </Step>\n          )\n        })}\n      </Stepper>\n    </main>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    step: state.stepsState.step\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderSteps)","import React from 'react'\nimport { Container, Paper } from '@material-ui/core'\nimport OrderHeader from '../../components/OrderHeader/OrederHeader'\nimport OrderSteps from '../../components/OrderSteps/OrderSteps'\n\nconst OrderPage = () => {\n  return (\n    <Container maxWidth=\"sm\" component={Paper}>\n      <OrderHeader />\n      <OrderSteps />\n    </Container>\n  )\n}\n\nexport default OrderPage","export const GET_PRODUCT_FOR_EDIT_REQUEST = 'GET_PRODUCT_FOR_EDIT_REQUEST'\nexport const GET_PRODUCT_FOR_EDIT_SUCCESS = 'GET_PRODUCT_FOR_EDIT_SUCCESS'\nexport const GET_PRODUCT_FOR_EDIT_FALURE = 'GET_PRODUCT_FOR_EDIT_FALURE'\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\n\nexport const getProductForEditRequestAction = id => {\n  return {\n    type: GET_PRODUCT_FOR_EDIT_REQUEST,\n    payload: id\n  }\n}\n\nexport const getProductForEditSuccessAction = product => {\n  return {\n    type: GET_PRODUCT_FOR_EDIT_SUCCESS,\n    payload: product\n  }\n}\n\nexport const getProductForEditFalureAction = message => {\n  return {\n    type: GET_PRODUCT_FOR_EDIT_FALURE,\n    payload: message\n  }\n}\n\nexport const clearMessageAction = () => {\n  return {\n    type: CLEAR_MESSAGE\n  }\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Paper,\n  TextField,\n  Toolbar,\n  Button,\n  IconButton,\n  Icon,\n  FormControl,\n  Grid,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardMedia,\n  Box,\n  MenuItem,\n  FormHelperText\n} from '@material-ui/core'\nimport { Rating } from '@material-ui/lab'\nimport { bindActionCreators } from 'redux'\nimport { getProductForEditRequestAction, clearMessageAction } from './action'\nimport { getCategoriesForClientRequestAction } from '../../pages/Home.page/action'\nimport { useSnackbar } from 'notistack'\nimport Preloader from '../Preloader/Preloader'\n\nimport './ProductEditor.scss'\n\n\nconst labels = [\n  {\n    name: 'name',\n    label: 'Имя продукта'\n  },\n  {\n    name: 'category',\n    label: 'Категория'\n  },\n  {\n    name: 'price',\n    label: 'Цена'\n  },\n  {\n    name: 'img',\n    label: 'Изображение'\n  },\n  {\n    name: 'description',\n    label: 'Описание'\n  },\n  {\n    name: 'amount',\n    label: 'Количество'\n  },\n  {\n    name: 'sale',\n    label: 'Скидка'\n  },\n]\n\nconst ProductEditor = ({\n  location,\n  getProductForEditorRequest,\n  product,\n  message,\n  clearMessage,\n  loading,\n  getCategoriesRequest,\n  categories\n}) => {\n  const { enqueueSnackbar } = useSnackbar()\n  const [form, setForm] = useState({\n    name: '',\n    price: '',\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1280px-No_image_3x4.svg.png',\n    category: 'Популярно',\n    amount: '',\n    description: '',\n    sale: ''\n  })\n  useEffect(() => {\n    getProductForEditorRequest(location.state.id)\n    getCategoriesRequest()\n  }, [])\n\n  useEffect(() => {\n    if (product.name) {\n      setForm({\n        name: product.name,\n        price: product.price,\n        img: product.img,\n        category: product.category,\n        amount: product.amount,\n        description: product.description,\n        sale: product.sale\n      })\n    }\n  }, [product])\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n      clearMessage()\n    }\n  }, [message])\n\n  const productKeys = Object.keys(product).filter(key => {\n    switch (key) {\n      case '_id': return false\n      case '__v': return false\n      case 'show': return false\n      default: return true\n    }\n  })\n\n  const resetFormHamdler = () => {\n    setForm({\n      name: product.name,\n      price: product.price,\n      img: product.img,\n      category: product.category,\n      amount: product.amount,\n      description: product.description,\n      sale: product.sale\n    })\n  }\n\n  const saveFormHandler = () => {\n\n  }\n\n  const changeInputHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const resetHandler = event => {\n    setForm({ ...form, [event.currentTarget.name]: product[event.currentTarget.name] })\n  }\n\n  const resetControler = (item) => {\n    if (item !== 'category' && product[item] !== form[item]) {\n      return (\n        <IconButton size=\"small\" name={item} onClick={resetHandler}><Icon fontSize=\"small\">restore</Icon></IconButton>\n      )\n    }\n  }\n\n  return (\n    <Grid container component={Paper}>\n      {loading && form.category === undefined\n        ? <Preloader />\n        :\n        <>\n          <Grid item lg={6}>\n            <Box className=\"product-editor-form-wrapper\">\n              <FormControl\n                fullWidth\n                className=\"product-editor-form\"\n              >\n                <FormHelperText>Информация о товаре</FormHelperText>\n                {productKeys.map(item => (item === 'category'\n                  ? <TextField\n                    select\n                    label={labels.find(label => label.name === item).label}\n                    name={item}\n                    key={item}\n                    value={form[item]}\n                    onChange={changeInputHandler}\n                    InputProps={{\n                      endAdornment: resetControler(item)\n                    }}\n                  >\n                    {categories.map((option) => (\n                      <MenuItem key={option._id} value={option.name}>\n                        {option.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  : <TextField\n                    label={labels.find(label => label.name === item).label}\n                    name={item}\n                    key={item}\n                    value={form[item]}\n                    onChange={changeInputHandler}\n                    InputProps={{\n                      endAdornment: resetControler(item)\n                    }}\n                  />\n                ))}\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item lg={6} className=\"product-editor-card\">\n            <Card\n              className=\"card\"\n              variant=\"outlined\"\n            >\n              <CardMedia\n                className=\"card-img\"\n                title={form.name}\n              >\n                <img\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={form.img}\n                />\n              </CardMedia>\n              <CardContent className=\"card-content\">\n                <Typography className=\"card-content-text\" gutterBottom variant=\"subtitle1\">\n                  {form.name}\n                </Typography>\n                <Box component=\"div\" className=\"ratingBtn\">\n                  <Rating\n                    size=\"small\"\n                    name=\"rating\"\n                    value={5}\n                    disabled\n                  />\n                  <Typography component=\"legend\" variant=\"caption\">&nbsp;Отзывов: 0</Typography>\n                </Box>\n              </CardContent>\n              <CardActions\n                disableSpacing={true}\n              >\n                <Typography variant=\"h4\" color=\"primary\">{form.price} &#8372;</Typography>\n                <IconButton color=\"primary\"><Icon>shopping_cart</Icon></IconButton>\n              </CardActions>\n            </Card>\n          </Grid>\n        </>\n      }\n      <Grid item lg={12}>\n        <Toolbar>\n          <Button onClick={resetFormHamdler}>Отменить</Button>\n          <Button onClick={saveFormHandler}>Сохранить</Button>\n        </Toolbar>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst mapStateToPRops = state => {\n  return {\n    product: state.editState.product,\n    message: state.editState.message,\n    loading: state.editState.loading,\n    categories: state.forClientState.categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProductForEditorRequest: bindActionCreators(getProductForEditRequestAction, dispatch),\n    clearMessage: bindActionCreators(clearMessageAction, dispatch),\n    getCategoriesRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToPRops, mapDispatchToProps)(ProductEditor)","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport CategoriesForAdmin from '../components/Categories.Admin/Categories.Admin'\r\nimport ProductsForAdmin from '../components/Products.Admin/Products.Admin'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport OrderPage from '../pages/Order.page/Order.page'\r\nimport { connect } from 'react-redux'\r\nimport ProductEditor from '../components/ProductEditor/ProductEditor'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/order' exact component={OrderPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsForAdmin} />\r\n        <Route path='/admin/product/:id' exact component={ProductEditor} />\r\n        <Route path='/admin/categories' exact component={CategoriesForAdmin} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst checkToken = () => {\r\n  try {\r\n    return jwt.verify(token, 'miraj')\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token: checkToken(),\r\n  isAuth: !!checkToken(),\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload.token,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE,\r\n  CHANGE_PAGE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null,\r\n  currentPage: 1,\r\n  productsLength: 0\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload.products, productsLength: action.payload.productsLength}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload, productsLength: 0}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case CHANGE_PAGE: \r\n      return {...state, currentPage: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_MESSAGE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n  CLEAR_MESSAGE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null,\r\n  productsLength: 0\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload.products,\r\n        productsLength: action.payload.productsLength,\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: [],\r\n        message: action.payload,\r\n        productsLength: 0,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { SET_FILTER_VALUE } from \"./adction\"\n\n\nconst initialState = {\n  value: '',\n}\n\nexport const filterState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_VALUE: {\n      return {\n        ...state,\n        value: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from \"./action\"\n\n\nconst initialState = {\n  cart: localStorage.getItem('shopping-cart') ? JSON.parse(localStorage.getItem('shopping-cart')) : []\n}\n\nexport const shoppingCartState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      }\n    }\n    case DEL_FROM_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      }\n    }\n    default: return state\n  }\n}","import { CHANGE_CURRENT_PAGE } from \"./action\"\n\n\nconst initialState = {\n  currentPage: 1\n}\n\nexport const paginationState = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CURRENT_PAGE: {\n      return {\n        ...state,\n        currentPage: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { SET_STEP } from \"./action\"\n\n\nconst initialState = {\n  step: 0,\n  completed: true\n}\n\nexport const stepsState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STEP: {\n      return {\n        ...state,\n        step: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { GET_PRODUCT_FOR_EDIT_REQUEST, GET_PRODUCT_FOR_EDIT_SUCCESS, GET_PRODUCT_FOR_EDIT_FALURE, CLEAR_MESSAGE } from \"./action\"\n\nconst initialState = {\n  product: {},\n  loading: false,\n  message: null\n}\n\nexport const editState = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PRODUCT_FOR_EDIT_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        product: {}\n      }\n    }\n    case GET_PRODUCT_FOR_EDIT_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        product: action.payload\n      }\n    }\n    case GET_PRODUCT_FOR_EDIT_FALURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload,\n        product: {}\n      }\n    }\n    case CLEAR_MESSAGE: {\n      return {\n        ...state,\n        message: null\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/Products.Admin/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories.Admin/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/Categories.Client/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\nimport { filterState } from '../components/NavBar/reducer'\r\nimport { shoppingCartState } from '../components/ToggleButton/reducer'\r\nimport { paginationState } from '../components/BottomNavBar/reducer'\r\nimport { stepsState } from '../components/OrderSteps/reducer'\r\nimport { editState } from '../components/ProductEditor/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n  filterState,\r\n  shoppingCartState,\r\n  paginationState,\r\n  stepsState,\r\n  editState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ...form }),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ...form }),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if (data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction('Произошла ошибка, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(jwt.verify(data.token, 'miraj')))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction('Произошла ошибка, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker(action) {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n  fork\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = ({limit, page}) => {\r\n  return fetch('/api/products/get-products-for-admin', {\r\n    method: 'POST',\r\n    body: JSON.stringify({limit, page}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker(action) {\r\n  try {\r\n    const data = yield call(fetchProducts, action.payload)\r\n    yield put(getProductsSuccessAction(data.products, data.productsLength))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategoriesSuccessAction,\r\n getCategoriesFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategoriesSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoriesFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategoriesSuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategoriesSuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategoriesSuccessAction } from '../Categories.Admin/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategoriesSuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\nconst fetchProductsForClient = ({category, limit, page}) => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category, limit, page}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('/api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* forClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default forClientWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { SET_FILTER_VALUE } from './adction'\nimport { getProductsForClientSuccessAction, getProductsForClientFailreAction } from '../../pages/Home.page/action'\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\nimport { getProductsSuccessAction, getProductsFailureAction } from '../Products.Admin/action'\n\nconst fetchFilteredProducts = (filterValue) => {\n  return fetch('/api/products/get-filtered-products', {\n    method: 'POST',\n    body: JSON.stringify({filterValue}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* getFilteredProductsWorker(action) {\n  yield put(setCurrentCategoryAction(''))\n  try {\n    const data = yield call(fetchFilteredProducts, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\n      yield put(getProductsSuccessAction(data.products))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n      yield put(getProductsFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction('Произошла неизвестная ошибка'))\n  }\n}\n\nfunction* filterWatcher () {\n  yield takeLatest(SET_FILTER_VALUE, getFilteredProductsWorker)\n}\n\nexport default filterWatcher","import { takeEvery, select, call } from 'redux-saga/effects'\nimport { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from './action'\n\nconst putToLocalStorage = (cart) => {\n  localStorage.setItem('shopping-cart',  JSON.stringify(cart))\n}\n\nfunction* shoppingCartWorker() {\n  const cart = yield select(state => state.shoppingCartState.cart)\n  yield call(putToLocalStorage,cart)\n}\n\nfunction* shoppingCartWatcher() {\n  yield takeEvery(ADD_TO_SHOPPING_CART, shoppingCartWorker)\n  yield takeEvery(DEL_FROM_SHOPPING_CART, shoppingCartWorker)\n}\n\nexport default shoppingCartWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { getProductForEditSuccessAction, getProductForEditFalureAction, GET_PRODUCT_FOR_EDIT_REQUEST } from './action'\n\nconst fetchProductForEdit = id => {\n  return fetch('/api/products/edit', {\n    method: 'POST',\n    body: JSON.stringify({id}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* editProductWorker(action) {\n  try {\n    const data = yield call(fetchProductForEdit, action.payload)\n    if(data.status) {\n      yield put(getProductForEditSuccessAction(data.product))\n    } else {\n      yield put(getProductForEditFalureAction(data.message))\n    }\n  } catch (e) {}\n}\n\nfunction* editProductWatcher() {\n  yield takeLatest(GET_PRODUCT_FOR_EDIT_REQUEST, editProductWorker)\n}\n\nexport default editProductWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/Products.Admin/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories.Admin/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport forClientWatcher from '../pages/Home.page/saga'\r\nimport filterWatcher from '../components/NavBar/saga';\r\nimport shoppingCartWatcher from '../components/ToggleButton/saga'\r\nimport editProductWatcher from '../components/ProductEditor/saga';\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    forClientWatcher(),\r\n    filterWatcher(),\r\n    shoppingCartWatcher(),\r\n    editProductWatcher(),\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}