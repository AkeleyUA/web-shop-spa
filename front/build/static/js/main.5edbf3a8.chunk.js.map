{"version":3,"sources":["components/ShoppingCart/ShoppingCart.js","components/CategoriesList/action.js","components/Preloader/Preloader.js","components/CategoriesList/CategoriesList.js","components/NavBar/adction.js","pages/Home.page/action.js","components/NavBar/NavBar.js","components/ToggleButton/action.js","components/ToggleButton/ToggleButton.js","components/RatingBurron/RatingBurron.js","components/CardsList/CardsList.js","components/Catalog/Catalog.js","components/ToUpButton/ToUpButton.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","pages/AdminPanel.page.js","components/Categories/action.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/Categories/Categories.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/ProductsList/action.js","components/ProductsList/ProductsList.js","components/AdminDashboard/AdminDashboard.js","routes/routes.js","components/AuthForm/reducer.js","components/ProductsList/reducer.js","components/ProductCreator/reducer.js","components/Categories/reducer.js","components/CategoryCreator/reducer.js","components/CategoriesList/reducer.js","pages/Home.page/reducer.js","components/NavBar/reducer.js","components/ToggleButton/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/ProductsList/saga.js","components/ProductCreator/saga.js","components/Categories/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","components/NavBar/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","cart","shoppingCartState","dispatch","useState","page","setPage","rowsPerPage","setRowsPerPage","columns","id","label","Paper","className","TableContainer","style","height","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","slice","row","hover","role","tabIndex","_id","value","TablePagination","rowsPerPageOptions","component","count","length","labelRowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","target","prices","item","price","reduce","a","b","total","setCurrentCategoryAction","category","type","payload","Preloader","CircularProgress","categories","forClientState","loadingCategories","currentCategory","currentCategoryState","setCurrentCategory","bindActionCreators","console","log","List","ListItem","name","Button","fullWidth","classes","variant","onClick","color","endIcon","Icon","Typography","setFilterValueAction","getProductsForClientRequestAction","getProductsForClientSuccessAction","products","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","clearProductsMessageAction","setFilterValue","clearProductsMessage","enqueueSnackbar","useSnackbar","focus","setFocus","open","setOpen","menuOpen","setMenuOpen","setAnchorEl","setValue","useEffect","handleMenuClose","searchHandler","inputRef","forwardRef","props","ref","children","createRef","AppBar","position","zIndex","Toolbar","Hidden","mdUp","IconButton","aria-controls","aria-haspopup","currentTarget","Drawer","onClose","paper","Box","Divider","Link","href","rel","fontSize","smDown","mdDown","orientation","flexItem","startIcon","FormControl","TextField","onChange","onKeyPress","current","blur","inputProps","onFocus","onBlur","InputProps","endAdornment","InputAdornment","Badge","badgeContent","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Grow","in","addToShoppingCartAction","product","delFromShoppingCartAction","addToCart","delFromCart","selected","setSelected","find","RatingButton","ratingValue","setRatinValue","Rating","newValue","loadingProducts","getProductsForClientRequest","Grid","container","spacing","xs","sm","md","lg","Card","CardActionArea","CardMedia","image","img","title","CardContent","gutterBottom","description","CardActions","disableSpacing","ToUpButton","show","setShow","scrollHandler","document","documentElement","scrollTop","window","addEventListener","removeEventListener","Zoom","unmountOnExit","Fab","scroll","top","behavior","getCategoriesForClientRequest","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","loginFailureAction","logoutAction","loading","authState","registrationRequest","loginRequest","anchorEl","email","password","err","setErr","setForm","changeInputHandler","popperHandler","Popper","placement","transition","TransitionProps","Fade","justify","alignContent","error","required","ButtonGroup","disabled","AuthPage","DeveloperPage","settingsList","path","icon","listItem","root","listIcon","divider","CustomButton","to","activeOnlyWhenExact","math","useRouteMatch","exact","isExact","ListItemIcon","ListItemText","AdminSettingsList","elevation","light","CustomLink","textDecoration","logout","location","findName","pathname","margin","display","justifyContent","undefined","padding","AdminRoutes","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","addCategoryRequestAction","addCategoryFailureAction","categoryCreatorState","success","addCategoryRequest","setCategory","isOpen","setIsOpen","modalCloseHendler","addCatogory","useCallback","aria-labelledby","size","FormHelperText","autoComplete","BreadcrumbsCreator","active","categoriesState","oneCategoryLoading","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","Breadcrumbs","separator","align","scope","Checkbox","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","Select","displayEmpty","MenuItem","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","getProducts","checkboxChangeHendler","TableCreator","filter","match","InputLabel","htmlFor","Input","startAdornment","AdminDashboard","border","mapStateToProps","isAuth","Routes","AdminPanelPage","HomePage","ProductsList","ProductCreator","Categories","sessionStorage","getItem","initialState","localStorage","JSON","parse","rootReducer","combineReducers","action","filterState","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","stringify","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","forClientWatcher","fetchProductsForClient","fetchCategoriesForClient","getFilteredProductsWorker","filterWatcher","fetchFilteredProducts","filterValue","rootSaga","all","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","theme","createMuiTheme","palette","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","anchorOrigin","horizontal","vertical","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5edbf3a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nimport './ShoppingCart.scss'\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst ShoppingCart = ({ cart }) => {\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(5)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  const total = () => {\r\n    const prices = cart.map(item => item.price)\r\n    if (prices.length > 0) {\r\n      return prices.reduce((a, b) => a + b)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      id: 'name',\r\n      label: \"Название\",\r\n    },\r\n    {\r\n      id: 'price',\r\n      label: \"Цена\",\r\n    },\r\n    {\r\n      id: 'delete',\r\n      label: \"Удалить\",\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Paper className=\"table-wrapper\">\r\n      <TableContainer style={{ height: 325 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cart.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={cart.length}\r\n        rowsPerPage={rowsPerPage}\r\n        labelRowsPerPage=\"Товаров на странице\"\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <div>Всего: {total()}</div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <Paper className=\"preloader-wrapper\">\r\n      <CircularProgress />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './CategoriesList.scss'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesList = ({ categories, setCurrentCategory, loadingCategories, currentCategory }) => {\r\n  if (loadingCategories) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  } else {\r\n    console.log(1)\r\n    return (\r\n      <List className=\"categories-list\">\r\n        {categories.map((item) => (\r\n          <ListItem key={item.name}>\r\n            <Button\r\n              fullWidth\r\n              classes={{\r\n                fullWidth: (currentCategory === item.name ? 'full-width-btn active' : 'full-width-btn')\r\n              }}\r\n              variant='text'\r\n              onClick={() => setCurrentCategory(item.name)}\r\n              color={currentCategory === item.name ? 'secondary' : 'default'}\r\n              endIcon={currentCategory === item.name ? <Icon>beenhere</Icon> : null}\r\n            >\r\n              <Typography variant=\"button\">{item.name}</Typography>\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList)","export const SET_FILTER_VALUE = 'SET_FILTER_VALUE'\n\nexport const setFilterValueAction = value => {\n  return {\n    type: SET_FILTER_VALUE,\n    payload: value\n  }\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\nexport const CLEAR_PRODUCTS_MESSAGE = 'CLEAR_PRODUCTS_MESSAGE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = category => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: category\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearProductsMessageAction = () => {\r\n  return {\r\n    type: CLEAR_PRODUCTS_MESSAGE\r\n  }\r\n}","import React, { useState, useEffect, createRef, forwardRef } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  Modal,\r\n  Hidden,\r\n  Drawer,\r\n  FormControl,\r\n  Backdrop,\r\n  Grow,\r\n  Divider,\r\n  Link\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesList from '../CategoriesList/CategoriesList';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setFilterValueAction } from './adction';\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearProductsMessageAction } from '../../pages/Home.page/action';\r\n\r\n\r\nconst NavBar = ({ setFilterValue, message, clearProductsMessage, cart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [focus, setFocus] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [value, setValue] = useState('')\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearProductsMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  const handleMenuOpen = event => {\r\n    setMenuOpen(true)\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const searchHandler = () => {\r\n    setFilterValue(value)\r\n  }\r\n\r\n  const keyHandler = event => {\r\n    if (event.key === 'Enter') {\r\n      searchHandler()\r\n      inputRef.current.blur()\r\n    }\r\n  }\r\n\r\n  const MenuItemsWithRef = forwardRef((props, ref) => {\r\n    return (\r\n      <div ref={ref} className=\"body-for-menu-items\">\r\n        {props.children}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const modalRef = createRef()\r\n  const inputRef = createRef()\r\n  const menuRef = createRef()\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" style={{ zIndex: 1201 }} className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden mdUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            onClose={handleMenuClose}\r\n            open={menuOpen}\r\n            classes={{\r\n              paper: 'mobild-drawer-papper'\r\n            }}\r\n          >\r\n            <Box>\r\n              <Box className=\"menu-header-group\">\r\n                <Typography variant=\"h3\" className=\"logo-mobile\">LOGOtip</Typography>\r\n                <IconButton\r\n                  className=\"menu-close-btn\"\r\n                  onClick={handleMenuClose}\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </Box>\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n              <Typography variant=\"caption\" className=\"menu-caption\">Категории товаров</Typography>\r\n              <CategoriesList />\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n            </Box>\r\n            <Box\r\n              aria-label=\"social-links\"\r\n              className=\"social-btn-group\"\r\n            >\r\n              <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n              <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n              <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n            </Box>\r\n          </Drawer>\r\n          {/* <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            keepMounted\r\n            open={menuOpen}\r\n            onClose={handleMenuClose}\r\n            classes={{\r\n              paper: \"mobile-menu\"\r\n            }}\r\n            anchorEl={anchorEl}\r\n          >\r\n            <MenuItemsWithRef ref={menuRef}>\r\n              <CategoriesList />\r\n            </MenuItemsWithRef>\r\n          </Menu> */}\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 95 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n          </Box>\r\n        </Hidden>\r\n        <FormControl\r\n          className=\"search-wrapper\">\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onChange={inputFilterHandler}\r\n            onKeyPress={keyHandler}\r\n            inputProps={{\r\n              ref: inputRef,\r\n              onFocus: () => setFocus(true),\r\n              onBlur: () => setFocus(false)\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    color={focus ? 'primary' : 'default'}\r\n                    onClick={searchHandler}\r\n                  >\r\n                    <Icon>search</Icon>\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <IconButton\r\n          aria-label=\"cart\"\r\n          onClick={handleOpen}\r\n        >\r\n          <Badge badgeContent={cart.length} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Modal\r\n        open={open}\r\n        aria-describedby=\"spring-modal-description\"\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Grow in={open}>\r\n          <div className='body-container-for-modal'>\r\n            <ShoppingCart id=\"spring-modal-description\" />\r\n          </div>\r\n        </Grow>\r\n      </Modal>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.forClientState.message,\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch),\r\n    clearProductsMessage: bindActionCreators(clearProductsMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","export const ADD_TO_SHOPPING_CART = 'ADD_TO_SHOPPING_CART'\nexport const DEL_FROM_SHOPPING_CART = 'DEL_FROM_SHOPPING_CART'\n\n\nexport const addToShoppingCartAction = product => {\n  return {\n    type: ADD_TO_SHOPPING_CART,\n    payload: product\n  }\n}\n\nexport const delFromShoppingCartAction = id => {\n  return {\n    type: DEL_FROM_SHOPPING_CART,\n    payload: id\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Box } from '@material-ui/core';\n\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addToShoppingCartAction, delFromShoppingCartAction } from './action'\n\nconst PriceToggleButton = ({ children, product, addToCart, delFromCart, cart }) => {\n  const [selected, setSelected] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    const findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      setSelected(true)\n    }\n  }, [cart])\n\n  const handler = () => {\n    let findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      enqueueSnackbar('Удалено из корзины')\n      delFromCart(product._id)\n      setSelected(false)\n    } else {\n      enqueueSnackbar('Добавлено в корзину')\n      addToCart(product)\n      setSelected(true)\n    }\n  }\n\n  return (\n    <Box component=\"div\" className=\"card-button-wrapper\">\n      <Button\n        color={selected ? 'inherit' : 'primary'}\n        variant={selected ? 'outlined' : 'contained'}\n        aria-label=\"add to shopping cart\"\n        onClick={handler}\n        endIcon={selected ? <Icon>check</Icon> : <Icon>shopping_cart</Icon>}\n      >\n        {children} $\n    </Button>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: bindActionCreators(addToShoppingCartAction, dispatch),\n    delFromCart: bindActionCreators(delFromShoppingCartAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceToggleButton)","import React, { useState } from 'react'\nimport { Rating } from '@material-ui/lab'\nimport { Box, Typography} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\n\nexport const RatingButton = ({id}) => {\n  const [ratingValue, setRatinValue] = useState(0)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const ratingHandler = (event, newValue) => {\n    console.log(newValue)\n    setRatinValue(+newValue)\n    if(+newValue === 0) {\n      enqueueSnackbar('Оценка удалена')\n    } else if (ratingValue !== +newValue && ratingValue !== 0) {\n      enqueueSnackbar('Оценка изменена')\n    } else {\n      enqueueSnackbar('Спасибо за оценку')\n    }\n  }\n\n  return (\n    <Box component=\"div\">\n      <Typography component=\"legend\" variant=\"caption\">Оценка: {ratingValue}</Typography>\n      <Rating\n        name={id}\n        value={ratingValue}\n        onChange={ratingHandler}\n      />\n    </Box>\n  )\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\n\r\nimport './CardsList.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action'\r\nimport { bindActionCreators } from 'redux'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport PriceToggleButton from '../ToggleButton/ToggleButton'\r\nimport { RatingButton } from '../RatingBurron/RatingBurron'\r\n\r\n\r\nconst CardsList = ({ products, loadingProducts }) => {\r\n\r\n  if (loadingProducts) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  } else {\r\n    return (\r\n      <Paper className=\"cards-list\">\r\n        <Grid container spacing={3}>\r\n          {products.map(item => {\r\n            return (\r\n              <Grid item xs={12} sm={6} md={6} lg={4} key={item._id}>\r\n                <Card\r\n                  className=\"card\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"card-img\"\r\n                      image={item.img}\r\n                      title={item.name}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {item.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions\r\n                    disableSpacing={true}\r\n                  >\r\n                    <RatingButton \r\n                      id={item._id}\r\n                    />\r\n                    <PriceToggleButton\r\n                      product={item}\r\n                    >\r\n                      {item.price}\r\n                    </PriceToggleButton>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n  Drawer,\r\n  Divider,\r\n} from '@material-ui/core'\r\n\r\nimport CategoriesList from '../CategoriesList/CategoriesList'\r\nimport CardsList from '../CardsList/CardsList'\r\n\r\nimport './Catalog.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from '../CategoriesList/action'\r\n\r\n\r\nconst Catalog = ({ products, setCurrentCategory }) => {\r\n\r\n  const popularHandler = () => {\r\n    setCurrentCategory('Популярно')\r\n  }\r\n\r\n  return (\r\n    <Box className=\"catalog-wrapper\">\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n      >\r\n        <Hidden smDown>\r\n          <Grid item md={3} lg={3}>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className=\"categories-container\"\r\n              open\r\n            >\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Товары ({!products.length ? \"...\" : products.length})\r\n              </Typography>\r\n              <Divider variant=\"middle\" />\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={popularHandler}\r\n                >\r\n                  Популярное\r\n                </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Лучшие цены\r\n                </Button>\r\n              </Box>\r\n              <Divider variant=\"middle\" />\r\n              <CategoriesList />\r\n            </Drawer>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={9}\r\n          xs={12}\r\n        >\r\n          <CardsList />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    message: state.forClientState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, { useEffect, useState } from 'react'\nimport { Fab, Icon, Zoom } from '@material-ui/core'\nimport './ToUpButton.scss'\n\n\nexport const ToUpButton = () => {\n  const [show, setShow] = useState(false)\n\n  const scrollHandler = () => {\n    document.documentElement.scrollTop > 400\n      ? setShow(true)\n      : setShow(false)\n  }\n  const scrollToTopHandler = () => {\n    window.scroll({top: 0, behavior: 'smooth'})\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler)\n    return () => {\n      window.removeEventListener('scroll', scrollHandler)\n    }\n  }, [])\n\n  return (\n    <div className=\"to-up-button\">\n      <Zoom\n        timeout={350}\n        in={show}\n        unmountOnExit\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={scrollToTopHandler}\n        >\n          <Icon>expand_less</Icon>\n        </Fab>\n      </Zoom>\n    </div>\n  )\n}","import React, {useEffect} from 'react'\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\nimport { ToUpButton } from '../../components/ToUpButton/ToUpButton'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCategoriesForClientRequestAction, getProductsForClientRequestAction } from './action'\r\n\r\nconst HomePage = ({  getProductsForClientRequest, getCategoriesForClientRequest, currentCategory  }) => {\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== '') {\r\n      getProductsForClientRequest(currentCategory)\r\n    }\r\n  }, [currentCategory])\r\n\r\n  return  (\r\n    <div >\r\n      <NavBar />\r\n      <Catalog />\r\n      <ToUpButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentCategory: state.currentCategoryState.currentCategory,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch),\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: token\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} onClick={popperHandler} placement=\"bottom-start\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center' alignContent='center' className=\"container\">\r\n        <Grid item xs={12} sm={8} md={6} lg={4} component={Paper}>\r\n          <FormControl className=\"form-wrapper\">\r\n            <Typography variant=\"h3\" className=\"title\">\r\n              LOGOtip\r\n            <Typography variant=\"caption\">\r\n                админ\r\n            </Typography>\r\n            </Typography>\r\n            <TextField\r\n              error={err.email}\r\n              className=\"auth-input\"\r\n              id=\"email\"\r\n              label=\"email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              inputProps={{ value: form.email }}\r\n              onChange={changeInputHandler}\r\n              required\r\n            />\r\n            <TextField\r\n              error={err.password}\r\n              className=\"auth-input\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={changeInputHandler}\r\n              inputProps={{ value: form.password }}\r\n              required\r\n            />\r\n            <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>forward</Icon>}\r\n                type=\"submit\"\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Войти</Typography>\r\n            </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>add_box</Icon>}\r\n                type=\"submit\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Регистрация</Typography>\r\n            </Button>\r\n              <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n                <Icon>help_outline</Icon>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm)","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets'\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category'\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nconst CustomButton = ({ to, label, activeOnlyWhenExact, icon }) => {\r\n  const math = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <Link to={to} className=\"admin-drawer-link\">\r\n      <ListItem\r\n        component={Button}\r\n        variant=\"contained\"\r\n        classes={classes.listItem}\r\n        selected={math ? math.isExact : false}\r\n      >\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon>{icon}</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            {label}\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          return (\r\n            <CustomButton\r\n              key={item.name}\r\n              to={item.path}\r\n              label={item.name}\r\n              activeOnlyWhenExact\r\n              icon={item.icon} />\r\n          )\r\n        })}\r\n      </List>\r\n      <Link to='/developer' className=\"to-developer admin-drawer-link\">\r\n        <ListItem\r\n          component={Button}\r\n          variant=\"contained\"\r\n          classes={classes.listItem}\r\n          selected\r\n        >\r\n          <ListItemIcon\r\n            classes={classes.listIcon}\r\n          >\r\n            <Icon>code</Icon>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"caption\">\r\n              Разработчик\r\n              </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </Link >\r\n    </Drawer>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { logoutAction } from \"../components/AuthForm/action\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport { settingsList } from '../components/AdminSettingsList/AdminSettingsList'\r\n\r\nconst CustomLink = ({to, onClick}) => {\r\n  return (\r\n    <Link to={to} onClick={onClick} style={{textDecoration:'none'}}>\r\n      <Button>Выйти</Button>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst AdminPanelPage = ({ logout, location }) => {\r\n  console.log(location)\r\n  const pathList = settingsList.map(item => ({ path: item.path, name: item.name }))\r\n  const findName = pathList.find(item => item.path === location.pathname)\r\n\r\n  return (\r\n    <Grid container className=\"admin-panel\">\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, display: 'flex', justifyContent: 'space-between' }} component={Paper}>\r\n          <Typography variant=\"body1\">\r\n            {findName !== undefined ? findName.name : ''}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"secondary\">\r\n            Дисклеймер: Админ панель ещё в разработке\r\n          </Typography>\r\n          <CustomLink to='/admin' onClick={logout}/>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={2} className=\"admin-drawer\">\r\n        <AdminSettingsList />\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20}} component={Paper}>\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: bindActionCreators(logoutAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoryRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategorySuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoryFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n  const modalOpenHandler = () => {\r\n    setIsOpen(true)\r\n  }\r\n  const modalCloseWrapper = (event) => {\r\n    if(event.currentTarget === event.target) {\r\n      setIsOpen(false)\r\n    }\r\n  }\r\n  const modalCloseHendler = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      modalCloseHendler()\r\n      setCategory({name: ''})\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <Paper className=\"category-creator\">\r\n      <Button variant=\"outlined\" onClick={modalOpenHandler}>Добавить</Button>\r\n      <Modal\r\n        open={isOpen}\r\n        onClose={modalCloseHendler}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"category-creator-body\" onClick={modalCloseWrapper}>\r\n          <FormControl\r\n            className=\"add-category-form\"\r\n            margin=\"dense\"\r\n            required\r\n            size=\"small\"\r\n          >\r\n            <FormHelperText>Добавление категории</FormHelperText>\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Название\"\r\n              variant=\"outlined\"\r\n              name=\"name\"\r\n              size=\"small\"\r\n              onChange={changeInputHandler}\r\n              value={category.name}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={modalCloseHendler}>Закрыть</Button>\r\n          </FormControl>\r\n        </div>\r\n      </Modal>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React, { useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n  Breadcrumbs\r\n} from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './Categories.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\n\r\nconst BreadcrumbsCreator = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin'\r\n  },\r\n  {\r\n    name: 'Категории',\r\n    path: '/admin/categories',\r\n    active: true\r\n  },\r\n]\r\n\r\nconst Categories = ({\r\n  categories,\r\n  getCategoryRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  \r\n  const {enqueueSnackbar} = useSnackbar()\r\n\r\n  const getCategory = useCallback(\r\n    () => {\r\n      getCategoryRequest()\r\n    },\r\n    [categories],\r\n  )\r\n\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {BreadcrumbsCreator.map(item => (\r\n          <NavLink key={item.name} to={item.path} className={item.active ? 'active-link link' : 'link' }>{item.name}</NavLink>\r\n        ))}\r\n      </Breadcrumbs>\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                        color=\"primary\"\r\n                        name={row._id}\r\n                        checked={row.show || false}\r\n                        onChange={(event) => {\r\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                        }}\r\n                        disabled={loading || oneCategoryLoading}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                    className=\"centered-btn\"\r\n                    onClick={() => {deleteCategoryRequest(row._id)}}\r\n                    disabled={loading || oneCategoryLoading}\r\n                  >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <CategoryCreator />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_FORM = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const formCleanerAction = status => {\r\n  return {\r\n    type: CLEAR_FORM,\r\n    payload: status\r\n  }\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\r\nimport { getCategoryRequestAction } from '../Categories/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  formCleaner,\r\n  success,\r\n  getCategoryRequest,\r\n  categoriesLoading,\r\n}) => {\r\n  const {enqueueSnackbar} = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  const getCategories = useCallback(() => {\r\n    getCategoryRequest()\r\n  },[getCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    formCleaner(false)\r\n    return () => {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <div className=\"product-creator\">\r\n      <Paper className=\"form-wrapper\">\r\n        <FormControl\r\n          className=\"add-product-form\"\r\n          margin=\"dense\"\r\n          required\r\n          size=\"small\"\r\n        >\r\n          <FormHelperText>Добавление товара</FormHelperText>\r\n          <Select\r\n            className=\"categories-select\"\r\n            value={form.category}\r\n            onChange={changeInputHandler}\r\n            name=\"category\"\r\n            displayEmpty\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={categoriesLoading}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Выберите категорию\r\n            </MenuItem>\r\n            {categories.map(item => {\r\n              return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n            })}\r\n          </Select>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Название\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.name}\r\n          />\r\n          <TextField\r\n            id=\"amount\"\r\n            label=\"Колличество\"\r\n            variant=\"outlined\"\r\n            name=\"amount\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.amount}\r\n          />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Цена\"\r\n            variant=\"outlined\"\r\n            name=\"price\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.price}\r\n          />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Описание\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.description}\r\n          />\r\n          <TextField\r\n            id=\"img\"\r\n            label=\"Изображение (url)\"\r\n            variant=\"outlined\"\r\n            name=\"img\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.img}\r\n          />\r\n          <Button type=\"submit\" variant=\"outlined\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n        </FormControl>\r\n        <NavLink className=\"btn\" to=\"/admin/products\">Список продуктов</NavLink>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    success: state.productCreatorState.success,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getProductsRequestAction = () => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n} from './action'\r\n\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Input,\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './ProductsList.scss'\r\n\r\n\r\nconst ProductsList = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [value, setValue] = useState('')\r\n\r\n  const getProducts = useCallback(() => {\r\n    getProductsRequest()\r\n  }, [getProductsRequest])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar( typeof message === \"string\" ? message : 'Неизвестная ошибка')\r\n    }\r\n  }, [message])\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell >Описание</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.filter(row => row.name.match(value)).map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell >{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      onClick={() => { deleteProductRequest(row._id) }}\r\n                      disabled={oneProductLoading === row.id}\r\n                    >\r\n                      <Icon>clear</Icon>\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-list\">\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"input-with-icon-search\">Введите имя товара</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-search\"\r\n          onChange={inputFilterHandler}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Icon>search</Icon>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      {loading ? <Preloader /> : <TableCreator />}\r\n      <NavLink\r\n        to=\"/admin/products/add\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      >Добавить</NavLink>\r\n      <NavLink\r\n        to=\"/admin\"\r\n        variant=\"outlined\"\r\n      >Панель управления</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <Typography variant=\"subtitle1\">Пользователей на сайте</Typography>\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Модераторы(4)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Контент-менеджеры(2)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport Categories from '../components/Categories/Categories'\r\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\r\nimport ProductsList from '../components/ProductsList/ProductsList'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsList} />\r\n        <Route path='/admin/products/add' exact component={ProductCreator} />\r\n        <Route path='/admin/categories' exact component={Categories} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token,\r\n  isAuth: (token ? true : false),\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true,\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_FORM: {\r\n      return {\r\n        ...state,\r\n        success: action.status\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n  CLEAR_PRODUCTS_MESSAGE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_PRODUCTS_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { SET_FILTER_VALUE } from \"./adction\"\n\n\nconst initialState = {\n  value: '',\n}\n\nexport const filterState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_VALUE: {\n      return {\n        ...state,\n        value: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from \"./action\"\n\n\nconst initialState = {\n  cart: localStorage.getItem('shopping-cart') ? JSON.parse(localStorage.getItem('shopping-cart')) : []\n}\n\nexport const shoppingCartState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      }\n    }\n    case DEL_FROM_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/ProductsList/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/CategoriesList/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\nimport { filterState } from '../components/NavBar/reducer'\r\nimport { shoppingCartState } from '../components/ToggleButton/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n  filterState,\r\n  shoppingCartState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if(data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(data.token))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker() {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  \r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  \r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = () => {\r\n  return fetch('/api/products/get-products', {\r\n    method: 'GET',\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker() {\r\n  try {\r\n    const data = yield call(fetchProducts)\r\n    yield put(getProductsSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategorySuccessAction,\r\n getCategoryFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategorySuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategorySuccessAction } from '../Categories/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\n\r\nconst fetchProductsForClient = category => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* forClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default forClientWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { SET_FILTER_VALUE } from './adction'\nimport { getProductsForClientSuccessAction, getProductsForClientFailreAction } from '../../pages/Home.page/action'\nimport { setCurrentCategoryAction } from '../CategoriesList/action'\n\nconst fetchFilteredProducts = (filterValue) => {\n  return fetch('/api/products/get-filtered-products', {\n    method: 'POST',\n    body: JSON.stringify({filterValue}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* getFilteredProductsWorker(action) {\n  yield put(setCurrentCategoryAction(''))\n  try {\n    const data = yield call(fetchFilteredProducts, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction('Произошла неизвестная ошибка'))\n  }\n}\n\nfunction* filterWatcher () {\n  yield takeLatest(SET_FILTER_VALUE, getFilteredProductsWorker)\n}\n\nexport default filterWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/ProductsList/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport forClientWatcher from '../pages/Home.page/saga'\r\nimport filterWatcher from '../components/NavBar/saga';\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    forClientWatcher(),\r\n    filterWatcher()\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}