{"version":3,"sources":["components/ShoppingCart/ShoppingCart.js","components/CategoriesList/action.js","pages/Home.page/action.js","components/Preloader/Preloader.js","components/CategoriesList/CategoriesList.js","components/NavBar/NavBar.js","components/CardsList/CardsList.js","components/Catalog/Catalog.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","pages/AdminPanel.page.js","components/Categories/action.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/Categories/Categories.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/ProductsList/action.js","components/ProductsList/ProductsList.js","components/AdminDashboard/AdminDashboard.js","routes/routes.js","components/AuthForm/reducer.js","components/ProductsList/reducer.js","components/ProductCreator/reducer.js","components/Categories/reducer.js","components/CategoryCreator/reducer.js","components/CategoriesList/reducer.js","pages/Home.page/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/ProductsList/saga.js","components/ProductCreator/saga.js","components/Categories/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["ShoppingCart","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","name","price","columns","id","label","Paper","style","width","className","TableContainer","height","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","slice","row","hover","role","tabIndex","value","TablePagination","rowsPerPageOptions","component","count","length","labelRowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","target","item","reduce","a","b","setCurrentCategoryAction","category","type","payload","getProductsForClientRequestAction","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","Preloader","CircularProgress","connect","state","categories","forClientState","loadingCategories","dispatch","setCurrentCategory","bindActionCreators","getCategoriesForClientRequest","checkedCategory","setCheckCategory","useEffect","Box","Typography","variant","Tabs","orientation","onChange","currentTarget","TabIndicatorProps","left","right","index","Tab","_id","color","StyledBadge","withStyles","theme","badge","top","border","palette","background","paper","padding","Badge","NavBar","focus","setFocus","open","setOpen","menuOpen","setMenuOpen","ShoppingCartWithRef","React","forwardRef","props","ref","children","createRef","AppBar","position","Toolbar","Hidden","lgUp","IconButton","aria-controls","aria-haspopup","onClick","Icon","Menu","keepMounted","onClose","classes","anchorEl","smDown","mdDown","Button","startIcon","TextField","fullWidth","onFocus","onBlur","InputProps","startAdornment","InputAdornment","endAdornment","badgeContent","Modal","BackdropProps","display","justifyContent","products","loadingProducts","currentCategory","currentCategoryState","getProductsForClientRequest","ratingValue","setRatinValue","enqueueSnackbar","useSnackbar","ratingHandler","newValue","addToCartHandler","Grid","container","spacing","xs","sm","md","lg","Card","CardActionArea","CardMedia","image","img","title","CardContent","gutterBottom","description","CardActions","disableSpacing","Rating","endIcon","HomePage","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","loginFailureAction","logoutAction","loading","authState","registrationRequest","loginRequest","setAnchorEl","email","password","err","setErr","setForm","changeInputHandler","Popper","placement","transition","TransitionProps","Fade","timeout","FormControl","error","inputProps","required","ButtonGroup","disabled","AuthPage","DeveloperPage","settingsList","path","icon","listItem","root","selected","listIcon","divider","CustomButton","to","activeOnlyWhenExact","math","useRouteMatch","exact","ListItem","isExact","ListItemIcon","ListItemText","AdminSettingsList","Drawer","elevation","List","Divider","light","CustomLink","textDecoration","logout","location","console","log","findName","find","pathname","margin","undefined","AdminRoutes","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","addCategoryRequestAction","addCategoryFailureAction","categoryCreatorState","success","addCategoryRequest","setCategory","isOpen","setIsOpen","modalCloseHendler","addCatogory","useCallback","aria-labelledby","aria-describedby","size","FormHelperText","autoComplete","BreadcrumbsCreator","active","categoriesState","oneCategoryLoading","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","Breadcrumbs","separator","align","scope","Checkbox","show","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","Select","displayEmpty","MenuItem","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","setValue","getProducts","checkboxChangeHendler","TableCreator","filter","match","InputLabel","htmlFor","Input","AdminDashboard","mapStateToProps","isAuth","Routes","AdminPanelPage","ProductsList","ProductCreator","Categories","sessionStorage","getItem","initialState","rootReducer","combineReducers","action","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","JSON","stringify","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","ForClientWatcher","fetchProductsForClient","fetchCategoriesForClient","rootSaga","all","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","createMuiTheme","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","anchorOrigin","horizontal","vertical","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.846bb93d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nimport './ShoppingCart.scss'\r\n\r\nexport const ShoppingCart = () => {\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(5)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  const rows = [\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    },\r\n    {\r\n      name: 'Товар1',\r\n      price: 100\r\n    }\r\n  ]\r\n  const columns = [\r\n    {\r\n      id: 'name',\r\n      label: \"Название\",\r\n    },\r\n    {\r\n      id: 'price',\r\n      label: \"Цена\",\r\n    },\r\n    {\r\n      id: 'delete',\r\n      label: \"Удалить\",\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Paper style={{ width: \"100%\" }} className=\"table-wrapper\">\r\n      <TableContainer style={{ height: 325 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        labelRowsPerPage=\"Товаров на странице\"\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <div>Всего: {rows.map(item => item.price).reduce((a, b) => (a + b))}</div>\r\n    </Paper>\r\n  )\r\n}","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = category => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: category\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <Paper className=\"preloader-wrapper\">\r\n      <CircularProgress />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './CategoriesList.scss'\r\nimport { getCategoriesForClientRequestAction } from '../../pages/Home.page/action'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesList = ({categories, setCurrentCategory, getCategoriesForClientRequest, loadingCategories }) => {\r\n  const [checkedCategory, setCheckCategory] = useState(0)\r\n\r\n  const changeHandler = event => {\r\n    setCheckCategory(event.currentTarget.tabIndex)\r\n    setCurrentCategory(categories[event.currentTarget.tabIndex].name)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  if (loadingCategories) {\r\n    return (\r\n      <Preloader/>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box className=\"tabs-wrapper\">\r\n        <Typography className=\"tabs-title\" variant=\"subtitle2\">Категория</Typography>\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          variant=\"fullWidth\"\r\n          value={checkedCategory}\r\n          onChange={changeHandler}\r\n          TabIndicatorProps={{ style: { left: 0, right: 'auto' } }}\r\n          label=\"Категория\"\r\n        >\r\n          {categories.map((item, index) => {\r\n            return (\r\n              <Tab\r\n                key={item._id}\r\n                type=\"button\"\r\n                label={\r\n                  <Typography\r\n                    variant={checkedCategory === index ? \"h6\" : \"body2\"}\r\n                    color={checkedCategory === index ? 'secondary' : 'initial'}\r\n                    component=\"p\"\r\n                  >\r\n                    {item.name}\r\n                  </Typography>\r\n                }\r\n                tabIndex={index}\r\n                value={index}\r\n              />\r\n            )\r\n          })}\r\n        </Tabs>\r\n      </Box>\r\n    )\r\n  } \r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch),\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList)","import React, { useState } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  withStyles,\r\n  Badge,\r\n  Modal,\r\n  Hidden,\r\n  Menu,\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport { ShoppingCart } from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesList from '../CategoriesList/CategoriesList';\r\n\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge)\r\n\r\nexport const NavBar = () => {\r\n  const [focus, setFocus] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleMenuOpen = () => {\r\n    setMenuOpen(true)\r\n  }\r\n  \r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const ShoppingCartWithRef = React.forwardRef((props, ref) => {\r\n    return (\r\n      <div tabIndex={-1} ref={ref} className=\"body-container-for-modal\">\r\n        {props.children}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const ref = React.createRef()\r\n\r\n  return (\r\n    <AppBar position=\"static\" className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            keepMounted\r\n            open={menuOpen}\r\n            onClose={handleMenuClose}\r\n            classes={{\r\n              paper: \"mobile-menu\"\r\n            }}\r\n            anchorEl\r\n          >\r\n            <CategoriesList/>\r\n          </Menu>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 049 XX XX\r\n              </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 049 XX XX\r\n              </Button>\r\n          </Box>\r\n        </Hidden>\r\n        <Box className=\"search-wrapper\">\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onFocus={() => setFocus(true)}\r\n            onBlur={() => setFocus(false)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Icon color={focus ? \"primary\" : \"inherit\"}>search</Icon>\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {focus ? <Button color=\"primary\" variant=\"contained\">Найти</Button> : <Icon></Icon>}\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Box>\r\n        <IconButton\r\n          aria-label=\"cart\"\r\n          onClick={handleOpen}\r\n        >\r\n          <StyledBadge badgeContent={4} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </StyledBadge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        BackdropProps={{style: {display: 'flex', justifyContent: 'center'}}}\r\n      >\r\n        <ShoppingCartWithRef ref={ref}>\r\n          <ShoppingCart />\r\n        </ShoppingCartWithRef>\r\n      </Modal>\r\n    </AppBar>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Icon,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport { Rating } from '@material-ui/lab'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport './CardsList.scss'\r\nimport { connect } from 'react-redux';\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action';\r\nimport { bindActionCreators } from 'redux';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\n\r\nconst CardsList = ({ products, getProductsForClientRequest, currentCategory, loadingProducts }) => {\r\n  const [ratingValue, setRatinValue] = useState(3)\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ratingHandler = (event, newValue) => {\r\n    setRatinValue(+newValue)\r\n  }\r\n\r\n  const addToCartHandler = () => {\r\n    enqueueSnackbar('Добавлено в корзину')\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProductsForClientRequest(currentCategory)\r\n  }, [currentCategory, getProductsForClientRequest])\r\n\r\n  if (loadingProducts) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  } else {\r\n    return (\r\n      <Paper className=\"cards-list\">\r\n        <Grid container spacing={3}>\r\n          {products.map(item => {\r\n            return (\r\n              <Grid item xs={12} sm={6} md={6} lg={4} key={item._id}>\r\n                <Card\r\n                  className=\"card\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"card-img\"\r\n                      image={item.img}\r\n                      title={item.name}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {item.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions\r\n                    disableSpacing={true}\r\n                  >\r\n                    <Box component=\"div\">\r\n                      <Typography component=\"legend\" variant=\"caption\">Оценка: {ratingValue}</Typography>\r\n                      <Rating\r\n                        name=\"product-rating\"\r\n                        value={ratingValue}\r\n                        onChange={ratingHandler}\r\n                      />\r\n                    </Box>\r\n                    <Box component=\"div\" className=\"card-button-wrapper\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        aria-label=\"add to shopping cart\"\r\n                        onClick={addToCartHandler}\r\n                        endIcon={<Icon>shopping_cart</Icon>}\r\n                      >\r\n                        {item.price} $\r\n                      </Button>\r\n                    </Box>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n} from '@material-ui/core'\r\n\r\nimport CategoriesList from '../CategoriesList/CategoriesList'\r\nimport CardsList from '../CardsList/CardsList'\r\n\r\nimport './Catalog.scss'\r\n\r\n\r\nconst Catalog = ({ products }) => {\r\n  return (\r\n    <Box className=\"catalog-wrapper\">\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n      >\r\n        <Hidden mdDown>\r\n          <Grid item xs={12}>\r\n            <Paper className=\"header\">\r\n              <Typography variant=\"h5\">Header and filter</Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n          >\r\n            <Paper className=\"filter\">\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Товары ({!products.length ? \"...\" : products.length})\r\n            </Typography>\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Популярное\r\n            </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Лучшие цены\r\n              </Button>\r\n              </Box>\r\n              <CategoriesList />\r\n            </Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={12}\r\n          xs={12}\r\n        >\r\n          <CardsList />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React from 'react'\r\nimport { NavBar } from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\n\r\nconst HomePage = () => {\r\n  return  (\r\n    <>\r\n      <NavBar />\r\n      <Catalog />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: token\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} placement=\"right\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Box className=\"container\">\r\n        <FormControl className=\"form-wrapper\">\r\n          <Typography variant=\"h3\" className=\"title\">\r\n            LOGOtip\r\n            <Typography variant=\"caption\">\r\n              админ\r\n            </Typography>\r\n          </Typography>\r\n          <TextField\r\n            error={err.email}\r\n            className=\"auth-input\"\r\n            id=\"email\"\r\n            label=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            inputProps={{ value: form.email }}\r\n            onChange={changeInputHandler}\r\n            required\r\n          />\r\n          <TextField\r\n            error={err.password}\r\n            className=\"auth-input\"\r\n            id=\"password\"\r\n            label=\"password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={changeInputHandler}\r\n            inputProps={{ value: form.password }}\r\n            required\r\n          />\r\n          <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n            <Button\r\n              color=\"primary\"\r\n              startIcon={<Icon>forward</Icon>}\r\n              type=\"submit\"\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              startIcon={<Icon>add_box</Icon>}\r\n              type=\"submit\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </Button>\r\n            <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n              <Icon>help_outline</Icon>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </FormControl>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm);","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets'\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category'\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nconst CustomButton = ({ to, label, activeOnlyWhenExact, icon }) => {\r\n  const math = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <Link to={to} className=\"admin-drawer-link\">\r\n      <ListItem\r\n        component={Button}\r\n        variant=\"contained\"\r\n        classes={classes.listItem}\r\n        selected={math ? math.isExact : false}\r\n      >\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon>{icon}</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            {label}\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          return (\r\n            <CustomButton\r\n              key={item.name}\r\n              to={item.path}\r\n              label={item.name}\r\n              activeOnlyWhenExact\r\n              icon={item.icon} />\r\n          )\r\n        })}\r\n      </List>\r\n      <Link to='/developer' className=\"to-developer admin-drawer-link\">\r\n        <ListItem\r\n          component={Button}\r\n          variant=\"contained\"\r\n          classes={classes.listItem}\r\n          selected\r\n        >\r\n          <ListItemIcon\r\n            classes={classes.listIcon}\r\n          >\r\n            <Icon>code</Icon>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"caption\">\r\n              Разработчик\r\n              </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </Link >\r\n    </Drawer>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { logoutAction } from \"../components/AuthForm/action\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport { settingsList } from '../components/AdminSettingsList/AdminSettingsList'\r\n\r\nconst CustomLink = ({to, onClick}) => {\r\n  return (\r\n    <Link to={to} onClick={onClick} style={{textDecoration:'none'}}>\r\n      <Button>Выйти</Button>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst AdminPanelPage = ({ logout, location }) => {\r\n  console.log(location)\r\n  const pathList = settingsList.map(item => ({ path: item.path, name: item.name }))\r\n  const findName = pathList.find(item => item.path === location.pathname)\r\n\r\n  return (\r\n    <Grid container className=\"admin-panel\">\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, display: 'flex', justifyContent: 'space-between' }} component={Paper}>\r\n          <Typography variant=\"body1\">\r\n            {findName !== undefined ? findName.name : ''}\r\n          </Typography>\r\n          <CustomLink to='/admin' onClick={logout}/>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={2} className=\"admin-drawer\">\r\n        <AdminSettingsList />\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20}} component={Paper}>\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: bindActionCreators(logoutAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoryRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategorySuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoryFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n  const modalOpenHandler = () => {\r\n    setIsOpen(true)\r\n  }\r\n  const modalCloseWrapper = (event) => {\r\n    if(event.currentTarget === event.target) {\r\n      setIsOpen(false)\r\n    }\r\n  }\r\n  const modalCloseHendler = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      modalCloseHendler()\r\n      setCategory({name: ''})\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <Paper className=\"category-creator\">\r\n      <Button variant=\"outlined\" onClick={modalOpenHandler}>Добавить</Button>\r\n      <Modal\r\n        open={isOpen}\r\n        onClose={modalCloseHendler}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"category-creator-body\" onClick={modalCloseWrapper}>\r\n          <FormControl\r\n            className=\"add-category-form\"\r\n            margin=\"dense\"\r\n            required\r\n            size=\"small\"\r\n          >\r\n            <FormHelperText>Добавление категории</FormHelperText>\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Название\"\r\n              variant=\"outlined\"\r\n              name=\"name\"\r\n              size=\"small\"\r\n              onChange={changeInputHandler}\r\n              value={category.name}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={modalCloseHendler}>Закрыть</Button>\r\n          </FormControl>\r\n        </div>\r\n      </Modal>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React, { useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n  Breadcrumbs\r\n} from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './Categories.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\n\r\nconst BreadcrumbsCreator = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin'\r\n  },\r\n  {\r\n    name: 'Категории',\r\n    path: '/admin/categories',\r\n    active: true\r\n  },\r\n]\r\n\r\nconst Categories = ({\r\n  categories,\r\n  getCategoryRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  \r\n  const {enqueueSnackbar} = useSnackbar()\r\n\r\n  const getCategory = useCallback(\r\n    () => {\r\n      getCategoryRequest()\r\n    },\r\n    [categories],\r\n  )\r\n\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {BreadcrumbsCreator.map(item => (\r\n          <NavLink key={item.name} to={item.path} className={item.active ? 'active-link link' : 'link' }>{item.name}</NavLink>\r\n        ))}\r\n      </Breadcrumbs>\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                        color=\"primary\"\r\n                        name={row._id}\r\n                        checked={row.show || false}\r\n                        onChange={(event) => {\r\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                        }}\r\n                        disabled={loading || oneCategoryLoading}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                    className=\"centered-btn\"\r\n                    onClick={() => {deleteCategoryRequest(row._id)}}\r\n                    disabled={loading || oneCategoryLoading}\r\n                  >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <CategoryCreator />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_FORM = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const formCleanerAction = status => {\r\n  return {\r\n    type: CLEAR_FORM,\r\n    payload: status\r\n  }\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\r\nimport { getCategoryRequestAction } from '../Categories/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  formCleaner,\r\n  success,\r\n  getCategoryRequest,\r\n  categoriesLoading,\r\n}) => {\r\n  const {enqueueSnackbar} = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  const getCategories = useCallback(() => {\r\n    getCategoryRequest()\r\n  },[getCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    formCleaner(false)\r\n    return () => {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <div className=\"product-creator\">\r\n      <Paper className=\"form-wrapper\">\r\n        <FormControl\r\n          className=\"add-product-form\"\r\n          margin=\"dense\"\r\n          required\r\n          size=\"small\"\r\n        >\r\n          <FormHelperText>Добавление товара</FormHelperText>\r\n          <Select\r\n            className=\"categories-select\"\r\n            value={form.category}\r\n            onChange={changeInputHandler}\r\n            name=\"category\"\r\n            displayEmpty\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={categoriesLoading}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Выберите категорию\r\n            </MenuItem>\r\n            {categories.map(item => {\r\n              return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n            })}\r\n          </Select>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Название\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.name}\r\n          />\r\n          <TextField\r\n            id=\"amount\"\r\n            label=\"Колличество\"\r\n            variant=\"outlined\"\r\n            name=\"amount\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.amount}\r\n          />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Цена\"\r\n            variant=\"outlined\"\r\n            name=\"price\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.price}\r\n          />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Описание\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.description}\r\n          />\r\n          <TextField\r\n            id=\"img\"\r\n            label=\"Изображение (url)\"\r\n            variant=\"outlined\"\r\n            name=\"img\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.img}\r\n          />\r\n          <Button type=\"submit\" variant=\"outlined\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n        </FormControl>\r\n        <NavLink className=\"btn\" to=\"/admin/products\">Список продуктов</NavLink>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    success: state.productCreatorState.success,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getProductsRequestAction = () => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n} from './action'\r\n\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Input,\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './ProductsList.scss'\r\n\r\n\r\nconst ProductsList = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [value, setValue] = useState('')\r\n\r\n  const getProducts = useCallback(() => {\r\n    getProductsRequest()\r\n  }, [getProductsRequest])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar( typeof message === \"string\" ? message : 'Неизвестная ошибка')\r\n    }\r\n  }, [message])\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell >Описание</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.filter(row => row.name.match(value)).map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell >{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      onClick={() => { deleteProductRequest(row._id) }}\r\n                      disabled={oneProductLoading === row.id}\r\n                    >\r\n                      <Icon>clear</Icon>\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-list\">\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"input-with-icon-search\">Введите имя товара</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-search\"\r\n          onChange={inputFilterHandler}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Icon>search</Icon>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      {loading ? <Preloader /> : <TableCreator />}\r\n      <NavLink\r\n        to=\"/admin/products/add\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      >Добавить</NavLink>\r\n      <NavLink\r\n        to=\"/admin\"\r\n        variant=\"outlined\"\r\n      >Панель управления</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <Typography variant=\"subtitle1\">Пользователей на сайте</Typography>\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Модераторы(4)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Контент-менеджеры(2)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport Categories from '../components/Categories/Categories'\r\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\r\nimport ProductsList from '../components/ProductsList/ProductsList'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsList} />\r\n        <Route path='/admin/products/add' exact component={ProductCreator} />\r\n        <Route path='/admin/categories' exact component={Categories} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token,\r\n  isAuth: (token ? true : false),\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true,\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_FORM: {\r\n      return {\r\n        ...state,\r\n        success: action.status\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: action.payload,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/ProductsList/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/CategoriesList/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if(data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(data.token))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker() {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  \r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  \r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = () => {\r\n  return fetch('/api/products/get-products', {\r\n    method: 'GET',\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker() {\r\n  try {\r\n    const data = yield call(fetchProducts)\r\n    yield put(getProductsSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategorySuccessAction,\r\n getCategoryFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategorySuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategorySuccessAction } from '../Categories/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\n\r\nconst fetchProductsForClient = category => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* ForClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default ForClientWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/ProductsList/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport ForClientWatcher from '../pages/Home.page/saga'\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    ForClientWatcher(),\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={5} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}