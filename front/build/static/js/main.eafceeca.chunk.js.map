{"version":3,"sources":["components/ToggleButton/action.js","components/ShoppingCart/ShoppingCart.js","components/Categories.Client/action.js","components/Preloader/Preloader.js","components/Categories.Client/Categories.Client.js","components/NavBar/adction.js","pages/Home.page/action.js","components/NavBar/NavBar.js","components/ToggleButton/ToggleButton.js","components/RatingButton/RatingButton.js","components/Products.Client/Products.Client.js","components/BottomNavBar/action.js","components/BottomNavBar/BottomNavBar.js","components/Catalog/Catalog.js","components/ToUpButton/ToUpButton.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","components/UserInfo/UserInfo.js","components/AdminPanelHeader/AdminPanelHeader.js","pages/AdminPanel.page.js","components/Categories.Admin/action.js","components/Categories.Admin/Categories.Admin.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/Products.Admin/action.js","components/ProductsFilter/ProductsFilter.js","components/Products.Admin/Products.Admin.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/AdminDashboard/AdminDashboard.js","components/OrderHeader/OrederHeader.js","static/cities.js","components/OrderSteps/action.js","components/OrderContactInfo/OrderContactInfo.js","components/OrderPayWay/OrderPayWay.js","components/OrderConfirmation/OrderConfirmation.js","components/OrderSteps/OrderSteps.js","pages/Order.page/Order.page.js","routes/routes.js","components/AuthForm/reducer.js","components/Products.Admin/reducer.js","components/ProductCreator/reducer.js","components/Categories.Admin/reducer.js","components/CategoryCreator/reducer.js","components/Categories.Client/reducer.js","pages/Home.page/reducer.js","components/NavBar/reducer.js","components/ToggleButton/reducer.js","components/BottomNavBar/reducer.js","components/OrderSteps/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/Products.Admin/saga.js","components/ProductCreator/saga.js","components/Categories.Admin/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","components/NavBar/saga.js","components/ToggleButton/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["addToShoppingCartAction","product","type","payload","delFromShoppingCartAction","id","connect","state","cart","shoppingCartState","dispatch","delFromSoppingCart","bindActionCreators","cartHandleClose","enqueueSnackbar","useSnackbar","className","AppBar","position","color","Toolbar","Hidden","only","Typography","variant","Button","component","NavLink","to","disabled","length","onClick","IconButton","edge","aria-label","Icon","List","map","item","ListItem","key","_id","Card","CardMedia","image","img","title","name","CardContent","gutterBottom","description","CardActions","disableSpacing","size","fontSize","prices","price","reduce","a","b","total","toFixed","setCurrentCategoryAction","category","Preloader","CircularProgress","categories","forClientState","loadingCategories","currentCategory","currentCategoryState","setCurrentCategory","disablePadding","fullWidth","classes","endIcon","setFilterValueAction","value","getProductsForClientRequestAction","limit","page","getProductsForClientSuccessAction","products","productsLength","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","clearMessageAction","setFilterValue","clearMessage","useState","focus","setFocus","cartOpen","setCartOpen","menuOpen","setMenuOpen","setValue","useEffect","handleMenuClose","searchHandler","inputRef","createRef","style","zIndex","mdUp","aria-controls","aria-haspopup","event","Drawer","onClose","open","paper","Divider","Box","Link","href","target","rel","smDown","mdDown","orientation","flexItem","startIcon","FormControl","TextField","label","onChange","onKeyPress","current","blur","inputProps","ref","onFocus","InputProps","endAdornment","InputAdornment","onBlur","Badge","badgeContent","aria-describedby","anchor","closeAfterTransition","BackdropProps","timeout","addToCart","delFromCart","children","selected","setSelected","findProduct","find","handler","RatingButton","ratingValue","setRatinValue","Rating","newValue","loadingProducts","getProductsForClientRequest","Paper","elevation","Grid","container","direction","justify","xs","sm","md","lg","CardActionArea","changeCurrentPageAction","currentPage","paginationState","changeCurrentPage","console","log","xsDown","Pagination","count","Math","ceil","shape","PaperProps","ToUpButton","show","containerRef","Zoom","in","unmountOnExit","Fab","scroll","top","behavior","getCategoriesForClientRequest","React","currentPageIndex","showScrollTo","setShowScrollTo","onScroll","scrollTop","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","accessLevel","loginFailureAction","logoutAction","userId","loading","authState","registrationRequest","loginRequest","setOpen","anchorEl","setAnchorEl","email","password","err","setErr","setForm","changeInputHandler","popperHandler","currentTarget","Popper","placement","transition","TransitionProps","Fade","alignContent","error","required","ButtonGroup","AuthPage","DeveloperPage","settingsList","path","icon","listItem","root","listIcon","divider","CustomButton","activeOnlyWhenExact","math","useRouteMatch","exact","isExact","ListItemIcon","ListItemText","AdminSettingsList","light","levels","level","logout","dialog","setDialog","findLvel","handleCloseDialog","Avatar","alt","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","autoFocus","location","findName","pathname","undefined","margin","padding","AdminRoutes","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","categoriesState","oneCategoryLoading","categoryCreatorState","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","useCallback","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","Checkbox","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","success","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","FormHelperText","Select","displayEmpty","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","filterOptions","createFilterOptions","matchFrom","stringify","option","Autocomplete","options","sort","getOptionLabel","freeSolo","blurOnSelect","clearOnEscape","renderInput","params","renderOption","onInputChange","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","getProducts","checkboxChangeHendler","TableCreator","addCategoryRequestAction","addCategoryFailureAction","addCategoryRequest","setCategory","addCatogory","autoComplete","OrderHeader","handlePopoverClose","Popover","disableRestoreFocus","aria-owns","onMouseEnter","onMouseLeave","cities","city","area","setStepAction","step","setStep","helperText","setSuccess","setFalure","steps","stepsState","switchRender","Stepper","activeStep","index","labelProps","Step","StepLabel","OrderPage","Container","maxWidth","mapStateToProps","isAuth","Routes","AdminPanelPage","HomePage","AdminDashboard","ProductsForAdmin","CategoriesForAdmin","sessionStorage","getItem","initialState","jwt","verify","e","checkToken","localStorage","JSON","parse","completed","rootReducer","combineReducers","action","filterState","filter","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","forClientWatcher","fetchProductsForClient","fetchCategoriesForClient","getFilteredProductsWorker","filterWatcher","fetchFilteredProducts","filterValue","shoppingCartWorker","shoppingCartWatcher","putToLocalStorage","select","takeEvery","rootSaga","all","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","theme","createMuiTheme","palette","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.eafceeca.chunk.js","sourcesContent":["export const ADD_TO_SHOPPING_CART = 'ADD_TO_SHOPPING_CART'\nexport const DEL_FROM_SHOPPING_CART = 'DEL_FROM_SHOPPING_CART'\n\n\nexport const addToShoppingCartAction = product => {\n  return {\n    type: ADD_TO_SHOPPING_CART,\n    payload: product\n  }\n}\n\nexport const delFromShoppingCartAction = id => {\n  return {\n    type: DEL_FROM_SHOPPING_CART,\n    payload: id\n  }\n}","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport './ShoppingCart.scss'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CardActionArea,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Icon,\r\n  ListItem,\r\n  Typography,\r\n  Hidden,\r\n  Button,\r\n  Link,\r\n  List,\r\n  Box,\r\n  AppBar,\r\n  Toolbar\r\n} from '@material-ui/core'\r\nimport { bindActionCreators } from 'redux'\r\nimport { delFromShoppingCartAction } from '../ToggleButton/action'\r\nimport { useSnackbar } from 'notistack'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    label: \"Название\",\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: \"Цена\",\r\n  },\r\n  {\r\n    id: 'delete',\r\n    label: \"Удалить\",\r\n  },\r\n]\r\n\r\nconst ShoppingCart = ({ cart, cartHandleClose, delFromSoppingCart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const total = () => {\r\n    const prices = cart.map(item => item.price)\r\n    if (prices.length > 0) {\r\n      return prices.reduce((a, b) => a + b)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const delFromCartHandler = (id) => {\r\n    delFromSoppingCart(id)\r\n    enqueueSnackbar('Удалено из корзины')\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bar nav-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bar\">\r\n          <Hidden only={['xs', 'md']}>\r\n            <Typography variant=\"h6\">\r\n              Корзина\r\n          </Typography>\r\n          </Hidden>\r\n          <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          component={NavLink}\r\n          to='/order'\r\n          disabled={!cart.length > 0}>\r\n            Оформить заказ\r\n          </Button>\r\n          <Hidden only={['xs', 'md']}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={cartHandleClose}\r\n            >\r\n              Продолжить покупки\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden only={['sm', 'lg', 'xl']}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"close-modal\"\r\n              onClick={cartHandleClose}\r\n              className=\"btn-close-cart\"\r\n              variant=\"outlined\"\r\n            >\r\n              <Icon>close</Icon>\r\n            </IconButton>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List className=\"cart-wrapper\">\r\n        {cart && cart.length > 0 ? cart.map(item => (\r\n          <ListItem key={item._id} className=\"cart-item\">\r\n            <Card\r\n              className=\"card\"\r\n              variant=\"outlined\"\r\n            >\r\n              <CardMedia\r\n                className=\"card-img\"\r\n                image={item.img}\r\n                title={item.name}\r\n              />\r\n              <CardContent\r\n                className=\"card-description\"\r\n              >\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {item.description}\r\n                  {item.description}\r\n                  {item.description}\r\n                </Typography>\r\n                <div className=\"count\">\r\n\r\n                </div>\r\n              </CardContent>\r\n              <CardActions\r\n                disableSpacing={true}\r\n                className=\"cart-card-actions\"\r\n              >\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => { delFromCartHandler(item._id) }}\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          </ListItem>\r\n        )) : <div className=\"cart-empry-text\"><Typography variant=\"body1\" fontSize={30} color=\"textSecondary\">Корзина пуста</Typography></div>}\r\n      </List>\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bottom-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bottom-bar\">\r\n          <Typography variant=\"button\" color=\"primary\" >Всего: {total().toFixed(2)}&nbsp;$</Typography>\r\n          <Typography variant=\"h6\">LOGOtip</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    delFromSoppingCart: bindActionCreators(delFromShoppingCartAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"preloader-wrapper\">\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './Categories.Client.scss'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesForClient = ({ categories, setCurrentCategory, loadingCategories, currentCategory }) => {\r\n  const listCreator = (arr) => {\r\n    return arr.map((item) => (\r\n      <ListItem key={item.name}>\r\n        <Button\r\n          fullWidth\r\n          size=\"small\"\r\n          classes={{\r\n            fullWidth: (currentCategory === item.name ? 'full-width-btn active' : 'full-width-btn')\r\n          }}\r\n          variant='text'\r\n          onClick={() => setCurrentCategory(item.name)}\r\n          color={currentCategory === item.name ? 'secondary' : 'default'}\r\n          endIcon={currentCategory === item.name ? <Icon>beenhere</Icon> : null}\r\n        >\r\n          <Typography variant=\"button\">{item.name}</Typography>\r\n        </Button>\r\n      </ListItem>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <List className=\"categories-list\" disablePadding>\r\n      {loadingCategories ? <Preloader /> : listCreator(categories)}\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForClient)","export const SET_FILTER_VALUE = 'SET_FILTER_VALUE'\n\nexport const setFilterValueAction = value => {\n  return {\n    type: SET_FILTER_VALUE,\n    payload: value\n  }\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = (category, limit, page) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: {\r\n      category,\r\n      limit,\r\n      page\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = (products, productsLength) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: {\r\n      products,\r\n      productsLength\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearMessageAction = () => {\r\n  return {\r\n    type: CLEAR_MESSAGE\r\n  }\r\n}\r\n","import React, { useState, useEffect, createRef, forwardRef } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  Drawer,\r\n  FormControl,\r\n  Divider,\r\n  Link,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setFilterValueAction } from './adction';\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearMessageAction } from '../../pages/Home.page/action';\r\n\r\n\r\nconst NavBar = ({ setFilterValue, message, clearMessage, cart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [focus, setFocus] = useState(false)\r\n  const [cartOpen, setCartOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n  const cartHandleClose = () => {\r\n    setCartOpen(false)\r\n  }\r\n  const CartHandleOpen = () => {\r\n    setCartOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  const handleMenuOpen = event => {\r\n    setMenuOpen(true)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const searchHandler = () => {\r\n    setFilterValue(value)\r\n    setFocus(false)\r\n  }\r\n\r\n  const clearHandler = () => {\r\n    setValue('')\r\n  }\r\n\r\n  const keyHandler = event => {\r\n    if (event.key === 'Enter') {\r\n      searchHandler()\r\n      inputRef.current.blur()\r\n    }\r\n  }\r\n\r\n\r\n  const inputRef = createRef()\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" style={{ zIndex: 1201 }} className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden mdUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            onClose={handleMenuClose}\r\n            open={menuOpen}\r\n            classes={{\r\n              paper: 'mobild-drawer-papper'\r\n            }}\r\n          >\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar nav-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Typography variant=\"h3\" className=\"logo-mobile\">LOGOtip</Typography>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"close-modal\"\r\n                  onClick={handleMenuClose}\r\n                  className=\"btn-close-cart\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <div className=\"categories-list-wrapper \">\r\n              <Typography variant=\"caption\" className=\"menu-caption\">Категории товаров</Typography>\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n              <CategoriesForClient />\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n            </div>\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Box\r\n                  aria-label=\"social-links\"\r\n                  className=\"social-btn-group\"\r\n                >\r\n                  <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                </Box>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 95 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n          </Box>\r\n        </Hidden>\r\n        <FormControl\r\n          className=\"search-wrapper\"\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onChange={inputFilterHandler}\r\n            value={value}\r\n            onKeyPress={keyHandler}\r\n            inputProps={{\r\n              ref: inputRef,\r\n              onFocus: () => setFocus(true)\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {focus\r\n                    ? <IconButton\r\n                      color=\"primary\"\r\n                      onClick={searchHandler}\r\n                      onBlur={() => setFocus(false)}\r\n                    ><Icon>search</Icon></IconButton>\r\n                    : (value && <IconButton\r\n                      color=\"default\"\r\n                      onClick={clearHandler}\r\n                    > <Icon>clear</Icon></IconButton>)\r\n                  }\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <IconButton\r\n          aria-label=\"cart\"\r\n          onClick={CartHandleOpen}\r\n        >\r\n          <Badge badgeContent={cart.length} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper-mobile'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.forClientState.message,\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch),\r\n    clearMessage: bindActionCreators(clearMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Box, Fab, IconButton } from '@material-ui/core';\n\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addToShoppingCartAction, delFromShoppingCartAction } from './action'\n\nconst PriceToggleButton = ({ children, product, addToCart, delFromCart, cart }) => {\n  const [selected, setSelected] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    const findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      setSelected(true)\n    } else {\n      setSelected(false)\n    }\n  }, [cart])\n\n  const handler = () => {\n    let findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      enqueueSnackbar('Удалено из корзины')\n      delFromCart(product._id)\n      setSelected(false)\n    } else {\n      enqueueSnackbar('Добавлено в корзину')\n      addToCart(product)\n      setSelected(true)\n    }\n  }\n\n  return selected\n    ? <IconButton onClick={handler} color=\"inherit\">\n        <Icon>check</Icon>\n      </IconButton>\n    : <IconButton onClick={handler} color=\"primary\">\n        <Icon>shopping_cart</Icon>\n      </IconButton>\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: bindActionCreators(addToShoppingCartAction, dispatch),\n    delFromCart: bindActionCreators(delFromShoppingCartAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceToggleButton)","import React, { useState } from 'react'\nimport { Rating } from '@material-ui/lab'\nimport { Box, Typography} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\nimport './RatingButton.scss'\n\nexport const RatingButton = ({id}) => {\n  const [ratingValue, setRatinValue] = useState(0)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const ratingHandler = (event, newValue) => {\n    setRatinValue(+newValue)\n    if(+newValue === 0) {\n      enqueueSnackbar('Оценка удалена')\n    } else if (ratingValue !== +newValue && ratingValue !== 0) {\n      enqueueSnackbar('Оценка изменена')\n    } else {\n      enqueueSnackbar('Спасибо за оценку')\n    }\n  }\n\n  return (\n    <Box component=\"div\" className=\"ratingBtn\">\n      <Rating\n        size=\"small\"\n        name={id}\n        value={ratingValue}\n        onChange={ratingHandler}\n      />\n      <Typography component=\"legend\" variant=\"caption\">&nbsp;Отзывов: {ratingValue}</Typography>\n    </Box>\n  )\n}","import React, { useRef, useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\n\r\nimport './Products.Client.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action'\r\nimport { bindActionCreators } from 'redux'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport PriceToggleButton from '../ToggleButton/ToggleButton'\r\nimport { RatingButton } from '../RatingButton/RatingButton'\r\n\r\n\r\n\r\nconst productCreator = (arr) => {\r\n  return arr.map(item => {\r\n    return (\r\n      <Grid key={item._id} item xs={!2} sm={6} md={4} lg={3}>\r\n        <Card\r\n          className=\"card\"\r\n          variant=\"outlined\"\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className=\"card-img\"\r\n              image={item.img}\r\n              title={item.name}\r\n            />\r\n\r\n            <CardContent className=\"card-content\">\r\n              <Typography className=\"card-content-text\" gutterBottom variant=\"subtitle1\">\r\n                {item.name}\r\n              </Typography>\r\n              <RatingButton\r\n                id={item._id}\r\n              />\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions\r\n            disableSpacing={true}\r\n          >\r\n\r\n            <Typography variant=\"h4\" color=\"primary\">{item.price} &#8372;</Typography>\r\n\r\n            <PriceToggleButton\r\n              product={item}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    )\r\n  })\r\n}\r\n\r\n\r\nconst ProductsForClient = ({ products, loadingProducts }) => {\r\n  return (\r\n    <Paper className=\"cards-list-wrapper\" elevation={1}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        className=\"cards-list\">\r\n        {loadingProducts ? <Preloader /> : productCreator(products)}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForClient)","export const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE'\n\n\nexport const changeCurrentPageAction = page => {\n  return {\n    type: CHANGE_CURRENT_PAGE,\n    payload: page\n  }\n}","import React, { useState, useEffect } from 'react'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Box,\n  Icon,\n  Hidden,\n  Link\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab'\nimport { connect } from 'react-redux'\n\nimport './BottomNavBar.scss'\nimport { bindActionCreators } from 'redux';\nimport { changeCurrentPageAction } from './action';\n\nconst BottomNavBar = ({ productsLength, changeCurrentPage, currentPage }) => {\n  console.log(currentPage)\n  const paginationHandler = (event, newValue) => {\n    changeCurrentPage(newValue)\n  }\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className=\"app-bottom-bar\"\n      color=\"inherit\"\n      elevation={1}\n    >\n      <Toolbar\n        className=\"bottom-bar\"\n      >\n        <Hidden xsDown>\n          <Box\n            aria-label=\"social-links\"\n            className=\"social-btn-group\"\n          >\n            <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\n            </Link>\n          </Box>\n        </Hidden>\n        {productsLength < 18\n          ? null\n          : <Pagination\n            size=\"small\"\n            className=\"bottom-pagination\"\n            count={Math.ceil(productsLength / 18)}\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={paginationHandler}\n          />\n        }\n        <Hidden xsDown>\n          <Typography variant=\"h6\">LOGOtip</Typography>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    productsLength: state.forClientState.productsLength,\n    currentPage: state.paginationState.currentPage\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomNavBar)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n  Drawer,\r\n  Divider,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client'\r\nimport ProductsForClient from '../Products.Client/Products.Client'\r\n\r\nimport './Catalog.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\r\nimport BottomNavBar from '../BottomNavBar/BottomNavBar'\r\n\r\n\r\nconst Catalog = ({ productsLength, setCurrentCategory }) => {\r\n\r\n  const popularHandler = () => {\r\n    setCurrentCategory('Популярно')\r\n  }\r\n\r\n  return (\r\n    <Box \r\n      className=\"catalog-wrapper\"\r\n    >\r\n      <Grid\r\n        container\r\n      >\r\n        <Hidden smDown>\r\n          <Grid item md={3} lg={2}>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className=\"categories-container\"\r\n              open\r\n              PaperProps={{\r\n                elevation: 1\r\n              }}\r\n            >\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Категории товаров\r\n              </Typography>\r\n              <Divider variant=\"middle\" />\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={popularHandler}\r\n                  size=\"small\"\r\n                >\r\n                  Популярное\r\n                </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                >\r\n                  Лучшие цены\r\n                </Button>\r\n              </Box>\r\n              <Divider variant=\"middle\" />\r\n              <CategoriesForClient />\r\n            </Drawer>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={9}\r\n          xs={12}\r\n        >\r\n          <ProductsForClient />\r\n          <BottomNavBar />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productsLength: state.forClientState.productsLength,\r\n    message: state.forClientState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, { useEffect, useState } from 'react'\nimport { Fab, Icon, Zoom } from '@material-ui/core'\nimport './ToUpButton.scss'\n\n\nexport const ToUpButton = ({ show, containerRef }) => {\n\n  const handleScrollToTop = () => {\n    containerRef.current.scroll({ top: 0, behavior: 'smooth' })\n  }\n\n  return (\n    <div className=\"to-up-button\">\n      <Zoom\n        timeout={350}\n        in={show}\n        unmountOnExit\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={handleScrollToTop}\n        >\n          <Icon>expand_less</Icon>\n        </Fab>\n      </Zoom>\n    </div>\n  )\n}","import React, {useEffect, useState} from 'react'\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\nimport { ToUpButton } from '../../components/ToUpButton/ToUpButton'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCategoriesForClientRequestAction, getProductsForClientRequestAction } from './action'\r\nimport { changeCurrentPageAction } from '../../components/BottomNavBar/action'\r\n\r\nconst limit = 16\r\n\r\nconst HomePage = ({ getProductsForClientRequest, getCategoriesForClientRequest, currentCategory, currentPage, changeCurrentPage }) => {\r\n  const containerRef = React.createRef()\r\n  const currentPageIndex = currentPage - 1\r\n  const [showScrollTo, setShowScrollTo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== '') {\r\n      getProductsForClientRequest(currentCategory, limit, currentPageIndex)\r\n    }\r\n  }, [currentCategory, currentPage])\r\n\r\n  useEffect(() => {\r\n    changeCurrentPage(1)\r\n  }, [currentCategory])\r\n\r\n  const handleScroll = () => {\r\n    if (containerRef.current.scrollTop > 400) {\r\n      setShowScrollTo(true)\r\n    } else {\r\n      setShowScrollTo(false)\r\n    }\r\n  }\r\n  return  (\r\n    <div ref={containerRef} className=\"scroll-container\" onScroll={handleScroll}>\r\n      <NavBar />\r\n      <Catalog />\r\n      <ToUpButton show={showScrollTo} containerRef={containerRef} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentCategory: state.currentCategoryState.currentCategory,\r\n    currentPage: state.paginationState.currentPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch),\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch),\r\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token, accessLevel) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: {token, accessLevel}\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = userId => {\r\n  return {\r\n    type: LOGOUT,\r\n    payload: userId\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} onClick={popperHandler} placement=\"bottom-start\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center' alignContent='center' className=\"container\">\r\n        <Grid item xs={12} sm={8} md={6} lg={4} component={Paper}>\r\n          <FormControl className=\"auth-form-wrapper\">\r\n            <Typography variant=\"h3\" className=\"title\">\r\n              LOGOtip\r\n            <Typography variant=\"caption\">\r\n                админ\r\n            </Typography>\r\n            </Typography>\r\n            <TextField\r\n              error={err.email}\r\n              className=\"auth-input\"\r\n              id=\"email\"\r\n              label=\"email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              inputProps={{ value: form.email }}\r\n              onChange={changeInputHandler}\r\n              required\r\n            />\r\n            <TextField\r\n              error={err.password}\r\n              className=\"auth-input\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={changeInputHandler}\r\n              inputProps={{ value: form.password }}\r\n              required\r\n            />\r\n            <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>forward</Icon>}\r\n                type=\"submit\"\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Войти</Typography>\r\n            </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>add_box</Icon>}\r\n                type=\"submit\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Регистрация</Typography>\r\n            </Button>\r\n              <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n                <Icon>help_outline</Icon>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm)","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets'\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category'\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nconst CustomButton = ({ to, label, activeOnlyWhenExact, icon }) => {\r\n  const math = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <Link to={to} className=\"admin-drawer-link\">\r\n      <ListItem\r\n        component={Button}\r\n        variant=\"contained\"\r\n        classes={classes.listItem}\r\n        selected={math ? math.isExact : false}\r\n      >\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon>{icon}</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            {label}\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          return (\r\n            <CustomButton\r\n              key={item.name}\r\n              to={item.path}\r\n              label={item.name}\r\n              activeOnlyWhenExact\r\n              icon={item.icon} />\r\n          )\r\n        })}\r\n      </List>\r\n      <Link to='/developer' className=\"to-developer admin-drawer-link\">\r\n        <ListItem\r\n          component={Button}\r\n          variant=\"contained\"\r\n          classes={classes.listItem}\r\n          selected\r\n        >\r\n          <ListItemIcon\r\n            classes={classes.listIcon}\r\n          >\r\n            <Icon>code</Icon>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"caption\">\r\n              Разработчик\r\n              </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </Link >\r\n    </Drawer>\r\n  )\r\n}","import React, { useState } from 'react'\nimport {\n  Typography,\n  Menu,\n  Avatar,\n  MenuItem,\n  Dialog,\n  Button,\n  DialogActions,\n  DialogTitle,\n  DialogContent\n} from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { logoutAction } from '../AuthForm/action'\nimport { connect } from 'react-redux'\n\nimport './UserInfo.scss'\n\nconst levels = [\n  {\n    level: 0,\n    icon: 'CM',\n    label: 'Контент-менеджер'\n  },\n  {\n    level: 1,\n    icon: 'M',\n    label: 'Модератор'\n  },\n  {\n    level: 1,\n    icon: 'S',\n    label: 'Супервизор'\n  },\n  {\n    level: 100,\n    icon: 'A',\n    label: 'Администратор'\n  },\n\n]\n\nconst UserInfo = ({ logout, accessLevel, userId }) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [dialog, setDialog] = useState(false)\n\n  \n  const findLvel = levels.find(item => item.level === accessLevel || 0)\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const handleOpenDialog = () => {\n    setDialog(true)\n  }\n\n  const handleCloseDialog = () => {\n    setDialog(false)\n  }\n\n  const logoutHandler = () => {\n    logout()\n  }\n\n  return (\n    <div>\n      <Avatar\n        alt=\"user\"\n        onClick={handleOpenMenu}\n        className=\"avatar-icon\"\n      >\n        {findLvel.icon }\n      </Avatar>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        elevation={1}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <MenuItem disabled>\n          <Typography variant=\"subtitle1\" color=\"primary\">\n            Уровень: {findLvel.label}\n          </Typography>\n        </MenuItem>\n        <MenuItem onClick={handleOpenDialog}>Инфо</MenuItem>\n        <MenuItem to='/admin' onClick={logoutHandler} component={NavLink}>Выйти</MenuItem>\n      </Menu>\n      <Dialog\n        open={dialog}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Уровни доступа</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Контент-менеджер &nbsp;\n              </Typography>\n              - предлагает измeнения/добавления товара или категории.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Модератор &nbsp;\n              </Typography>\n              - подтверждает измeнения/добавленя товара, категории, отзыва на сайте.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Супервизор &nbsp;\n              </Typography>\n              - доступ к статистике пользователей админ панели, статистика продажи товаров.\n            </Typography>\n          <Typography variant=\"subtitle2\">\n            <Typography variant=\"body2\" color=\"primary\">\n              Администратор &nbsp;\n              </Typography>\n              - всё выше перечисленное, подтверждает создание нового пользователя, предоставление/измeнения прав доступа.\n            </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Понятно\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    accessLevel: state.authState.token.accessLevel,\n    userId: state.authState.token.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: bindActionCreators(logoutAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo)","import React from 'react'\nimport UserInfo from '../UserInfo/UserInfo';\nimport { Typography, Paper, Box, AppBar, Toolbar, Icon } from '@material-ui/core'\nimport { settingsList } from '../AdminSettingsList/AdminSettingsList'\nimport { connect } from 'react-redux';\n\nimport './AdminPanelHeader.scss'\n\nconst AdminPanelHeader = ({ location }) => {\n  const pathList = settingsList.map(item => ({ path: item.path, name: item.name }))\n  const findName = pathList.find(item => item.path === location.pathname)\n  return (\n    <AppBar\n      position=\"sticky\"\n      color=\"inherit\"\n    >\n      <Toolbar\n        className=\"admin-panel-header\"\n      >\n        <Typography variant=\"body1\">\n          {findName !== undefined ? findName.name : ''}\n        </Typography>\n        <UserInfo />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default connect()(AdminPanelHeader)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport AdminPanelHeader from \"../components/AdminPanelHeader/AdminPanelHeader\";\r\n\r\nconst AdminPanelPage = ({ location }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      className=\"admin-panel\"\r\n    >\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <AdminPanelHeader location={location} />\r\n      </Grid>\r\n      <Grid item lg={2} className=\"admin-drawer\">\r\n        <AdminSettingsList />\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20 }} >\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.authState.token.userId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoryRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategorySuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoryFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n} from '@material-ui/core'\r\n\r\nimport './Categories.Admin.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoriesForAdmin = ({\r\n  categories,\r\n  getCategoryRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  \r\n  const {enqueueSnackbar} = useSnackbar()\r\n\r\n  const getCategory = useCallback(\r\n    () => {\r\n      getCategoryRequest()\r\n    },\r\n    [categories],\r\n  )\r\n\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                        color=\"primary\"\r\n                        name={row._id}\r\n                        checked={row.show || false}\r\n                        onChange={(event) => {\r\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                        }}\r\n                        disabled={loading || oneCategoryLoading}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                    className=\"centered-btn\"\r\n                    onClick={() => {deleteCategoryRequest(row._id)}}\r\n                    disabled={loading || oneCategoryLoading}\r\n                  >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForAdmin)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_FORM = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const formCleanerAction = status => {\r\n  return {\r\n    type: CLEAR_FORM,\r\n    payload: status\r\n  }\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\r\nimport { getCategoryRequestAction } from '../Categories.Admin/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  formCleaner,\r\n  success,\r\n  getCategoryRequest,\r\n  categoriesLoading,\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  const getCategories = useCallback(() => {\r\n    getCategoryRequest()\r\n  }, [getCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    formCleaner(false)\r\n    return () => {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <Paper className=\"form-wrapper\">\r\n      <FormControl\r\n        className=\"add-product-form\"\r\n        margin=\"dense\"\r\n        required\r\n        size=\"small\"\r\n        fullWidth\r\n      >\r\n        <FormHelperText>Добавление товара</FormHelperText>\r\n        <Select\r\n          className=\"categories-select\"\r\n          value={form.category}\r\n          onChange={changeInputHandler}\r\n          name=\"category\"\r\n          displayEmpty\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          disabled={categoriesLoading}\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Выберите категорию\r\n            </MenuItem>\r\n          {categories.map(item => {\r\n            return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n          })}\r\n        </Select>\r\n        <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Название\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.name}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"amount\"\r\n          label=\"Колличество\"\r\n          variant=\"outlined\"\r\n          name=\"amount\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.amount}\r\n        />\r\n        <TextField\r\n          id=\"price\"\r\n          label=\"Цена\"\r\n          variant=\"outlined\"\r\n          name=\"price\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.price}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          id=\"description\"\r\n          label=\"Описание\"\r\n          variant=\"outlined\"\r\n          name=\"description\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.description}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          id=\"img\"\r\n          label=\"Изображение (url)\"\r\n          variant=\"outlined\"\r\n          name=\"img\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={form.img}\r\n          fullWidth\r\n        />\r\n        <Button className=\"add-product-btn\" variant=\"contained\" color=\"primary\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n      </FormControl>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    success: state.productCreatorState.success,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getProductsRequestAction = () => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React, { useState } from 'react'\nimport {\n  TextField,\n  Typography,\n  Button,\n  Grid,\n  MenuItem\n} from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\nimport { connect } from 'react-redux'\n\nimport './ProductsFilter.scss'\nimport { bindActionCreators } from 'redux'\nimport { setFilterValueAction } from '../NavBar/adction'\n\nconst ProductsFilter = ({ products, setFilterValue }) => {\n  const autocompleteRef = React.createRef()\n  const [value, setValue] = useState('')\n  const filterOptions = createFilterOptions({\n    matchFrom: 'start',\n    stringify: option => option.name,\n  })\n\n  const changeHandler = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const filterHandler = (event, newValue) => {\n    if(newValue === null) {\n      setFilterValue(' ')\n    } else {\n      setFilterValue(newValue.name || newValue)\n    }\n  }\n\n  return (\n    <div\n      className=\"product-list-filter\"\n    >\n      <Autocomplete\n        fullWidth\n        size='small'\n        id=\"products\"\n        options={products.sort(item => item.name)}\n        getOptionLabel={(option) => option.name || option}\n        onChange={filterHandler}\n        freeSolo\n        blurOnSelect\n        clearOnEscape\n        renderInput={(params) =>\n          <TextField {...params}\n            label=\"Введите имя товара\"\n            variant=\"outlined\"\n          />\n        }\n        renderOption={(item) => (\n          <Typography variant=\"body1\">{item.name}&nbsp;<Typography variant=\"caption\">{item.category}</Typography></Typography>\n          \n        )}\n        onInputChange={changeHandler}\n        filterOptions={filterOptions}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.productsState.products\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsFilter)","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n} from './action'\r\n\r\nimport {\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport ProductFilter from '../ProductsFilter/ProductsFilter'\r\n\r\nimport './Products.Admin.scss'\r\n\r\nconst ProductsForAdmin = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const getProducts = useCallback(() => {\r\n    getProductsRequest()\r\n  }, [getProductsRequest])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(typeof message === \"string\" ? message : 'Неизвестная ошибка')\r\n    }\r\n  }, [message])\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell >Описание</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell >{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      onClick={() => { deleteProductRequest(row._id) }}\r\n                      disabled={oneProductLoading === row.id}\r\n                    >\r\n                      <Icon>clear</Icon>\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"products-list\">\r\n      <ProductFilter />\r\n      {loading ? <Preloader /> : <TableCreator />}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForAdmin)","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearMessageAction } from '../../pages/Home.page/action'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n  clearMessage\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setCategory({ name: '' })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"category-creator-wrapper\">\r\n      <Paper className=\"category-creator-form\">\r\n        <FormHelperText>Добавление категории</FormHelperText>\r\n        <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Название\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          size=\"small\"\r\n          onChange={changeInputHandler}\r\n          value={category.name}\r\n          autoComplete=\"off\"\r\n        />\r\n        <Button className=\"add-category-btn\" variant=\"contained\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch),\r\n    clearMessage: bindActionCreators(clearMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport ProductCreator from '../ProductCreator/ProductCreator'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <CategoryCreator />\r\n      </Grid>\r\n      <Grid item lg={12}>\r\n        <ProductCreator />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(AdminDashboard)","import React, { useState } from 'react'\nimport { Typography, Icon, Popover, Button } from '@material-ui/core'\n\nimport './OrderHeader.scss'\n\nconst OrderHeader = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl)\n  return (\n    <header className=\"oreder-header\">\n      <Popover\n        id=\"help-over-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography variant=\"caption\">График работы</Typography>\n        <Typography variant=\"h5\">ПН - ПТ: 09:00 - 18:00</Typography>\n        <Typography variant=\"body1\">Суббота: 09:00 - 15:00</Typography>\n        <Typography variant=\"body1\">Воскресенье: 09:00 - 14:00</Typography>\n        <Typography variant=\"body2\" color=\"secondary\">Внимание! Важная информация</Typography>\n      </Popover>\n      <Typography variant=\"h3\">LOGOtip</Typography>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        aria-owns={open ? 'help-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        style={{zIndex:1400}}\n        onMouseEnter={handlePopoverOpen}\n        onClick={handlePopoverClose}\n        onMouseLeave={handlePopoverClose}\n        endIcon={<Icon>help</Icon>}\n      >\n        +380 73 069 XX XX\n      </Button>\n    </header>\n  )\n}\n\nexport default OrderHeader","export const cities = [\n  {city: 'Александрия', area: 'Кировоградская область' },\n  {city: 'Алчевск', area: 'Луганская область'},\n  {city: 'Бахмут', area: 'Донецкая область'},\n  {city: 'Белая Церковь', area: 'Киевская область'},\n  {city: 'Бердичев', area: 'Житомирская область'},\n  {city: 'Бердянск', area: 'Запорожская область'},\n  {city: 'Борисполь', area: 'Киевская область'},\n  {city: 'Бровары', area: 'Киевская область'},\n  {city: 'Винница', area: 'Винницкая область'},\n  {city: 'Горишние Плавни', area: 'Полтавская область'},\n  {city: 'Днепр', area: 'Днепропетровская область'},\n  {city: 'Горловка', area: 'Донецкая область'},\n  {city: 'Довжанск', area: 'Луганская область'},\n  {city: 'Донецк', area: 'Донецкая область'},\n  {city: 'Дубно', area: 'Ровенская область'},\n  {city: 'Енакиево', area: 'Донецкая область'},\n  {city: 'Житомир', area: 'Житомирская область'},\n  {city: 'Жмеринка', area: 'Винницкая область'},\n  {city: 'Жовква', area: 'Львовская область'},\n  {city: 'Запорожье', area: 'Запорожская область'},\n  {city: 'Ивано-Франковск', area: 'Ивано-Франковская область'},\n  {city: 'Измаил', area: 'Одесская область'},\n  {city: 'Ирпень', area: 'Киевская область'},\n  {city: 'Кадиевка', area: 'Луганская область'},\n  {city: 'Каменец-Подольский', area: 'Хмельницкая область'},\n  {city: 'Каменское', area: 'Днепропетровская область'},\n  {city: 'Каховка', area: 'Херсонская область'},\n  {city: 'Киев', area: 'Киевская область'},\n  {city: 'Конотоп', area: 'Сумская область'},\n  {city: 'Константиновка', area: 'Донецкая область'},\n  {city: 'Краматорск', area: 'Донецкая область'},\n  {city: 'Кременчуг', area: 'Полтавская область'},\n  {city: 'Кривой Рог', area: 'Днепропетровская область'},\n  {city: 'Кропивницкий', area: 'Кировоградская область'},\n  {city: 'Лисичанск', area: 'Луганская область'},\n  {city: 'Лозовая', area: 'Харьковская область'},\n  {city: 'Луганск', area: 'Луганская область'},\n  {city: 'Луцк', area: 'Волынская область'},\n  {city: 'Львов', area: 'Львовская область'},\n  {city: 'Макеевка', area: 'Донецкая область'},\n  {city: 'Мариуполь', area: 'Донецкая область'},\n  {city: 'Мелитополь', area: 'Запорожская область'},\n  {city: 'Мукачево', area: 'Закарпатская область'},\n  {city: 'Нежин', area: 'Черниговская область'},\n  {city: 'Николаев', area: 'Николаевская область'},\n  {city: 'Никополь', area: 'Днепропетровская область'},\n  {city: 'Одесса', area: 'Одесская область'},\n  {city: 'Павлоград', area: 'Днепропетровская область'},\n  {city: 'Полтава', area: 'Полтавская область'},\n  {city: 'Ровно', area: 'Ровенская область'},\n  {city: 'Северодонецк', area: 'Луганская область'},\n  {city: 'Славянск', area: 'Донецкая область'},\n  {city: 'Смела', area: 'Черкасская область'},\n  {city: 'Сумы', area: 'Сумская область'},\n  {city: 'Тернополь', area: 'Тернопольская область'},\n  {city: 'Торецк', area: 'Донецкая область'},\n  {city: 'Ужгород', area: 'Закарпатская область'},\n  {city: 'Умань', area: 'Черкасская область'},\n  {city: 'Харцызск', area: 'Донецкая область'},\n  {city: 'Харьков', area: 'Харьковская область'},\n  {city: 'Херсон', area: 'Херсонская область'},\n  {city: 'Хмельницкий', area: 'Хмельницкая область'},\n  {city: 'Хрустальный', area: 'Луганская область'},\n  {city: 'Черкассы', area: 'Черкасская область'},\n  {city: 'Чернигов', area: 'Черниговская область'},\n  {city: 'Черновцы', area: 'Черниговская область'},\n  {city: 'Черноморск', area: 'Одесская область'},\n  {city: 'Чистяково', area: 'Донецкая область'},\n  {city: 'Шостка', area: 'Сумская область'}\n]\n","export const SET_STEP = 'SET_STEP'\n\nexport const setStepAction = step => {\n  return {\n    type: SET_STEP,\n    payload: step\n  }\n}","import React from 'react'\nimport { TextField, Button, Typography } from '@material-ui/core'\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Autocomplete } from '@material-ui/lab'\nimport { cities } from '../../static/cities'\n\nimport './OrderContactInfo.scss'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setStepAction } from '../OrderSteps/action';\n\nconst OrderContactInfo = ({ setStep }) => {\n\n  const filterOptions = createFilterOptions({\n    matchFrom: 'start',\n    stringify: option => option.city,\n  });\n\n  return (\n    <form className=\"contact-form\" autoComplete=\"off\">\n      <TextField fullWidth id=\"phone\" name=\"phone\" label=\"Номер телефона\" variant=\"outlined\" required />\n      <TextField fullWidth id=\"name\" name=\"name\" label=\"Имя и фамилия\" variant=\"outlined\" required />\n      <Autocomplete fullWidth\n        id=\"city\"\n        options={cities.sort(item => item.city)}\n        getOptionLabel={(option) => option.city}\n        renderInput={(params) => <TextField {...params} label=\"Выберите город\" variant=\"outlined\" required />}\n        renderOption={(item) => (\n          <div>\n            <Typography variant=\"body1\">{item.city}</Typography>\n            <Typography variant=\"caption\">{item.area}</Typography>\n          </div>\n        )}\n        filterOptions={filterOptions}\n      />\n      <TextField\n        fullWidth\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        helperText=\"Если вы хотите следить за статусом выполнения заказа\"\n      />\n      <Typography variant=\"caption\">* обязательное поле</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setStep(1)}>Продолжить</Button>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderContactInfo)","import React from 'react'\nimport { TextField, Button, Typography } from '@material-ui/core'\n\nimport './OrderPayWay.scss'\nimport { setStepAction } from '../OrderSteps/action'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nconst OrderPayWay = ({ setStep }) => {\n  return (\n    <form className=\"pay-way-form\">\n      <TextField id=\"card-num\" required label=\"Номер карты\" variant=\"outlined\"></TextField>\n      <TextField id=\"card-num\" required label=\"Имя держателя\" variant=\"outlined\"></TextField>\n      <div className=\"short-inputs\">\n        <TextField id=\"card-num\" required label=\"Срок действия\" variant=\"outlined\"></TextField>\n        <TextField id=\"card-num\" required label=\"CVV\" variant=\"outlined\"></TextField>\n      </div>\n      <Typography variant=\"caption\">* обязательное поле</Typography>\n      <div className=\"order-button-group\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep(0)}>Назад</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setStep(2)}>Продолжить</Button>\n      </div>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderPayWay)","import React, { useState } from 'react'\nimport { TextField, Typography, Button, Icon, InputAdornment, Popover, Paper, Modal } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nimport { bindActionCreators } from 'redux'\nimport { setStepAction } from '../OrderSteps/action'\nimport { connect } from 'react-redux'\n\nimport './OrderConfirmation.scss'\n\nconst OrderConfirmation = ({ setStep }) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [success, setSuccess] = useState(false)\n  const [falure, setFalure] = useState(false)\n  const [value, setValue] = useState('')\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  }\n\n  const changeHandler = event => {\n    setValue(event.target.value)\n  }\n\n  const lastStepHandler = () => {\n    if (value === '1234') {\n      setSuccess(true)\n      setStep(3)\n    } else {\n      setFalure(true)\n      setStep(4)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  return (\n    <form className=\"order-confirm\">\n      <Popover\n        id=\"key-over-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography variant=\"body2\">Код: 1234</Typography>\n      </Popover>\n      <TextField\n        fullWidth\n        id=\"key\"\n        type=\"password\"\n        label=\"Введите код подтверждения\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onChange={changeHandler}\n        required\n        InputProps={{\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n            >\n              <Icon\n                style={{ zIndex: 1400 }}\n                onMouseEnter={handlePopoverOpen}\n                onMouseLeave={handlePopoverClose}\n                color=\"primary\"\n              >\n                help\n                </Icon>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Typography variant=\"caption\" >* обязательно поле</Typography>\n      <div className=\"order-button-group\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep(1)}>Назад</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={lastStepHandler}>Подтвердить</Button>\n      </div>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(OrderConfirmation)","import React from 'react'\nimport { Stepper, Step, StepLabel, Typography, Icon, Button } from '@material-ui/core'\n\nimport './OrderSteps.scss'\nimport OrderContactInfo from '../OrderContactInfo/OrderContactInfo'\nimport OrderPayWay from '../OrderPayWay/OrderPayWay'\nimport OrderConfirmation from '../OrderConfirmation/OrderConfirmation'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setStepAction } from './action'\nimport { bindActionCreators } from 'redux'\n\nconst steps = [\n  {\n    component: 'contact-info',\n    label: 'Контактные данные'\n  },\n  {\n    component: 'pay-way',\n    label: 'Выбор способа оплаты'\n  },\n  {\n    component: 'confirmation',\n    label: 'Подтвержение платежа'\n  }\n]\n\nconst OrderSteps = ({ step, setStep }) => {\n\n  const switchRender = () => {\n    switch (step) {\n      case 1: {\n        return <OrderPayWay />\n      }\n      case 2: {\n        return <OrderConfirmation />\n      }\n      case 3: {\n        return (\n          <div className='result-wrapper'>\n            <Icon fontSize=\"large\" className=\"success-icon\">check</Icon>\n            <Typography variant=\"subtitle2\">Заказ отправлен в обработку.</Typography>\n            <Typography variant=\"body2\">Ожидайте звонка, для подтверждения заказа</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={NavLink}\n              onClick={() => {setStep(0)}}\n              to='/'\n            >\n              На главную\n            </Button>\n          </div>\n        )\n      }\n      case 4: {\n        return (\n          <div className='result-wrapper'>\n            <Icon fontSize=\"large\" className=\"falure-icon\">close</Icon>\n            <Typography variant=\"subtitle2\">Произошла ошибка, попробуйте снова.</Typography>\n            <Typography variant=\"body2\">Описание ошибки</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={NavLink}\n              onClick={() => {setStep(0)}}\n              to='/'\n            >\n              На главную\n            </Button>\n          </div>\n        )\n      }\n      default: {\n        return <OrderContactInfo />\n      }\n    }\n  }\n\n  return (\n    <main className=\"order-steps\">\n      {switchRender()}\n      <Stepper activeStep={step}>\n        {steps.map((item, index) => {\n          const stepProps = {}\n          const labelProps = {}\n          if(index === 4) {\n            steps[2].labelProps.error = true\n          }\n          return (\n            <Step key={item.component} {...stepProps}>\n              <StepLabel {...labelProps}>{item.label}</StepLabel>\n            </Step>\n          )\n        })}\n      </Stepper>\n    </main>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    step: state.stepsState.step\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStep: bindActionCreators(setStepAction, dispatch)\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderSteps)","import React from 'react'\nimport { Container, Paper } from '@material-ui/core'\nimport OrderHeader from '../../components/OrderHeader/OrederHeader'\nimport OrderSteps from '../../components/OrderSteps/OrderSteps'\n\nconst OrderPage = () => {\n  return (\n    <Container maxWidth=\"sm\" component={Paper}>\n      <OrderHeader />\n      <OrderSteps />\n    </Container>\n  )\n}\n\nexport default OrderPage","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport CategoriesForAdmin from '../components/Categories.Admin/Categories.Admin'\r\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\r\nimport ProductsForAdmin from '../components/Products.Admin/Products.Admin'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport OrderPage from '../pages/Order.page/Order.page'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/order' exact component={OrderPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsForAdmin} />\r\n        <Route path='/admin/categories' exact component={CategoriesForAdmin} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst checkToken = () => {\r\n  try {\r\n    return jwt.verify(token, 'miraj')\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token: checkToken(),\r\n  isAuth: !!token,\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload.token,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true,\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_FORM: {\r\n      return {\r\n        ...state,\r\n        success: action.status\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n  CLEAR_MESSAGE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null,\r\n  productsLength: 0\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload.products,\r\n        productsLength: action.payload.productsLength,\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: [],\r\n        message: action.payload,\r\n        productsLength: 0,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { SET_FILTER_VALUE } from \"./adction\"\n\n\nconst initialState = {\n  value: '',\n}\n\nexport const filterState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_VALUE: {\n      return {\n        ...state,\n        value: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from \"./action\"\n\n\nconst initialState = {\n  cart: localStorage.getItem('shopping-cart') ? JSON.parse(localStorage.getItem('shopping-cart')) : []\n}\n\nexport const shoppingCartState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      }\n    }\n    case DEL_FROM_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      }\n    }\n    default: return state\n  }\n}","import { CHANGE_CURRENT_PAGE } from \"./action\"\n\n\nconst initialState = {\n  currentPage: 1\n}\n\nexport const paginationState = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CURRENT_PAGE: {\n      return {\n        ...state,\n        currentPage: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { SET_STEP } from \"./action\"\n\n\nconst initialState = {\n  step: 0,\n  completed: true\n}\n\nexport const stepsState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STEP: {\n      return {\n        ...state,\n        step: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/Products.Admin/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories.Admin/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/Categories.Client/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\nimport { filterState } from '../components/NavBar/reducer'\r\nimport { shoppingCartState } from '../components/ToggleButton/reducer'\r\nimport { paginationState } from '../components/BottomNavBar/reducer'\r\nimport { stepsState } from '../components/OrderSteps/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n  filterState,\r\n  shoppingCartState,\r\n  paginationState,\r\n  stepsState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ...form }),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ...form }),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if (data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction('Произошла ошибка, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(jwt.verify(data.token, 'miraj')))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction('Произошла ошибка, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker(action) {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  \r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  \r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = () => {\r\n  return fetch('/api/products/get-products', {\r\n    method: 'GET',\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker() {\r\n  try {\r\n    const data = yield call(fetchProducts)\r\n    yield put(getProductsSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategorySuccessAction,\r\n getCategoryFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategorySuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategorySuccessAction } from '../Categories.Admin/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\nconst fetchProductsForClient = ({category, limit, page}) => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category, limit, page}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* forClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default forClientWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { SET_FILTER_VALUE } from './adction'\nimport { getProductsForClientSuccessAction, getProductsForClientFailreAction } from '../../pages/Home.page/action'\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\nimport { getProductsSuccessAction, getProductsFailureAction } from '../Products.Admin/action'\n\nconst fetchFilteredProducts = (filterValue) => {\n  return fetch('/api/products/get-filtered-products', {\n    method: 'POST',\n    body: JSON.stringify({filterValue}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* getFilteredProductsWorker(action) {\n  yield put(setCurrentCategoryAction(''))\n  try {\n    const data = yield call(fetchFilteredProducts, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\n      yield put(getProductsSuccessAction(data.products))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n      yield put(getProductsFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction('Произошла неизвестная ошибка'))\n  }\n}\n\nfunction* filterWatcher () {\n  yield takeLatest(SET_FILTER_VALUE, getFilteredProductsWorker)\n}\n\nexport default filterWatcher","import { takeEvery, select, call } from 'redux-saga/effects'\nimport { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from './action'\n\nconst putToLocalStorage = (cart) => {\n  localStorage.setItem('shopping-cart',  JSON.stringify(cart))\n}\n\nfunction* shoppingCartWorker() {\n  const cart = yield select(state => state.shoppingCartState.cart)\n  yield call(putToLocalStorage,cart)\n}\n\nfunction* shoppingCartWatcher() {\n  yield takeEvery(ADD_TO_SHOPPING_CART, shoppingCartWorker)\n  yield takeEvery(DEL_FROM_SHOPPING_CART, shoppingCartWorker)\n}\n\nexport default shoppingCartWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/Products.Admin/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories.Admin/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport forClientWatcher from '../pages/Home.page/saga'\r\nimport filterWatcher from '../components/NavBar/saga';\r\nimport shoppingCartWatcher from '../components/ToggleButton/saga'\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    forClientWatcher(),\r\n    filterWatcher(),\r\n    shoppingCartWatcher()\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}