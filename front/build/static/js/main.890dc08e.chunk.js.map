{"version":3,"sources":["components/ToggleButton/action.js","components/ShoppingCart/ShoppingCart.js","components/Categories.Client/action.js","components/Preloader/Preloader.js","components/Categories.Client/Categories.Client.js","components/NavBar/adction.js","pages/Home.page/action.js","components/NavBar/NavBar.js","components/ToggleButton/ToggleButton.js","components/RatingBurron/RatingBurron.js","components/ToUpButton/ToUpButton.js","components/Products.Client/Products.Client.js","components/BottomNavBar/action.js","components/BottomNavBar/BottomNavBar.js","components/Catalog/Catalog.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","pages/AdminPanel.page.js","components/Categories.Admin/action.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/Categories.Admin/Categories.Admin.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/Products.Admin/action.js","components/Products.Admin/Products.Admin.js","components/AdminDashboard/AdminDashboard.js","routes/routes.js","components/AuthForm/reducer.js","components/Products.Admin/reducer.js","components/ProductCreator/reducer.js","components/Categories.Admin/reducer.js","components/CategoryCreator/reducer.js","components/Categories.Client/reducer.js","pages/Home.page/reducer.js","components/NavBar/reducer.js","components/ToggleButton/reducer.js","components/BottomNavBar/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/Products.Admin/saga.js","components/ProductCreator/saga.js","components/Categories.Admin/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","components/NavBar/saga.js","components/ToggleButton/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["addToShoppingCartAction","product","type","payload","delFromShoppingCartAction","id","connect","state","cart","shoppingCartState","dispatch","delFromSoppingCart","bindActionCreators","cartHandleClose","enqueueSnackbar","useSnackbar","className","AppBar","position","color","Toolbar","Hidden","only","Typography","variant","prices","map","item","price","length","reduce","a","b","total","toFixed","Button","disabled","onClick","IconButton","edge","aria-label","Icon","List","ListItem","key","_id","Card","CardMedia","image","img","title","name","CardContent","gutterBottom","component","description","CardActions","disableSpacing","size","fontSize","xsDown","Box","Link","href","target","rel","setCurrentCategoryAction","category","Preloader","CircularProgress","categories","forClientState","loadingCategories","currentCategory","currentCategoryState","setCurrentCategory","disablePadding","fullWidth","classes","endIcon","setFilterValueAction","value","getProductsForClientRequestAction","limit","page","getProductsForClientSuccessAction","products","productsLength","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","clearProductsMessageAction","setFilterValue","clearProductsMessage","useState","focus","setFocus","cartOpen","setCartOpen","menuOpen","setMenuOpen","setValue","useEffect","handleMenuClose","searchHandler","inputRef","createRef","style","zIndex","mdUp","aria-controls","aria-haspopup","event","Drawer","onClose","open","paper","Divider","smDown","mdDown","orientation","flexItem","startIcon","FormControl","TextField","label","onChange","onKeyPress","current","blur","inputProps","ref","onFocus","InputProps","endAdornment","InputAdornment","onBlur","Badge","badgeContent","aria-describedby","anchor","closeAfterTransition","BackdropProps","timeout","addToCart","delFromCart","children","selected","setSelected","findProduct","find","RatingButton","ratingValue","setRatinValue","Rating","newValue","console","log","ToUpButton","show","cardsRef","Zoom","in","unmountOnExit","Fab","scroll","top","behavior","loadingProducts","getProductsForClientRequest","useRef","showScrollTo","setShowScrollTo","Paper","elevation","Grid","onScroll","scrollTop","container","xs","sm","md","lg","CardActionArea","changeCurrentPageAction","currentPage","paginationState","changeCurrentPage","Pagination","count","Math","ceil","shape","spacing","PaperProps","getCategoriesForClientRequest","currentPageIndex","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","loginFailureAction","logoutAction","loading","authState","registrationRequest","loginRequest","setOpen","anchorEl","setAnchorEl","email","password","err","setErr","setForm","changeInputHandler","popperHandler","currentTarget","Popper","placement","transition","TransitionProps","Fade","justify","alignContent","error","required","ButtonGroup","AuthPage","DeveloperPage","settingsList","path","icon","listItem","root","listIcon","divider","CustomButton","to","activeOnlyWhenExact","math","useRouteMatch","exact","isExact","ListItemIcon","ListItemText","AdminSettingsList","light","CustomLink","textDecoration","logout","location","findName","pathname","margin","display","justifyContent","undefined","padding","AdminRoutes","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","addCategoryRequestAction","addCategoryFailureAction","categoryCreatorState","success","addCategoryRequest","setCategory","isOpen","setIsOpen","modalCloseHendler","addCatogory","useCallback","Modal","aria-labelledby","FormHelperText","autoComplete","BreadcrumbsCreator","active","categoriesState","oneCategoryLoading","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","Breadcrumbs","separator","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","Checkbox","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","Select","displayEmpty","MenuItem","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","getProducts","checkboxChangeHendler","TableCreator","filter","match","InputLabel","htmlFor","Input","startAdornment","AdminDashboard","border","mapStateToProps","isAuth","Routes","AdminPanelPage","HomePage","ProductsForAdmin","ProductCreator","CategoriesForAdmin","sessionStorage","getItem","initialState","localStorage","JSON","parse","rootReducer","combineReducers","action","filterState","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","stringify","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","forClientWatcher","fetchProductsForClient","fetchCategoriesForClient","getFilteredProductsWorker","filterWatcher","fetchFilteredProducts","filterValue","shoppingCartWorker","shoppingCartWatcher","putToLocalStorage","select","takeEvery","rootSaga","all","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","theme","createMuiTheme","palette","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","anchorOrigin","horizontal","vertical","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.890dc08e.chunk.js","sourcesContent":["export const ADD_TO_SHOPPING_CART = 'ADD_TO_SHOPPING_CART'\nexport const DEL_FROM_SHOPPING_CART = 'DEL_FROM_SHOPPING_CART'\n\n\nexport const addToShoppingCartAction = product => {\n  return {\n    type: ADD_TO_SHOPPING_CART,\n    payload: product\n  }\n}\n\nexport const delFromShoppingCartAction = id => {\n  return {\n    type: DEL_FROM_SHOPPING_CART,\n    payload: id\n  }\n}","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport './ShoppingCart.scss'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CardActionArea,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Icon,\r\n  ListItem,\r\n  Typography,\r\n  Hidden,\r\n  Button,\r\n  Link,\r\n  List,\r\n  Box,\r\n  AppBar,\r\n  Toolbar\r\n} from '@material-ui/core'\r\nimport { bindActionCreators } from 'redux'\r\nimport { delFromShoppingCartAction } from '../ToggleButton/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    label: \"Название\",\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: \"Цена\",\r\n  },\r\n  {\r\n    id: 'delete',\r\n    label: \"Удалить\",\r\n  },\r\n]\r\n\r\nconst ShoppingCart = ({ cart, cartHandleClose, delFromSoppingCart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const total = () => {\r\n    const prices = cart.map(item => item.price)\r\n    if (prices.length > 0) {\r\n      return prices.reduce((a, b) => a + b)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const delFromCartHandler = (id) => {\r\n    delFromSoppingCart(id)\r\n    enqueueSnackbar('Удалено из корзины')\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bar nav-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bar\">\r\n          <Hidden only={['xs', 'md']}>\r\n            <Typography variant=\"h6\">\r\n              Корзина\r\n          </Typography>\r\n          </Hidden>\r\n          <Typography variant=\"button\" color=\"primary\" >Всего: {total().toFixed(2)}&nbsp;$</Typography>\r\n          <Button color=\"secondary\" variant=\"contained\" disabled={!cart.length > 0}>\r\n            Оформить заказ\r\n          </Button>\r\n          <Hidden only={['xs', 'md']}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={cartHandleClose}\r\n            >\r\n              Продолжить покупки\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden only={['sm', 'lg', 'xl']}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"close-modal\"\r\n              onClick={cartHandleClose}\r\n              className=\"btn-close-cart\"\r\n              variant=\"outlined\"\r\n            >\r\n              <Icon>arrow_forward_ios</Icon>\r\n            </IconButton>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List className=\"cart-wrapper\">\r\n        {cart && cart.length > 0 ? cart.map(item => (\r\n          <ListItem key={item._id} className=\"cart-item\">\r\n            <Card\r\n              className=\"card\"\r\n              variant=\"outlined\"\r\n            >\r\n              <CardMedia\r\n                className=\"card-img\"\r\n                image={item.img}\r\n                title={item.name}\r\n              />\r\n              <CardContent\r\n                className=\"card-description\"\r\n              >\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {item.description}\r\n                  {item.description}\r\n                  {item.description}\r\n                </Typography>\r\n                <div className=\"count\">\r\n\r\n                </div>\r\n              </CardContent>\r\n              <CardActions\r\n                disableSpacing={true}\r\n                className=\"cart-card-actions\"\r\n              >\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => { delFromCartHandler(item._id) }}\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          </ListItem>\r\n        )) : <div className=\"cart-empry-text\"><Typography variant=\"body1\" fontSize={30} color=\"textSecondary\">Корзина пуста</Typography></div>}\r\n      </List>\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className=\"cart-app-bottom-bar\"\r\n        color=\"inherit\"\r\n      >\r\n        <Toolbar className=\"cart-bottom-bar\">\r\n          <Hidden xsDown>\r\n            <Box\r\n              aria-label=\"social-links\"\r\n              className=\"social-btn-group\"\r\n            >\r\n              <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n              <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n              <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\r\n              </Link>\r\n            </Box>\r\n          </Hidden>\r\n          <Typography variant=\"h6\">LOGOtip</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    delFromSoppingCart: bindActionCreators(delFromShoppingCartAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"preloader-wrapper\">\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './Categories.Client.scss'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesForClient = ({ categories, setCurrentCategory, loadingCategories, currentCategory }) => {\r\n  const listCreator = (arr) => {\r\n    return arr.map((item) => (\r\n      <ListItem key={item.name}>\r\n        <Button\r\n          fullWidth\r\n          size=\"small\"\r\n          classes={{\r\n            fullWidth: (currentCategory === item.name ? 'full-width-btn active' : 'full-width-btn')\r\n          }}\r\n          variant='text'\r\n          onClick={() => setCurrentCategory(item.name)}\r\n          color={currentCategory === item.name ? 'secondary' : 'default'}\r\n          endIcon={currentCategory === item.name ? <Icon>beenhere</Icon> : null}\r\n        >\r\n          <Typography variant=\"button\">{item.name}</Typography>\r\n        </Button>\r\n      </ListItem>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <List className=\"categories-list\" disablePadding>\r\n      {loadingCategories ? <Preloader /> : listCreator(categories)}\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForClient)","export const SET_FILTER_VALUE = 'SET_FILTER_VALUE'\n\nexport const setFilterValueAction = value => {\n  return {\n    type: SET_FILTER_VALUE,\n    payload: value\n  }\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\nexport const CLEAR_PRODUCTS_MESSAGE = 'CLEAR_PRODUCTS_MESSAGE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = (category, limit, page) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: {\r\n      category,\r\n      limit,\r\n      page\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = (products, productsLength) => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: {\r\n      products,\r\n      productsLength\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearProductsMessageAction = () => {\r\n  return {\r\n    type: CLEAR_PRODUCTS_MESSAGE\r\n  }\r\n}","import React, { useState, useEffect, createRef, forwardRef } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  Drawer,\r\n  FormControl,\r\n  Divider,\r\n  Link,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setFilterValueAction } from './adction';\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearProductsMessageAction } from '../../pages/Home.page/action';\r\n\r\n\r\nconst NavBar = ({ setFilterValue, message, clearProductsMessage, cart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [focus, setFocus] = useState(false)\r\n  const [cartOpen, setCartOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n  const cartHandleClose = () => {\r\n    setCartOpen(false)\r\n  }\r\n  const CartHandleOpen = () => {\r\n    setCartOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearProductsMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  const handleMenuOpen = event => {\r\n    setMenuOpen(true)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const searchHandler = () => {\r\n    setFilterValue(value)\r\n    setFocus(false)\r\n  }\r\n\r\n  const clearHandler = () => {\r\n    setValue('')\r\n  }\r\n\r\n  const keyHandler = event => {\r\n    if (event.key === 'Enter') {\r\n      searchHandler()\r\n      inputRef.current.blur()\r\n    }\r\n  }\r\n\r\n\r\n  const inputRef = createRef()\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" style={{ zIndex: 1201 }} className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden mdUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            onClose={handleMenuClose}\r\n            open={menuOpen}\r\n            classes={{\r\n              paper: 'mobild-drawer-papper'\r\n            }}\r\n          >\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar nav-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Typography variant=\"h3\" className=\"logo-mobile\">LOGOtip</Typography>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"close-modal\"\r\n                  onClick={handleMenuClose}\r\n                  className=\"btn-close-cart\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Icon>arrow_forward_ios</Icon>\r\n                </IconButton>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <div className=\"categories-list-wrapper \">\r\n              <Typography variant=\"caption\" className=\"menu-caption\">Категории товаров</Typography>\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n              <CategoriesForClient />\r\n              <Divider variant=\"middle\" className=\"menu-divider\" />\r\n            </div>\r\n            <AppBar\r\n              position=\"sticky\"\r\n              className=\"menu-app-bar\"\r\n              color=\"inherit\"\r\n            >\r\n              <Toolbar className=\"cart-bar\">\r\n                <Box\r\n                  aria-label=\"social-links\"\r\n                  className=\"social-btn-group\"\r\n                >\r\n                  <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                  <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\r\n                  </Link>\r\n                </Box>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 95 069 XX XX\r\n            </Button>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n          </Box>\r\n        </Hidden>\r\n        <FormControl\r\n          className=\"search-wrapper\"\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onChange={inputFilterHandler}\r\n            value={value}\r\n            onKeyPress={keyHandler}\r\n            inputProps={{\r\n              ref: inputRef,\r\n              onFocus: () => setFocus(true)\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {focus\r\n                    ? <IconButton\r\n                      color=\"primary\"\r\n                      onClick={searchHandler}\r\n                      onBlur={() => setFocus(false)}\r\n                    ><Icon>search</Icon></IconButton>\r\n                    : (value && <IconButton\r\n                      color=\"default\"\r\n                      onClick={clearHandler}\r\n                    > <Icon>clear</Icon></IconButton>)\r\n                  }\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <IconButton\r\n          aria-label=\"cart\"\r\n          onClick={CartHandleOpen}\r\n        >\r\n          <Badge badgeContent={cart.length} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Drawer\r\n          open={cartOpen}\r\n          aria-describedby=\"spring-modal-description\"\r\n          classes={{\r\n            paper: 'cart-paper-mobile'\r\n          }}\r\n          onClose={cartHandleClose}\r\n          anchor=\"right\"\r\n          closeAfterTransition\r\n          BackdropProps={{\r\n            timeout: 225,\r\n          }}\r\n        >\r\n          <ShoppingCart cartHandleClose={cartHandleClose} />\r\n        </Drawer>\r\n      </Hidden>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.forClientState.message,\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch),\r\n    clearProductsMessage: bindActionCreators(clearProductsMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Box } from '@material-ui/core';\n\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addToShoppingCartAction, delFromShoppingCartAction } from './action'\n\nconst PriceToggleButton = ({ children, product, addToCart, delFromCart, cart }) => {\n  const [selected, setSelected] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    const findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      setSelected(true)\n    } else {\n      setSelected(false)\n    }\n  }, [cart])\n\n  const handler = () => {\n    let findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      enqueueSnackbar('Удалено из корзины')\n      delFromCart(product._id)\n      setSelected(false)\n    } else {\n      enqueueSnackbar('Добавлено в корзину')\n      addToCart(product)\n      setSelected(true)\n    }\n  }\n\n  return (\n    <Box component=\"div\" className=\"card-button-wrapper\">\n      <Button\n        color={selected ? 'inherit' : 'primary'}\n        variant={selected ? 'outlined' : 'contained'}\n        aria-label=\"add to shopping cart\"\n        onClick={handler}\n        endIcon={selected ? <Icon>check</Icon> : <Icon>shopping_cart</Icon>}\n      >\n        {children.toFixed(2)} $\n    </Button>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: bindActionCreators(addToShoppingCartAction, dispatch),\n    delFromCart: bindActionCreators(delFromShoppingCartAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceToggleButton)","import React, { useState } from 'react'\nimport { Rating } from '@material-ui/lab'\nimport { Box, Typography} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\n\nexport const RatingButton = ({id}) => {\n  const [ratingValue, setRatinValue] = useState(0)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const ratingHandler = (event, newValue) => {\n    console.log(newValue)\n    setRatinValue(+newValue)\n    if(+newValue === 0) {\n      enqueueSnackbar('Оценка удалена')\n    } else if (ratingValue !== +newValue && ratingValue !== 0) {\n      enqueueSnackbar('Оценка изменена')\n    } else {\n      enqueueSnackbar('Спасибо за оценку')\n    }\n  }\n\n  return (\n    <Box component=\"div\">\n      <Typography component=\"legend\" variant=\"caption\">Оценка: {ratingValue}</Typography>\n      <Rating\n        name={id}\n        value={ratingValue}\n        onChange={ratingHandler}\n      />\n    </Box>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { Fab, Icon, Zoom } from '@material-ui/core'\nimport './ToUpButton.scss'\n\n\nexport const ToUpButton = ({show, cardsRef}) => {\n\n  const handleScrollToTop = () => {\n    cardsRef.current.scroll({top: 0, behavior: 'smooth'})\n  }\n\n  return (\n    <div className=\"to-up-button\">\n      <Zoom\n        timeout={350}\n        in={show}\n        unmountOnExit\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={handleScrollToTop}\n        >\n          <Icon>expand_less</Icon>\n        </Fab>\n      </Zoom>\n    </div>\n  )\n}","import React, { useRef, useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\n\r\nimport './Products.Client.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action'\r\nimport { bindActionCreators } from 'redux'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport PriceToggleButton from '../ToggleButton/ToggleButton'\r\nimport { RatingButton } from '../RatingBurron/RatingBurron'\r\nimport { ToUpButton } from '../ToUpButton/ToUpButton'\r\n\r\n\r\nconst productCreator = (arr) => {\r\n  return arr.map(item => {\r\n    return (\r\n      <Grid item xs={12} sm={6} md={6} lg={3} key={item._id}>\r\n        <Card\r\n          className=\"card\"\r\n          variant=\"outlined\"\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className=\"card-img\"\r\n              image={item.img}\r\n              title={item.name}\r\n            />\r\n            <CardContent className=\"card-content\">\r\n              <Typography className=\"card-content-text\" gutterBottom variant=\"h5\" component=\"h2\">\r\n                {item.name}\r\n              </Typography>\r\n              <Typography className=\"card-content-text\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {item.description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions\r\n            disableSpacing={true}\r\n          >\r\n            <RatingButton\r\n              id={item._id}\r\n            />\r\n            <PriceToggleButton\r\n              product={item}\r\n            >\r\n              {item.price}\r\n            </PriceToggleButton>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    )\r\n  })\r\n}\r\n\r\n\r\nconst ProductsForClient = ({ products, loadingProducts }) => {\r\n  const cardsRef = useRef(null)\r\n  const [showScrollTo, setShowScrollTo] = useState(false)\r\n\r\n  const handleScroll = () => {\r\n    if (cardsRef.current.scrollTop > 400) {\r\n      setShowScrollTo(true)\r\n    } else {\r\n      setShowScrollTo(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"cards-list-wrapper\" elevation={1}>\r\n      <Grid ref={cardsRef} onScroll={handleScroll} container className=\"cards-list\">\r\n        {loadingProducts ? <Preloader /> : productCreator(products)}\r\n      </Grid>\r\n      <ToUpButton show={showScrollTo} cardsRef={cardsRef} />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForClient)","export const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE'\n\n\nexport const changeCurrentPageAction = page => {\n  return {\n    type: CHANGE_CURRENT_PAGE,\n    payload: page\n  }\n}","import React, {useState, useEffect} from 'react'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Box,\n  Icon,\n  Hidden,\n  Link\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab'\nimport { connect } from 'react-redux'\n\nimport './BottomNavBar.scss'\nimport { bindActionCreators } from 'redux';\nimport { changeCurrentPageAction } from './action';\n\nconst BottomNavBar = ({ productsLength, changeCurrentPage, currentPage }) => {\n  console.log(currentPage)\n  const paginationHandler = (event, newValue) => {\n    changeCurrentPage(newValue)\n  }\n\n  return (\n    <AppBar\n      position=\"static\"\n      className=\"app-bottom-bar\"\n      color=\"inherit\"\n      elevation={1}\n    >\n      <Toolbar\n      className=\"bottom-bar\"\n      >\n        <Hidden xsDown>\n          <Box\n            aria-label=\"social-links\"\n            className=\"social-btn-group\"\n          >\n            <Link className=\"git\" href=\"https://github.com/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-github\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"fb\" href=\"https://www.facebook.com/profile.php?id=100017178317539\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-facebook\" fontSize=\"large\" color=\"action\" />\n            </Link>\n            <Link className=\"tlg\" href=\"https://t.me/AkeleyUA\" target=\"_blank\" rel=\"noreferrer\">\n              <Icon className=\"fab fa-telegram\" fontSize=\"large\" color=\"action\" />\n            </Link>\n          </Box>\n        </Hidden>\n        {productsLength < 18\n          ? null\n          : <Pagination\n            className=\"bottom-pagination\"\n            count={Math.ceil(productsLength / 18)}\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={paginationHandler}\n          />\n        }\n        <Hidden xsDown>\n          <Typography variant=\"h6\">LOGOtip</Typography>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    productsLength: state.forClientState.productsLength,\n    currentPage: state.paginationState.currentPage\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomNavBar)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n  Drawer,\r\n  Divider,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\nimport CategoriesForClient from '../Categories.Client/Categories.Client'\r\nimport ProductsForClient from '../Products.Client/Products.Client'\r\n\r\nimport './Catalog.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\r\nimport BottomNavBar from '../BottomNavBar/BottomNavBar'\r\n\r\n\r\nconst Catalog = ({ productsLength, setCurrentCategory }) => {\r\n\r\n  const popularHandler = () => {\r\n    setCurrentCategory('Популярно')\r\n  }\r\n\r\n  return (\r\n    <Box \r\n      className=\"catalog-wrapper\"\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n      >\r\n        <Hidden smDown>\r\n          <Grid item md={3} lg={2}>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className=\"categories-container\"\r\n              open\r\n              PaperProps={{\r\n                elevation: 1\r\n              }}\r\n            >\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Товары ({!productsLength ? \"...\" : productsLength})\r\n              </Typography>\r\n              <Divider variant=\"middle\" />\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={popularHandler}\r\n                  size=\"small\"\r\n                >\r\n                  Популярное\r\n                </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                >\r\n                  Лучшие цены\r\n                </Button>\r\n              </Box>\r\n              <Divider variant=\"middle\" />\r\n              <CategoriesForClient />\r\n            </Drawer>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={9}\r\n          xs={12}\r\n        >\r\n          <ProductsForClient />\r\n          <BottomNavBar />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productsLength: state.forClientState.productsLength,\r\n    message: state.forClientState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, {useEffect} from 'react'\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\nimport BottomNavBar from '../../components/BottomNavBar/BottomNavBar'\r\nimport { ToUpButton } from '../../components/ToUpButton/ToUpButton'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCategoriesForClientRequestAction, getProductsForClientRequestAction } from './action'\r\nimport { changeCurrentPageAction } from '../../components/BottomNavBar/action'\r\n\r\nconst limit = 18\r\n\r\nconst HomePage = ({ getProductsForClientRequest, getCategoriesForClientRequest, currentCategory, currentPage, changeCurrentPage }) => {\r\n  const currentPageIndex = currentPage - 1\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== '') {\r\n      getProductsForClientRequest(currentCategory, limit, currentPageIndex)\r\n    }\r\n  }, [currentCategory, currentPage])\r\n\r\n  useEffect(() => {\r\n    changeCurrentPage(1)\r\n  }, [currentCategory])\r\n\r\n  return  (\r\n    <div >\r\n      <NavBar />\r\n      <Catalog />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentCategory: state.currentCategoryState.currentCategory,\r\n    currentPage: state.paginationState.currentPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch),\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch),\r\n    changeCurrentPage: bindActionCreators(changeCurrentPageAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: token\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} onClick={popperHandler} placement=\"bottom-start\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center' alignContent='center' className=\"container\">\r\n        <Grid item xs={12} sm={8} md={6} lg={4} component={Paper}>\r\n          <FormControl className=\"form-wrapper\">\r\n            <Typography variant=\"h3\" className=\"title\">\r\n              LOGOtip\r\n            <Typography variant=\"caption\">\r\n                админ\r\n            </Typography>\r\n            </Typography>\r\n            <TextField\r\n              error={err.email}\r\n              className=\"auth-input\"\r\n              id=\"email\"\r\n              label=\"email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              inputProps={{ value: form.email }}\r\n              onChange={changeInputHandler}\r\n              required\r\n            />\r\n            <TextField\r\n              error={err.password}\r\n              className=\"auth-input\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={changeInputHandler}\r\n              inputProps={{ value: form.password }}\r\n              required\r\n            />\r\n            <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>forward</Icon>}\r\n                type=\"submit\"\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Войти</Typography>\r\n            </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>add_box</Icon>}\r\n                type=\"submit\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Регистрация</Typography>\r\n            </Button>\r\n              <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n                <Icon>help_outline</Icon>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm)","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets'\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category'\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nconst CustomButton = ({ to, label, activeOnlyWhenExact, icon }) => {\r\n  const math = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <Link to={to} className=\"admin-drawer-link\">\r\n      <ListItem\r\n        component={Button}\r\n        variant=\"contained\"\r\n        classes={classes.listItem}\r\n        selected={math ? math.isExact : false}\r\n      >\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon>{icon}</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            {label}\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          return (\r\n            <CustomButton\r\n              key={item.name}\r\n              to={item.path}\r\n              label={item.name}\r\n              activeOnlyWhenExact\r\n              icon={item.icon} />\r\n          )\r\n        })}\r\n      </List>\r\n      <Link to='/developer' className=\"to-developer admin-drawer-link\">\r\n        <ListItem\r\n          component={Button}\r\n          variant=\"contained\"\r\n          classes={classes.listItem}\r\n          selected\r\n        >\r\n          <ListItemIcon\r\n            classes={classes.listIcon}\r\n          >\r\n            <Icon>code</Icon>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"caption\">\r\n              Разработчик\r\n              </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </Link >\r\n    </Drawer>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { logoutAction } from \"../components/AuthForm/action\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport { settingsList } from '../components/AdminSettingsList/AdminSettingsList'\r\n\r\nconst CustomLink = ({to, onClick}) => {\r\n  return (\r\n    <Link to={to} onClick={onClick} style={{textDecoration:'none'}}>\r\n      <Button>Выйти</Button>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst AdminPanelPage = ({ logout, location }) => {\r\n  console.log(location)\r\n  const pathList = settingsList.map(item => ({ path: item.path, name: item.name }))\r\n  const findName = pathList.find(item => item.path === location.pathname)\r\n\r\n  return (\r\n    <Grid container className=\"admin-panel\">\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, display: 'flex', justifyContent: 'space-between' }} component={Paper}>\r\n          <Typography variant=\"body1\">\r\n            {findName !== undefined ? findName.name : ''}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"secondary\">\r\n            Дисклеймер: Админ панель ещё в разработке\r\n          </Typography>\r\n          <CustomLink to='/admin' onClick={logout}/>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={2} className=\"admin-drawer\">\r\n        <AdminSettingsList />\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20}} component={Paper}>\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: bindActionCreators(logoutAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoryRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategorySuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoryFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n  const modalOpenHandler = () => {\r\n    setIsOpen(true)\r\n  }\r\n  const modalCloseWrapper = (event) => {\r\n    if(event.currentTarget === event.target) {\r\n      setIsOpen(false)\r\n    }\r\n  }\r\n  const modalCloseHendler = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      modalCloseHendler()\r\n      setCategory({name: ''})\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <Paper className=\"category-creator\">\r\n      <Button variant=\"outlined\" onClick={modalOpenHandler}>Добавить</Button>\r\n      <Modal\r\n        open={isOpen}\r\n        onClose={modalCloseHendler}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"category-creator-body\" onClick={modalCloseWrapper}>\r\n          <FormControl\r\n            className=\"add-category-form\"\r\n            margin=\"dense\"\r\n            required\r\n            size=\"small\"\r\n          >\r\n            <FormHelperText>Добавление категории</FormHelperText>\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Название\"\r\n              variant=\"outlined\"\r\n              name=\"name\"\r\n              size=\"small\"\r\n              onChange={changeInputHandler}\r\n              value={category.name}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={modalCloseHendler}>Закрыть</Button>\r\n          </FormControl>\r\n        </div>\r\n      </Modal>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React, { useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n  Breadcrumbs\r\n} from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './Categories.Admin.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\n\r\nconst BreadcrumbsCreator = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin'\r\n  },\r\n  {\r\n    name: 'Категории',\r\n    path: '/admin/categories',\r\n    active: true\r\n  },\r\n]\r\n\r\nconst CategoriesForAdmin = ({\r\n  categories,\r\n  getCategoryRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  \r\n  const {enqueueSnackbar} = useSnackbar()\r\n\r\n  const getCategory = useCallback(\r\n    () => {\r\n      getCategoryRequest()\r\n    },\r\n    [categories],\r\n  )\r\n\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {BreadcrumbsCreator.map(item => (\r\n          <NavLink key={item.name} to={item.path} className={item.active ? 'active-link link' : 'link' }>{item.name}</NavLink>\r\n        ))}\r\n      </Breadcrumbs>\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                        color=\"primary\"\r\n                        name={row._id}\r\n                        checked={row.show || false}\r\n                        onChange={(event) => {\r\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                        }}\r\n                        disabled={loading || oneCategoryLoading}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                    className=\"centered-btn\"\r\n                    onClick={() => {deleteCategoryRequest(row._id)}}\r\n                    disabled={loading || oneCategoryLoading}\r\n                  >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <CategoryCreator />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesForAdmin)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_FORM = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const formCleanerAction = status => {\r\n  return {\r\n    type: CLEAR_FORM,\r\n    payload: status\r\n  }\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\r\nimport { getCategoryRequestAction } from '../Categories.Admin/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  formCleaner,\r\n  success,\r\n  getCategoryRequest,\r\n  categoriesLoading,\r\n}) => {\r\n  const {enqueueSnackbar} = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  const getCategories = useCallback(() => {\r\n    getCategoryRequest()\r\n  },[getCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    formCleaner(false)\r\n    return () => {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <div className=\"product-creator\">\r\n      <Paper className=\"form-wrapper\">\r\n        <FormControl\r\n          className=\"add-product-form\"\r\n          margin=\"dense\"\r\n          required\r\n          size=\"small\"\r\n        >\r\n          <FormHelperText>Добавление товара</FormHelperText>\r\n          <Select\r\n            className=\"categories-select\"\r\n            value={form.category}\r\n            onChange={changeInputHandler}\r\n            name=\"category\"\r\n            displayEmpty\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={categoriesLoading}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Выберите категорию\r\n            </MenuItem>\r\n            {categories.map(item => {\r\n              return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n            })}\r\n          </Select>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Название\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.name}\r\n          />\r\n          <TextField\r\n            id=\"amount\"\r\n            label=\"Колличество\"\r\n            variant=\"outlined\"\r\n            name=\"amount\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.amount}\r\n          />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Цена\"\r\n            variant=\"outlined\"\r\n            name=\"price\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.price}\r\n          />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Описание\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.description}\r\n          />\r\n          <TextField\r\n            id=\"img\"\r\n            label=\"Изображение (url)\"\r\n            variant=\"outlined\"\r\n            name=\"img\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.img}\r\n          />\r\n          <Button type=\"submit\" variant=\"outlined\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n        </FormControl>\r\n        <NavLink className=\"btn\" to=\"/admin/products\">Список продуктов</NavLink>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    success: state.productCreatorState.success,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getProductsRequestAction = () => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n} from './action'\r\n\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Input,\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './Products.Admin.scss'\r\n\r\n\r\nconst ProductsForAdmin = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [value, setValue] = useState('')\r\n\r\n  const getProducts = useCallback(() => {\r\n    getProductsRequest()\r\n  }, [getProductsRequest])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar( typeof message === \"string\" ? message : 'Неизвестная ошибка')\r\n    }\r\n  }, [message])\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell >Описание</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.filter(row => row.name.match(value)).map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell >{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      onClick={() => { deleteProductRequest(row._id) }}\r\n                      disabled={oneProductLoading === row.id}\r\n                    >\r\n                      <Icon>clear</Icon>\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-list\">\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"input-with-icon-search\">Введите имя товара</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-search\"\r\n          onChange={inputFilterHandler}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Icon>search</Icon>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      {loading ? <Preloader /> : <TableCreator />}\r\n      <NavLink\r\n        to=\"/admin/products/add\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      >Добавить</NavLink>\r\n      <NavLink\r\n        to=\"/admin\"\r\n        variant=\"outlined\"\r\n      >Панель управления</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsForAdmin)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <Typography variant=\"subtitle1\">Пользователей на сайте</Typography>\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Модераторы(4)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Контент-менеджеры(2)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport CategoriesForAdmin from '../components/Categories.Admin/Categories.Admin'\r\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\r\nimport ProductsForAdmin from '../components/Products.Admin/Products.Admin'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsForAdmin} />\r\n        <Route path='/admin/products/add' exact component={ProductCreator} />\r\n        <Route path='/admin/categories' exact component={CategoriesForAdmin} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token,\r\n  isAuth: (token ? true : false),\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true,\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_FORM: {\r\n      return {\r\n        ...state,\r\n        success: action.status\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n  CLEAR_PRODUCTS_MESSAGE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null,\r\n  productsLength: 0\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload.products,\r\n        productsLength: action.payload.productsLength,\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: [],\r\n        message: action.payload,\r\n        productsLength: 0,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_PRODUCTS_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { SET_FILTER_VALUE } from \"./adction\"\n\n\nconst initialState = {\n  value: '',\n}\n\nexport const filterState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_VALUE: {\n      return {\n        ...state,\n        value: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from \"./action\"\n\n\nconst initialState = {\n  cart: localStorage.getItem('shopping-cart') ? JSON.parse(localStorage.getItem('shopping-cart')) : []\n}\n\nexport const shoppingCartState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      }\n    }\n    case DEL_FROM_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      }\n    }\n    default: return state\n  }\n}","import { CHANGE_CURRENT_PAGE } from \"./action\"\n\n\nconst initialState = {\n  currentPage: 1\n}\n\nexport const paginationState = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CURRENT_PAGE: {\n      return {\n        ...state,\n        currentPage: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/Products.Admin/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories.Admin/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/Categories.Client/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\nimport { filterState } from '../components/NavBar/reducer'\r\nimport { shoppingCartState } from '../components/ToggleButton/reducer'\r\nimport { paginationState } from '../components/BottomNavBar/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n  filterState,\r\n  shoppingCartState,\r\n  paginationState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if(data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(data.token))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker() {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  \r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  \r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = () => {\r\n  return fetch('/api/products/get-products', {\r\n    method: 'GET',\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker() {\r\n  try {\r\n    const data = yield call(fetchProducts)\r\n    yield put(getProductsSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategorySuccessAction,\r\n getCategoryFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategorySuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategorySuccessAction } from '../Categories.Admin/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\n\r\nconst fetchProductsForClient = ({category, limit, page}) => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category, limit, page}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction('Что-то пошло не так, перезагрузите страницу'))\r\n  }\r\n}\r\n\r\nfunction* forClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default forClientWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { SET_FILTER_VALUE } from './adction'\nimport { getProductsForClientSuccessAction, getProductsForClientFailreAction } from '../../pages/Home.page/action'\nimport { setCurrentCategoryAction } from '../Categories.Client/action'\n\nconst fetchFilteredProducts = (filterValue) => {\n  return fetch('/api/products/get-filtered-products', {\n    method: 'POST',\n    body: JSON.stringify({filterValue}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* getFilteredProductsWorker(action) {\n  yield put(setCurrentCategoryAction(''))\n  try {\n    const data = yield call(fetchFilteredProducts, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products, data.productsLength))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction('Произошла неизвестная ошибка'))\n  }\n}\n\nfunction* filterWatcher () {\n  yield takeLatest(SET_FILTER_VALUE, getFilteredProductsWorker)\n}\n\nexport default filterWatcher","import { takeEvery, select, call } from 'redux-saga/effects'\nimport { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from './action'\n\nconst putToLocalStorage = (cart) => {\n  localStorage.setItem('shopping-cart',  JSON.stringify(cart))\n}\n\nfunction* shoppingCartWorker() {\n  const cart = yield select(state => state.shoppingCartState.cart)\n  yield call(putToLocalStorage,cart)\n}\n\nfunction* shoppingCartWatcher() {\n  yield takeEvery(ADD_TO_SHOPPING_CART, shoppingCartWorker)\n  yield takeEvery(DEL_FROM_SHOPPING_CART, shoppingCartWorker)\n}\n\nexport default shoppingCartWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/Products.Admin/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories.Admin/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport forClientWatcher from '../pages/Home.page/saga'\r\nimport filterWatcher from '../components/NavBar/saga';\r\nimport shoppingCartWatcher from '../components/ToggleButton/saga'\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    forClientWatcher(),\r\n    filterWatcher(),\r\n    shoppingCartWatcher()\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}