{"version":3,"sources":["components/ShoppingCart/ShoppingCart.js","components/NavBar/NavBar.js","components/CategoriesList/action.js","pages/Home.page/action.js","components/Preloader/Preloader.js","components/CategoriesList/CategoriesList.js","components/CardsList/CardsList.js","components/Catalog/Catalog.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","components/AdminSettingsList/AdminSettingsList.js","pages/AdminPanel.page.js","components/Categories/action.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/Categories/Categories.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/ProductsList/action.js","components/ProductsList/ProductsList.js","routes/routes.js","components/AuthForm/reducer.js","components/ProductsList/reducer.js","components/ProductCreator/reducer.js","components/Categories/reducer.js","components/CategoryCreator/reducer.js","components/CategoriesList/reducer.js","pages/Home.page/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/ProductsList/saga.js","components/ProductCreator/saga.js","components/Categories/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["ShoppingCart","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","name","price","columns","id","label","Paper","style","width","className","TableContainer","height","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","slice","row","hover","role","tabIndex","value","TablePagination","rowsPerPageOptions","component","count","length","labelRowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","target","item","reduce","a","b","StyledBadge","withStyles","theme","badge","right","top","border","palette","background","paper","padding","Badge","NavBar","focus","setFocus","open","setOpen","ShoppingCartWithRef","React","forwardRef","props","ref","children","createRef","AppBar","position","color","Toolbar","Typography","variant","Box","Button","startIcon","Icon","TextField","fullWidth","onFocus","onBlur","InputProps","startAdornment","InputAdornment","endAdornment","IconButton","onClick","badgeContent","Modal","onClose","setCurrentCategoryAction","category","type","payload","getProductsForClientRequestAction","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","Preloader","CircularProgress","connect","state","categories","forClientState","loadingCategories","dispatch","setCurrentCategory","bindActionCreators","getCategoriesForClientRequest","checkedCategory","setCheckCategory","useEffect","Tabs","orientation","onChange","currentTarget","TabIndicatorProps","left","index","Tab","_id","products","loadingProducts","currentCategory","currentCategoryState","getProductsForClientRequest","ratingValue","setRatinValue","enqueueSnackbar","useSnackbar","ratingHandler","newValue","addToCartHandler","Grid","container","spacing","xs","Card","CardActionArea","CardMedia","image","img","title","CardContent","gutterBottom","description","CardActions","disableSpacing","Rating","endIcon","HomePage","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","loginFailureAction","logoutAction","loading","authState","registrationRequest","loginRequest","email","password","setForm","changeInputHandler","disabled","AuthPage","AdminSettingsList","to","logout","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","addCategoryRequestAction","addCategoryFailureAction","categoryCreatorState","success","addCategoryRequest","setCategory","isOpen","setIsOpen","modalCloseHendler","addCatogory","useCallback","aria-labelledby","aria-describedby","FormControl","margin","required","size","FormHelperText","autoComplete","BreadcrumbsCreator","path","active","categoriesState","oneCategoryLoading","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","Breadcrumbs","separator","align","scope","Checkbox","show","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","err","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","Select","displayEmpty","MenuItem","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","setValue","getProducts","checkboxChangeHendler","TableCreator","filter","match","InputLabel","htmlFor","Input","isAuth","exact","AdminPanelPage","ProductsList","ProductCreator","Categories","sessionStorage","getItem","initialState","rootReducer","combineReducers","action","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","JSON","stringify","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","ForClientWatcher","fetchProductsForClient","fetchCategoriesForClient","rootSaga","all","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","createMuiTheme","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b317f9bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport './ShoppingCart.scss'\n\nexport const ShoppingCart = () => {\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  const rows = [\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    },\n    {\n      name: 'Товар1',\n      price: 100\n    }\n  ]\n  const columns = [\n    {\n      id: 'name',\n      label: \"Название\",\n    },\n    {\n      id: 'price',\n      label: \"Цена\",\n    },\n    {\n      id: 'delete',\n      label: \"Удалить\",\n    },\n  ]\n\n  return (\n    <Paper style={{ width: \"100%\" }} className=\"table-wrapper\">\n      <TableContainer style={{ height: 325 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id}>\n                        {value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        labelRowsPerPage=\"Товаров на странице\"\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <div>Всего: {rows.map(item => item.price).reduce((a, b) => (a + b))}</div>\n    </Paper>\n  )\n}","import React, { useState } from 'react'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Box,\n  TextField,\n  Icon,\n  InputAdornment,\n  Button,\n  IconButton,\n  withStyles,\n  Badge,\n  Modal,\n} from '@material-ui/core';\n\nimport './NavBar.scss'\nimport { ShoppingCart } from '../ShoppingCart/ShoppingCart';\n\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge)\n\nexport const NavBar = () => {\n  const [focus, setFocus] = useState(false)\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const ShoppingCartWithRef = React.forwardRef((props, ref) => {\n    return (\n      <div tabIndex={-1} ref={ref} className=\"body-container-for-modal\">\n        {props.children}\n      </div>\n    )\n  })\n\n  const ref = React.createRef()\n\n  return (\n    <AppBar position=\"static\" className=\"nav-bar\" color=\"inherit\" component=\"nav\">\n      <Toolbar className=\"tool-bar\">\n        <Typography variant=\"h3\">LOGOtip</Typography>\n        <Box className=\"phones-wrapper\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<Icon>phone</Icon>}\n          >\n            +380 73 049 XX XX\n              </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            startIcon={<Icon>phone</Icon>}\n          >\n            +380 73 049 XX XX\n              </Button>\n        </Box>\n        <Box className=\"search-wrapper\">\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Поиск\"\n            onFocus={() => setFocus(true)}\n            onBlur={() => setFocus(false)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon color={focus ? \"primary\" : \"inherit\"}>search</Icon>\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  {focus ? <Button color=\"primary\" variant=\"contained\">Найти</Button> : <Icon></Icon>}\n                </InputAdornment>\n              )\n            }}\n          />\n        </Box>\n        <IconButton\n          aria-label=\"cart\"\n          onClick={handleOpen}\n        >\n          <StyledBadge badgeContent={4} color=\"secondary\">\n            <Icon>shopping_cart</Icon>\n          </StyledBadge>\n        </IconButton>\n      </Toolbar>\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        <ShoppingCartWithRef ref={ref}>\n            <ShoppingCart/>\n        </ShoppingCartWithRef>\n      </Modal>\n    </AppBar>\n  )\n}","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\n\n\nexport const setCurrentCategoryAction = category => {\n  return {\n    type: SET_CURRENT_CATEGORY,\n    payload: category\n  }\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\n\n\nexport const getProductsForClientRequestAction = category => {\n  return {\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\n    payload: category\n  }\n}\n\nexport const getProductsForClientSuccessAction = products => {\n  return {\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\n    payload: products\n  }\n}\n\nexport const getProductsForClientFailreAction = message => {\n  return {\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\n    payload: message \n  }\n}\n\nexport const getCategoriesForClientRequestAction = () => {\n  return {\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\n  }\n}\n\nexport const getCategoriesForClientSuccessAction = categories => {\n  return {\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\n    payload: categories\n  }\n}\n\nexport const getCategoriesForClientFailureAction = message => {\n  return {\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\n    payload: message\n  }\n}","import React from 'react'\nimport { CircularProgress, Paper } from '@material-ui/core'\n\n\nimport './Preloader.scss'\n\nconst Preloader = () => {\n  return (\n    <Paper className=\"preloader-wrapper\">\n      <CircularProgress />\n    </Paper>\n  )\n}\n\nexport default Preloader","import React, { useState, useEffect } from 'react'\nimport {\n  Typography,\n  Tab,\n  Tabs,\n  Box\n} from '@material-ui/core'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { setCurrentCategoryAction } from './action'\n\nimport './CategoriesList.scss'\nimport { getCategoriesForClientRequestAction } from '../../pages/Home.page/action'\nimport Preloader from '../Preloader/Preloader'\n\nconst CategoriesList = ({categories, setCurrentCategory, getCategoriesForClientRequest, loadingCategories }) => {\n  const [checkedCategory, setCheckCategory] = useState(0)\n\n  const changeHandler = event => {\n    setCheckCategory(event.currentTarget.tabIndex)\n    setCurrentCategory(categories[event.currentTarget.tabIndex].name)\n  }\n\n  useEffect(() => {\n    getCategoriesForClientRequest()\n  }, [getCategoriesForClientRequest])\n\n  if (loadingCategories) {\n    return (\n      <Preloader/>\n    )\n  } else {\n    return (\n      <Box className=\"tabs-wrapper\">\n        <Typography className=\"tabs-title\" variant=\"subtitle2\">Категория</Typography>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"fullWidth\"\n          value={checkedCategory}\n          onChange={changeHandler}\n          TabIndicatorProps={{ style: { left: 0, right: 'auto' } }}\n          label=\"Категория\"\n        >\n          {categories.map((item, index) => {\n            return (\n              <Tab\n                key={item._id}\n                type=\"button\"\n                label={\n                  <Typography\n                    variant={checkedCategory === index ? \"h6\" : \"body2\"}\n                    color={checkedCategory === index ? 'secondary' : 'initial'}\n                    component=\"p\"\n                  >\n                    {item.name}\n                  </Typography>\n                }\n                tabIndex={index}\n                value={index}\n              />\n            )\n          })}\n        </Tabs>\n      </Box>\n    )\n  } \n}\n\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.forClientState.categories,\n    loadingCategories: state.forClientState.loadingCategories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch),\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList)","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  Paper,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n  Grid,\n  Box,\n  Icon,\n  Button,\n} from '@material-ui/core'\nimport { Rating } from '@material-ui/lab'\nimport { useSnackbar } from 'notistack';\n\nimport './CardsList.scss'\nimport { connect } from 'react-redux';\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action';\nimport { bindActionCreators } from 'redux';\nimport Preloader from '../Preloader/Preloader';\n\n\nconst CardsList = ({ products, getProductsForClientRequest, currentCategory, loadingProducts }) => {\n  const [ratingValue, setRatinValue] = useState(3)\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ratingHandler = (event, newValue) => {\n    setRatinValue(+newValue)\n  }\n\n  const addToCartHandler = () => {\n    enqueueSnackbar('Добавлено в корзину')\n  }\n\n  useEffect(() => {\n    getProductsForClientRequest(currentCategory)\n  }, [currentCategory, getProductsForClientRequest])\n\n  if (loadingProducts) {\n    return (\n      <Preloader />\n    )\n  } else {\n    return (\n      <Paper className=\"cards-list\">\n        <Grid container spacing={3}>\n          {products.map(item => {\n            return (\n              <Grid item xs={4} key={item._id}>\n                <Card\n                  className=\"card\"\n                  variant=\"outlined\"\n                >\n                  <CardActionArea>\n                    <CardMedia\n                      className=\"card-img\"\n                      image={item.img}\n                      title={item.name}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {item.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {item.description}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions\n                    disableSpacing={true}\n                  >\n                    <Box component=\"div\">\n                      <Typography component=\"legend\" variant=\"caption\">Оценка: {ratingValue}</Typography>\n                      <Rating\n                        name=\"product-rating\"\n                        value={ratingValue}\n                        onChange={ratingHandler}\n                      />\n                    </Box>\n                    <Box component=\"div\" className=\"card-button-wrapper\">\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        aria-label=\"add to shopping cart\"\n                        onClick={addToCartHandler}\n                        endIcon={<Icon>shopping_cart</Icon>}\n                      >\n                        {item.price} $\n                      </Button>\n                    </Box>\n                  </CardActions>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Paper>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.forClientState.products,\n    loadingProducts: state.forClientState.loadingProducts,\n    currentCategory: state.currentCategoryState.currentCategory\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsList)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  Box,\n} from '@material-ui/core'\n\nimport CategoriesList from '../CategoriesList/CategoriesList'\nimport CardsList from '../CardsList/CardsList'\nimport Preloader from '../Preloader/Preloader'\n\nimport './Catalog.scss'\n\n\nconst Catalog = ({products, loadingProducts, loadingCategories}) => {\n  return (\n    <Box className=\"catalog-wrapper\">\n      <Grid\n        container\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Paper className=\"header\">\n            <Typography variant=\"h5\">Header and filter</Typography>\n          </Paper>\n        </Grid>\n        <Grid\n          item\n          xs={3}\n        >\n          <Paper className=\"filter\">\n            <Typography\n            className=\"products-counter\"\n            variant=\"h5\"\n            >\n              Товары ({ !products.length ? \"...\" : products.length})\n            </Typography>\n            <Box className=\"buttons-wrapper\">\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Популярное\n            </Button>\n            <Button\n              fullWidth\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Лучшие цены\n              </Button>\n            </Box>\n            <CategoriesList/>\n          </Paper>\n        </Grid>\n        <Grid\n          item\n          xs={9}\n        >\n          <CardsList/>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.forClientState.products\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, { useEffect } from 'react'\nimport { NavBar } from '../../components/NavBar/NavBar'\nimport Catalog from '../../components/Catalog/Catalog'\n\nimport { connect } from 'react-redux';\nimport { getProductsForClientRequestAction, getCategoriesForClientRequestAction } from './action';\nimport { bindActionCreators } from 'redux';\n\n\n\nconst HomePage = () => {\n\n  return  (\n    <>\n      <NavBar />\n      <Catalog />\n    </>\n  )\n}\n\nexport default HomePage","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const LOGOUT = 'LOGOUT'\n\nexport const registrationRequestAction = (form) => {\n  return {\n    type: REGISTRATION_REQUEST,\n    payload: form\n  }\n}\n\nexport const registrationSuccessAction = (massage) => {\n  return {\n    type: REGISTRATION_SUCCESS,\n    payload: massage\n  }\n}\n\nexport const registrationFailureAction = (massage) => {\n  return {\n    type: REGISTRATION_FAILURE,\n    payload: massage\n  }\n}\n\nexport const loginRequestAction = (form) => {\n  return {\n    type: LOGIN_REQUEST,\n    payload: form\n  }\n}\n\nexport const loginSuccessAction = (token) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token\n  }\n}\n\nexport const loginFailureAction = (massage) => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: massage\n  }\n}\n\n\nexport const logoutAction = () => {\n  return {\n    type: LOGOUT\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { registrationRequestAction, loginRequestAction } from './action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { TextField, Box, Button, Icon, Typography } from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\nimport './AuthForm.scss'\n\n\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [form, setForm] = useState(\n    { email: '', password: '' }\n  )\n\n  const changeInputHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const registerHandler = () => {\n    registrationRequest(form)\n  }\n\n  const loginHandler = () => {\n    loginRequest(form)\n  }\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n    }\n  }, [message])\n\n  return (\n    <div className=\"auth-page\">\n      <Typography variant=\"h3\" className=\"title\">\n        LOGOtip\n        <Typography variant=\"caption\">\n          админ\n        </Typography>\n      </Typography>\n      <Box className=\"container\">\n        <Box className=\"form-wrapper\">\n          <TextField\n            className=\"auth-input\"\n            id=\"email\"\n            label=\"email\"\n            variant=\"outlined\"\n            name=\"email\"\n            type=\"email\"\n            onChange={changeInputHandler}\n          />\n          <TextField\n            className=\"auth-input\"\n            id=\"password\"\n            label=\"password\"\n            variant=\"outlined\"\n            name=\"password\"\n            type=\"password\"\n            onChange={changeInputHandler}\n          />\n          <Box className=\"button-wrapper\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<Icon>forward</Icon>}\n              type=\"submit\"\n              onClick={loginHandler}\n              disabled={loading}\n            >\n              Войти\n          </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<Icon>add_box</Icon>}\n              type=\"submit\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Регистрация\n          </Button>\n          </Box>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nconst mapDispathToProps = (dispatch) => {\n  return {\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.authState.loading,\n    message: state.authState.message\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm);","import React from 'react'\nimport AuthForm from '../components/AuthForm/AuthForm'\n\nexport const AuthPage = () => {\n  return (\n    <AuthForm />\n  )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const AdminSettingsList = () => {\n\n  return (\n    <div className=\"admin-settings-list\">\n      <ul>\n        <li>\n          <NavLink to='/admin/products'>Список товаров</NavLink>\n          <NavLink to='/admin/categories'>Список категорий</NavLink>\n        </li>\n      </ul>\n    </div>\n  )\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\";\nimport { logoutAction } from \"../components/AuthForm/action\";\nimport {\n  Button,\n} from \"@material-ui/core\";\n\nconst AdminPanelPage = ({ logout }) => {\n  return (\n    <div className=\"admin-panel\">\n      <AdminSettingsList />\n      <Button onClick={logout}>Выйти</Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: bindActionCreators(logoutAction, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage);\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\n\nexport const getCategoryRequestAction = () => {\n  return {\n    type: GET_CATEGORIES_REQUEST\n  }\n}\nexport const getCategorySuccessAction = categories => {\n  return {\n    type: GET_CATEGORIES_SUCCESS,\n    payload: categories\n  }\n}\nexport const getCategoryFailureAction = message => {\n  return {\n    type: GET_CATEGORIES_FAILURE,\n    payload: message\n  }\n}\n\nexport const deleteCategoryRequestAction = id => {\n  return {\n    type: DEL_CATEGORY_REQUEST,\n    payload: id\n  }\n}\n\nexport const deleteCategorySuccessAction = message => {\n  return {\n    type: DEL_CATEGORY_SUCCESS,\n    payload: message\n  }\n}\n\nexport const deleteCategoryFailureAction = message => {\n  return {\n    type: DEL_CATEGORY_FAILURE,\n    payload: message\n  }\n}\n\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\n  return {\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\n    payload: {\n      id,\n      checked\n    }\n  }\n}\n\nexport const showCategoryOnWebSiteSuccessAction = message => {\n  return {\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\n    payload: message\n  }\n}\n\nexport const showCategoryOnWebSiteFailureAction = (message) => {\n  return {\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\n    payload: message\n  }\n}\n","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\n\nexport const addCategoryRequestAction = (name) => {\n  return {\n    type: ADD_CATEGORY_REQUEST,\n    payload: name\n  }\n}\n\nexport const addCategorySuccessAction = message => {\n  return {\n    type: ADD_CATEGORY_SUCCESS,\n    payload: message\n  }\n}\n\nexport const addCategoryFailureAction = (message) => {\n  return {\n    type: ADD_CATEGORY_FAILURE,\n    payload: message\n  }\n}\n","import React, { useState, useCallback, useEffect } from 'react'\n\n\nimport './CategoryCreator.scss'\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addCategoryRequestAction } from './action'\nimport { useSnackbar } from 'notistack'\n\nconst CategoryCreator = ({\n  message,\n  addCategoryRequest,\n  loading,\n  success,\n}) => {\n  const [category, setCategory] = useState({ name: '' })\n  const [isOpen, setIsOpen] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const changeInputHandler = event => {\n    setCategory({ name: event.target.value })\n  }\n  const modalOpenHandler = () => {\n    setIsOpen(true)\n  }\n  const modalCloseWrapper = (event) => {\n    if(event.currentTarget === event.target) {\n      setIsOpen(false)\n    }\n  }\n  const modalCloseHendler = () => {\n    setIsOpen(false)\n  }\n\n  const addCatogory = useCallback(() => {\n    addCategoryRequest(category.name)\n  }, [category.name])\n\n  useEffect(() => {\n    if (success) {\n      modalCloseHendler()\n      setCategory({name: ''})\n      \n    }\n  }, [success])\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n    }\n  }, [message])\n\n  return (\n    <Paper className=\"category-creator\">\n      <Button variant=\"outlined\" onClick={modalOpenHandler}>Добавить</Button>\n      <Modal\n        open={isOpen}\n        onClose={modalCloseHendler}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className=\"category-creator-body\" onClick={modalCloseWrapper}>\n          <FormControl\n            className=\"add-category-form\"\n            margin=\"dense\"\n            required\n            size=\"small\"\n          >\n            <FormHelperText>Добавление категории</FormHelperText>\n            <TextField\n              id=\"name\"\n              label=\"Название\"\n              variant=\"outlined\"\n              name=\"name\"\n              size=\"small\"\n              onChange={changeInputHandler}\n              value={category.name}\n              autoComplete=\"off\"\n            />\n            <Button variant=\"outlined\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={modalCloseHendler}>Закрыть</Button>\n          </FormControl>\n        </div>\n      </Modal>\n    </Paper>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.categoryCreatorState.message,\n    loading: state.categoryCreatorState.loading,\n    success: state.categoryCreatorState.success,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\n\nimport {\n  TableContainer,\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  CircularProgress,\n  IconButton,\n  Checkbox,\n  Icon,\n  Paper,\n  Breadcrumbs\n} from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nimport './Categories.scss'\nimport { useSnackbar } from 'notistack'\n\n\nconst BreadcrumbsCreator = [\n  {\n    name: 'Панель управления',\n    path: '/admin'\n  },\n  {\n    name: 'Категории',\n    path: '/admin/categories',\n    active: true\n  },\n]\n\nconst Categories = ({\n  categories,\n  getCategoryRequest,\n  deleteCategoryRequest,\n  showCategoryOnWebSiteRequest,\n  oneCategoryLoading,\n  loading,\n  message,\n}) => {\n  \n  const {enqueueSnackbar} = useSnackbar()\n\n  const getCategory = useCallback(\n    () => {\n      getCategoryRequest()\n    },\n    [categories],\n  )\n\n  const showCategoryOnWebSiteHendler = (id, checked) => {\n    showCategoryOnWebSiteRequest(id, checked)\n  }\n\n  useEffect(() => {\n    getCategory()\n  }, [])\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n    }\n  }, [message])\n\n  const Preloader = () => {\n    return (\n      <div className=\"preloader\">\n        <CircularProgress />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"categories\">\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n        {BreadcrumbsCreator.map(item => (\n          <NavLink key={item.name} to={item.path} className={item.active ? 'active-link link' : 'link' }>{item.name}</NavLink>\n        ))}\n      </Breadcrumbs>\n      <TableContainer className=\"table-container\" component={Paper}>\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\n          <TableHead className=\"table-headers\">\n            <TableRow>\n              <TableCell>id</TableCell>\n              <TableCell>Название категории</TableCell>\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\n              <TableCell align=\"center\">Удалить</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {categories.map(row => {\n              return (\n                <TableRow key={row._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row._id}\n                  </TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {(\n                      '123' === row._id\n                        ? <Preloader />\n                        : <Checkbox\n                        color=\"primary\"\n                        name={row._id}\n                        checked={row.show || false}\n                        onChange={(event) => {\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\n                        }}\n                        disabled={loading || oneCategoryLoading}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                    className=\"centered-btn\"\n                    onClick={() => {deleteCategoryRequest(row._id)}}\n                    disabled={loading || oneCategoryLoading}\n                  >\n                      <Icon>delete_outline</Icon>\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <CategoryCreator />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.categoriesState.message,\n    categories: state.categoriesState.categories,\n    loading: state.categoriesState.loading,\n    oneCategoryLoading: state.categoryCreatorState.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\nexport const CLEAR_FORM = 'CLEAR_FORM'\n\nexport const addProductRequestAction = form => {\n  return {\n    type: ADD_PRODUCT_REQUEST,\n    payload: form\n  }\n}\n\nexport const addProductSuccessAction = message => {\n  return {\n    type: ADD_PRODUCT_SUCCESS,\n    payload: message\n  }\n}\n\nexport const addProductFailureAction = message => {\n  return {\n    type: ADD_PRODUCT_FAILURE,\n    payload: message\n  }\n}\n\nexport const formCleanerAction = status => {\n  return {\n    type: CLEAR_FORM,\n    payload: status\n  }\n}","import React, { useState, useCallback, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\n\nimport './ProductCreator.scss'\nimport { bindActionCreators } from 'redux'\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\nimport { getCategoryRequestAction } from '../Categories/action'\nimport { useSnackbar } from 'notistack'\n\nconst ProductCreator = ({\n  message,\n  loading,\n  addProductRequest,\n  categories,\n  formCleaner,\n  success,\n  getCategoryRequest,\n  categoriesLoading,\n}) => {\n  const {enqueueSnackbar} = useSnackbar()\n  const [form, setForm] = useState(\n    {\n      name: '',\n      category: '',\n      amount: '',\n      img: '',\n      description: '',\n      price: '',\n    }\n  )\n\n  const changeInputHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const addProductHandler = () => {\n    addProductRequest(form)\n  }\n\n  const getCategories = useCallback(() => {\n    getCategoryRequest()\n  },[categories])\n\n  useEffect(() => {\n    getCategories()\n  }, [])\n\n  useEffect(() => {\n    formCleaner(false)\n    return () => {\n      setForm({\n        name: '',\n        category: '',\n        amount: '',\n        img: '',\n        description: '',\n        price: '',\n      })\n    }\n  }, [success])\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n    }\n  }, [message])\n\n  return (\n    <div className=\"product-creator\">\n      <Paper className=\"form-wrapper\">\n        <FormControl\n          className=\"add-product-form\"\n          margin=\"dense\"\n          required\n          size=\"small\"\n        >\n          <FormHelperText>Добавление товара</FormHelperText>\n          <Select\n            className=\"categories-select\"\n            value={form.category}\n            onChange={changeInputHandler}\n            name=\"category\"\n            displayEmpty\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={categoriesLoading}\n          >\n            <MenuItem value=\"\" disabled>\n              Выберите категорию\n            </MenuItem>\n            {categories.map(item => {\n              return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\n            })}\n          </Select>\n          <TextField\n            id=\"name\"\n            label=\"Название\"\n            variant=\"outlined\"\n            name=\"name\"\n            size=\"small\"\n            onChange={changeInputHandler}\n            value={form.name}\n          />\n          <TextField\n            id=\"amount\"\n            label=\"Колличество\"\n            variant=\"outlined\"\n            name=\"amount\"\n            size=\"small\"\n            onChange={changeInputHandler}\n            value={form.amount}\n          />\n          <TextField\n            id=\"price\"\n            label=\"Цена\"\n            variant=\"outlined\"\n            name=\"price\"\n            size=\"small\"\n            onChange={changeInputHandler}\n            value={form.price}\n          />\n          <TextField\n            id=\"description\"\n            label=\"Описание\"\n            variant=\"outlined\"\n            name=\"description\"\n            size=\"small\"\n            onChange={changeInputHandler}\n            value={form.description}\n          />\n          <TextField\n            id=\"img\"\n            label=\"Изображение (url)\"\n            variant=\"outlined\"\n            name=\"img\"\n            size=\"small\"\n            onChange={changeInputHandler}\n            value={form.img}\n          />\n          <Button type=\"submit\" variant=\"outlined\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\n        </FormControl>\n        <NavLink className=\"btn\" to=\"/admin/products\">Список продуктов</NavLink>\n      </Paper>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.productCreatorState.loading,\n    err: state.productCreatorState.err,\n    success: state.productCreatorState.success,\n    categories: state.categoriesState.categories,\n    categoriesLoading: state.categoriesState.loading,\n    message: state.productCreatorState.message\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\n\nexport const getProductsRequestAction = () => {\n  return {\n    type: GET_PRODUCTS_REQUEST\n  }\n}\n\nexport const getProductsSuccessAction = products => {\n  return {\n    type: GET_PRODUCTS_SUCCESS,\n    payload: products\n  }\n}\n\nexport const getProductsFailureAction = message => {\n  return {\n    type: GET_PRODUCTS_FAILURE,\n    payload: message\n  }\n}\n\nexport const showOnWebSiteRequestAction = (id, checked) => {\n  return {\n    type: SHOW_ON_WEB_SITE_REQUEST,\n    payload: {\n      id,\n      checked\n    }\n  }\n}\n\nexport const showOnWebSiteSuccessAction = message => {\n  return {\n    type: SHOW_ON_WEB_SITE_SUCCESS,\n    payload: message\n  }\n}\n\nexport const showOnWebSiteFailureAction = message => {\n  return {\n    type: SHOW_ON_WEB_SITE_FAILURE,\n    payload: message\n  }\n}\n\nexport const deleteProductRequestAction = id => {\n  return {\n    type: DEL_PRODUCT_REQUEST,\n    payload: id\n  }\n}\n\nexport const deleteProductSuccessAction = message => {\n  return {\n    type: DEL_PRODUCT_SUCCESS,\n    payload: message\n  }\n}\n\nexport const deleteProductFailureAction = message => {\n  return {\n    type: DEL_PRODUCT_FAILURE,\n    payload: message\n  }\n}","import React, { useEffect, useCallback, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport {\n  getProductsRequestAction,\n  showOnWebSiteRequestAction,\n  deleteProductRequestAction,\n} from './action'\n\nimport {\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  InputAdornment,\n  Input,\n  Icon,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n  Checkbox,\n  Paper\n} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\nimport './ProductsList.scss'\n\n\nconst ProductsList = ({\n  loading,\n  products,\n  getProductsRequest,\n  showOnWebSiteRequest,\n  oneProductLoading,\n  deleteProductRequest,\n  message\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [value, setValue] = useState('')\n\n  const getProducts = useCallback(() => {\n    getProductsRequest()\n  }, [])\n\n  useEffect(() => {\n    getProducts()\n  }, [])\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message)\n    }\n  }, [message])\n\n  const inputFilterHandler = (event) => {\n    setValue(event.target.value)\n  }\n\n  const checkboxChangeHendler = (event) => {\n    showOnWebSiteRequest(event.target.name, event.target.checked)\n  }\n\n  const Preloader = () => {\n    return (\n      <div className=\"preloader\">\n        <CircularProgress />\n      </div>\n    )\n  }\n\n  const TableCreator = () => {\n    return (\n      <TableContainer className=\"table-container\" component={Paper}>\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\n          <TableHead className=\"table-headers\">\n            <TableRow>\n              <TableCell>id</TableCell>\n              <TableCell >Имя товара</TableCell>\n              <TableCell >Количество</TableCell>\n              <TableCell >Цена</TableCell>\n              <TableCell >Описание</TableCell>\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\n              <TableCell align=\"center\">Удалить</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.filter(row => row.name.match(value)).map(row => {\n              return (\n                <TableRow key={row._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row._id}\n                  </TableCell>\n                  <TableCell >{row.name}</TableCell>\n                  <TableCell >{row.amount}</TableCell>\n                  <TableCell >{row.price}</TableCell>\n                  <TableCell >{row.description}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      onClick={() => { deleteProductRequest(row._id) }}\n                      disabled={oneProductLoading === row.id}\n                    >\n                      <Icon>clear</Icon>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n  }\n\n  return (\n    <div className=\"products-list\">\n      <FormControl>\n        <InputLabel htmlFor=\"input-with-icon-search\">Введите имя товара</InputLabel>\n        <Input\n          id=\"input-with-icon-search\"\n          onChange={inputFilterHandler}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Icon>search</Icon>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      {loading ? <Preloader /> : <TableCreator />}\n      <NavLink\n        to=\"/admin/products/add\"\n        color=\"primary\"\n        variant=\"outlined\"\n      >Добавить</NavLink>\n      <NavLink\n        to=\"/admin\"\n        variant=\"outlined\"\n      >Панель управления</NavLink>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.productsState.loading,\n    products: state.productsState.products,\n    message: state.productsState.message,\n    oneProductLoading: state.productsState.oneProductLoading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList)","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport HomePage from '../pages/Home.page/Home.page'\nimport { AuthPage } from '../pages/Auth.page'\nimport AdminPanelPage from '../pages/AdminPanel.page'\nimport Categories from '../components/Categories/Categories'\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\nimport ProductsList from '../components/ProductsList/ProductsList'\nimport { connect } from 'react-redux'\n\nconst Routes = ({isAuth}) => {\n  return (\n    <Switch>\n      <Route path='/admin' exact component={ isAuth ? AdminPanelPage : AuthPage} />\n      <Route path='/admin/products' exact component={ isAuth ? ProductsList : AuthPage} />\n      <Route path='/admin/products/add' exact component={ isAuth ? ProductCreator : AuthPage} />\n      <Route path='/admin/categories' exact component={ isAuth ? Categories : AuthPage} />\n      <Route path='/' exact component={HomePage} />\n      <Redirect to='/' />\n    </Switch>\n  )\n} \nconst mapStateToProps = state => {\n  return {\n    isAuth: state.authState.isAuth\n  }\n}\n\nexport default connect(mapStateToProps)(Routes)","import {\n  LOGOUT,\n  REGISTRATION_REQUEST,\n  REGISTRATION_SUCCESS,\n  REGISTRATION_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE\n} from \"./action\"\n\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\n\nconst initialState = {\n  form: {},\n  loading: false,\n  token,\n  isAuth: (token ? true : false),\n  message: null\n}\n\nexport const authState = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTRATION_REQUEST:{\n      return {\n        ...state,\n        form: action.payload,\n        loading: true,\n        message: null\n      }\n    }\n    case REGISTRATION_SUCCESS: {\n      return {\n        ...state,\n        form: {\n          email: '',\n          password: ''\n        },\n        loading: false,\n        message: action.payload\n      }\n    } \n    case REGISTRATION_FAILURE: {\n      return {\n        ...state,\n        form: {\n          email: '',\n          password: ''\n        },\n        loading: false,\n        message: action.payload\n      }\n    }     \n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        form: {\n          email: '',\n          password: ''\n        },\n        loading: true,\n        message: null\n      }\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        form: {\n          email: '',\n          password: ''\n        },\n        loading: false,\n        message: null,\n        token: action.payload,\n        isAuth: true\n      }\n    }\n    case LOGIN_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    case LOGOUT: {\n      return {\n        ...state,\n        token: null,\n        isAuth: false,\n        form: {\n          email: '',\n          password: '',\n        },\n        message: null\n      }\n    }\n    default: return state;\n  }\n}","import {\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_REQUEST,\n  GET_PRODUCTS_FAILURE,\n  SHOW_ON_WEB_SITE_SUCCESS,\n  SHOW_ON_WEB_SITE_REQUEST,\n  SHOW_ON_WEB_SITE_FAILURE,\n  DEL_PRODUCT_REQUEST,\n  DEL_PRODUCT_SUCCESS,\n  DEL_PRODUCT_FAILURE\n} from \"./action\";\n\n\nconst initialState = {\n  oneProductLoading: '',\n  loading: false,\n  products: [],\n  message: null\n}\n\nexport const productsState = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS_REQUEST:\n      return {...state, loading: true, message: null}\n    case GET_PRODUCTS_SUCCESS: \n      return {...state, loading: false, products: action.payload}\n    case GET_PRODUCTS_FAILURE: \n      return {...state, loading: false, products: [], message: action.payload}\n    case SHOW_ON_WEB_SITE_REQUEST: \n      return {...state, oneProductLoading: action.payload.id, message: null}\n    case SHOW_ON_WEB_SITE_SUCCESS: \n      return {...state, oneProductLoading: '', message: action.payload}\n    case SHOW_ON_WEB_SITE_FAILURE: \n      return {...state, oneProductLoading: '', message: action.payload}\n    case DEL_PRODUCT_REQUEST:\n      return {...state, oneProductLoading: action.payload.id, message: null}\n    case DEL_PRODUCT_SUCCESS: \n      return {...state, oneProductLoading: '', message: action.payload}\n    case DEL_PRODUCT_FAILURE: \n      return {...state, oneProductLoading: '', message: action.payload}\n    default: \n      return { ...state }\n  } \n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\n\n\nconst initialState = {\n  loading: false,\n  message: null,\n  success: false\n}\n\nexport const productCreatorState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        message: null\n      }\n    }\n    case ADD_PRODUCT_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload,\n        success: true,\n      }\n    }\n    case ADD_PRODUCT_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    case CLEAR_FORM: {\n      return {\n        ...state,\n        success: action.status\n      }\n    }\n    default:\n      return { ...state }\n  }\n}","import {\n  GET_CATEGORIES_REQUEST,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAILURE,\n  DEL_CATEGORY_REQUEST,\n  DEL_CATEGORY_SUCCESS,\n  DEL_CATEGORY_FAILURE,\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\n} from \"./action\"\n\n\n\nconst initialState = {\n  categories: [],\n  loading: false,\n  message: null\n}\n\nexport const categoriesState = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CATEGORIES_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        message: null\n      }\n    }\n    case GET_CATEGORIES_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        err: null,\n        categories: action.payload,\n        message: null\n      }\n    }\n    case GET_CATEGORIES_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload,\n      }\n    }\n    case DEL_CATEGORY_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        message: null\n      }\n    }\n    case DEL_CATEGORY_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    case DEL_CATEGORY_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        message: null\n      }\n    }\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      }\n    }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\n\n\nconst initialState = {\n  loading: false,\n  message: null,\n  success: false\n}\n\nexport const categoryCreatorState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CATEGORY_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        message: null,\n        success: false\n      }\n    }\n    case ADD_CATEGORY_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload,\n        success: true\n      }\n    }\n    case ADD_CATEGORY_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        message: action.payload,\n        success: false\n      }\n    }\n    default:\n      return { ...state }\n  }\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\n\n\nconst initialState = {\n  currentCategory: 'Популярно'\n}\n\nexport const currentCategoryState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_CATEGORY: {\n      return {\n        ...state,\n        currentCategory: action.payload\n      }\n    }\n    default: return state\n  }\n}","import {\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\n  GET_CATEGORIES_FOR_CLIENT_FAILURE\n} from \"./action\"\n\n\nconst initialState = {\n  categories: [],\n  products: [],\n  loadingProducts: false,\n  loadingCategories: false,\n  message: null\n}\n\nexport const forClientState = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\n      return {\n        ...state,\n        loadingProducts: true,\n        message: null,\n        products: []\n      }\n    }\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\n      return {\n        ...state,\n        loadingProducts: false,\n        message: null,\n        products: action.payload\n      }\n    }\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\n      return {\n        ...state,\n        loadingProducts: false,\n        message: action.payload,\n        products: []\n      }\n    }\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\n      return {\n        ...state,\n        loadingCategories: true,\n        message: null,\n        categories: []\n      }\n    }\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\n      return {\n        ...state,\n        loadingCategories: false,\n        categories: action.payload,\n        message: null,\n      }\n    }\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\n      return {\n        ...state,\n        loadingCategories: false,\n        categories: [],\n        message: action.payload\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}","import { combineReducers } from 'redux'\nimport { authState } from '../components/AuthForm/reducer'\nimport { productsState } from '../components/ProductsList/reducer'\nimport { productCreatorState } from '../components/ProductCreator/reducer'\nimport { categoriesState } from '../components/Categories/reducer'\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\nimport { currentCategoryState } from '../components/CategoriesList/reducer'\nimport { forClientState } from '../pages/Home.page/reducer'\n\n\nexport const rootReducer = combineReducers({\n  authState,\n  productsState,\n  productCreatorState,\n  categoriesState,\n  categoryCreatorState,\n  forClientState,\n  currentCategoryState,\n})","import {\n  takeLatest,\n  put,\n  call\n} from 'redux-saga/effects';\nimport {\n  registrationSuccessAction,\n  REGISTRATION_REQUEST,\n  registrationFailureAction,\n  LOGIN_REQUEST,\n  loginSuccessAction,\n  loginFailureAction,\n  LOGOUT\n} from './action';\n\n\nconst fetchRegister = form => {\n  return fetch('/api/auth/register', {\n    method: 'POST',\n    body: JSON.stringify({...form}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nconst fetchLogin = (form) => {\n  return fetch('/api/auth/login', {\n    method: 'POST',\n    body: JSON.stringify({...form}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nfunction* registrationWorker(action) {\n  try {\n    const data = yield call(fetchRegister, action.payload)\n    if(data.status) {\n      yield put(registrationSuccessAction(data.message))\n    } else {\n      yield put(registrationFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(registrationFailureAction(e.message))\n  }\n}\n\nfunction* loginWorker(action) {\n  try {\n    const data = yield call(fetchLogin, action.payload)\n    if (data.status) {\n      yield put(loginSuccessAction(data.token))\n      yield sessionStorage.setItem('token', data.token)\n    } else {\n      yield put(loginFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(loginFailureAction(e.message))\n  }\n}\n\nfunction* logoutWorker() {\n  yield sessionStorage.removeItem('token')\n}\n\nfunction* authWatcher() {\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\n  yield takeLatest(LOGOUT, logoutWorker)\n}\n\nexport default authWatcher\n","import {\n  takeLatest,\n  put,\n  call,\n} from 'redux-saga/effects';\nimport {\n  GET_PRODUCTS_REQUEST,\n  getProductsSuccessAction,\n  getProductsFailureAction,\n  \n  SHOW_ON_WEB_SITE_REQUEST,\n  showOnWebSiteSuccessAction,\n  showOnWebSiteFailureAction,\n  \n  DEL_PRODUCT_REQUEST,\n  deleteProductSuccessAction,\n  deleteProductFailureAction\n} from './action';\n\nconst fetchProducts = () => {\n  return fetch('/api/products/get-products', {\n    method: 'GET',\n  }).then(response => response.json())\n}\n\nconst fetchShowOnWebSite = (payload) => {\n  return fetch('/api/products/show', {\n    method: 'POST',\n    body: JSON.stringify({...payload}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nconst fetchDelProduct = (id) => {\n  return fetch('/api/products/del', {\n    method: 'POST',\n    body: JSON.stringify({id}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nfunction* getProductsWorker() {\n  try {\n    const data = yield call(fetchProducts)\n    yield put(getProductsSuccessAction(data))\n  } catch (e) {\n    yield put(getProductsFailureAction(e))\n  }\n}\n\nfunction* showOnWebSideWorker(action) {\n  try {\n    const data = yield call(fetchShowOnWebSite, action.payload)\n    if(data.status) {\n      yield put(showOnWebSiteSuccessAction(data.message))\n      yield put(getProductsSuccessAction(data.products))\n    } else {\n      yield put(showOnWebSiteFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(showOnWebSiteFailureAction(e.message))\n  }\n}\n\nfunction* delProductWorker(action) {\n  try {\n    const data = yield call(fetchDelProduct, action.payload)\n    if (data.status) {\n      yield put(deleteProductSuccessAction(data.message))\n      yield put(getProductsSuccessAction(data.products))\n    } else {\n      yield put(getProductsFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(deleteProductFailureAction(e.message))\n  }\n}\n\nfunction* productsWatcher() {\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\n}\n\nexport default productsWatcher\n","import {\n  takeLatest,\n  put,\n  call,\n} from 'redux-saga/effects';\nimport {\n  ADD_PRODUCT_REQUEST,\n  addProductSuccessAction,\n  addProductFailureAction\n} from './action';\n\n\nconst fetchAddNewProduct = (form) => {\n  return fetch('/api/products/add', {\n    method: 'POST',\n    body: JSON.stringify({...form}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nfunction* addProductWorker(action) {\n  try {\n    const data = yield call(fetchAddNewProduct, action.payload)\n    if (data.status) {\n      yield put(addProductSuccessAction(data.message))\n    } \n    if (data.errors) {\n      yield put(addProductFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(addProductFailureAction(e.message))\n  }\n}\n\nfunction* addProductWatcher() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\n}\n\nexport default addProductWatcher","import {\n  takeLatest,\n  put,\n  call,\n} from 'redux-saga/effects';\nimport {\n GET_CATEGORIES_REQUEST,\n getCategorySuccessAction,\n getCategoryFailureAction,\n DEL_CATEGORY_REQUEST,\n deleteCategoryFailureAction,\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\n showCategoryOnWebSiteFailureAction,\n showCategoryOnWebSiteSuccessAction,\n deleteCategorySuccessAction\n} from './action';\n\nconst fetchCategories = () => {\n  return fetch('/api/categories/get', {\n    method: 'GET'\n  }).then(res => res.json())\n}\n\nconst fetchDeleteCategory = (id) => {\n  return fetch('/api/categories/del', {\n    method: 'POST',\n    body: JSON.stringify({id}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\n\nconst fetchShowCategoryOnWebSite = (payload) => {\n  return fetch('/api/categories/show', {\n    method: 'POST',\n    body: JSON.stringify({...payload}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nfunction* getCategoriesWorker () {\n  try {\n    const data = yield call(fetchCategories)\n    yield put(getCategorySuccessAction(data))\n  } catch (e) {\n    yield put(getCategoryFailureAction(e.message))\n  }\n}\n\nfunction* delCategoryWorker(action) {\n  try {\n    const data = yield call(fetchDeleteCategory, action.payload)\n    if (data.status) {\n      yield put(getCategorySuccessAction(data.categories))\n      yield put(deleteCategorySuccessAction(data.message))\n    } else {\n      yield put(deleteCategoryFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(deleteCategoryFailureAction(e.message))\n  }\n }\n\n function* showCategoryOnWebSiteWorker(action) {\n   try {\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\n    if (data.status) {\n      yield put(getCategorySuccessAction(data.categories))\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\n    } else {\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\n    }\n   } catch (e) {\n    yield put(showCategoryOnWebSiteFailureAction(e.message))\n   }\n }\n\nfunction* categoriesWatcher() {\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\n}\n\nexport default categoriesWatcher","import {\n  takeLatest,\n  put,\n  call,\n} from 'redux-saga/effects';\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\nimport { getCategorySuccessAction } from '../Categories/action';\n\nconst fetchAddNewCategory = (name) => {\n  return fetch('/api/categories/add', {\n    method: 'POST',\n    body: JSON.stringify({name}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(response => response.json())\n}\n\nfunction* addCategoryWorker(action) {\n  try {\n    const data = yield call(fetchAddNewCategory, action.payload)\n    if (data.status) {\n      yield put(getCategorySuccessAction(data.categories))\n      yield put(addCategorySuccessAction(data.message))\n    } else {\n      yield put(addCategoryFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(addCategoryFailureAction(e.message))\n  }\n}\n\nfunction* addCategoryWatcher() {\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\n}\n\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\n\n\nconst fetchProductsForClient = category => {\n  return fetch('/api/products/get-products-for-clients', {\n    method: 'POST',\n    body: JSON.stringify({category}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nconst fetchCategoriesForClient = () => {\n  return fetch('api/categories/get-for-client').then(res => res.json())\n}\n\nfunction* getProductsForClientWorker (action) {\n  try {\n    const data = yield call(fetchProductsForClient, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction(e.message))\n  }\n}\n\nfunction* getCategoriesForClientWorker () {\n  try {\n    const data = yield call(fetchCategoriesForClient)\n    if(data.status) {\n      yield put(getCategoriesForClientSuccessAction(data.categories))\n    } else {\n      yield put(getCategoriesForClientFailureAction(data.message))\n    }\n  } catch (e) {\n    yield put(getCategoriesForClientFailureAction(e.message))\n  }\n}\n\nfunction* ForClientWatcher () {\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\n}\n\nexport default ForClientWatcher","import { all } from 'redux-saga/effects';\nimport authWatcher from '../components/AuthForm/saga'\nimport productsWatcher from '../components/ProductsList/saga'\nimport addProductWatcher from '../components/ProductCreator/saga'\nimport categoriesWatcher from '../components/Categories/saga';\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\nimport ForClientWatcher from '../pages/Home.page/saga'\n\n\nexport function* rootSaga() {\n  yield all([\n    authWatcher(),\n    productsWatcher(),\n    addProductWatcher(),\n    categoriesWatcher(),\n    addCategoryWatcher(),\n    ForClientWatcher(),\n  ]);\n}\n","import { rootReducer } from '../reducers/rootReducer'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootSaga } from '../sagas/rootSaga'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst sagasMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(sagasMiddleware))\n)\n\nsagasMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\nimport Routes from './routes/routes'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './store/store'\nimport { orange, blue } from '@material-ui/core/colors';\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  responsiveFontSizes\n} from '@material-ui/core';\nimport { ruRU } from '@material-ui/core/locale'\nimport { SnackbarProvider } from 'notistack'\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[800]\n    },\n    secondary: {\n      main: orange[800]\n    },\n  },\n}, ruRU)\n\ntheme = responsiveFontSizes(theme)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider maxSnack={5} autoHideDuration={2000}>\n          <Router>\n            <Routes />\n          </Router>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}