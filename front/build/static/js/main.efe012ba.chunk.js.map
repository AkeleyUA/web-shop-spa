{"version":3,"sources":["components/ShoppingCart/ShoppingCart.js","components/CategoriesList/action.js","pages/Home.page/action.js","components/Preloader/Preloader.js","components/CategoriesList/CategoriesList.js","components/NavBar/adction.js","components/NavBar/NavBar.js","components/ToggleButton/action.js","components/ToggleButton/ToggleButton.js","components/RatingBurron/RatingBurron.js","components/CardsList/CardsList.js","components/Catalog/Catalog.js","components/ToUpButton/ToUpButton.js","pages/Home.page/Home.page.js","components/AuthForm/action.js","components/AuthForm/AuthForm.js","pages/Auth.page.js","pages/Developer.page.js","components/AdminSettingsList/AdminSettingsList.js","pages/AdminPanel.page.js","components/Categories/action.js","components/CategoryCreator/action.js","components/CategoryCreator/CategoryCreator.js","components/Categories/Categories.js","components/ProductCreator/action.js","components/ProductCreator/ProductCreator.js","components/ProductsList/action.js","components/ProductsList/ProductsList.js","components/AdminDashboard/AdminDashboard.js","routes/routes.js","components/AuthForm/reducer.js","components/ProductsList/reducer.js","components/ProductCreator/reducer.js","components/Categories/reducer.js","components/CategoryCreator/reducer.js","components/CategoriesList/reducer.js","pages/Home.page/reducer.js","components/NavBar/reducer.js","components/ToggleButton/reducer.js","reducers/rootReducer.js","components/AuthForm/saga.js","components/ProductsList/saga.js","components/ProductCreator/saga.js","components/Categories/saga.js","components/CategoryCreator/saga.js","pages/Home.page/saga.js","components/NavBar/saga.js","sagas/rootSaga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","cart","shoppingCartState","dispatch","useState","page","setPage","rowsPerPage","setRowsPerPage","columns","id","label","Paper","style","width","className","TableContainer","height","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","slice","row","hover","role","tabIndex","_id","value","TablePagination","rowsPerPageOptions","component","count","length","labelRowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","target","prices","item","price","reduce","a","b","total","setCurrentCategoryAction","category","type","payload","getProductsForClientRequestAction","getProductsForClientSuccessAction","products","getProductsForClientFailreAction","message","getCategoriesForClientRequestAction","getCategoriesForClientFailureAction","clearProductsMessageAction","Preloader","CircularProgress","categories","forClientState","loadingCategories","currentCategory","currentCategoryState","setCurrentCategory","bindActionCreators","getCategoriesForClientRequest","useEffect","List","ListItem","name","Button","fullWidth","classes","variant","onClick","color","endIcon","Icon","Typography","setFilterValueAction","setFilterValue","clearProductsMessage","enqueueSnackbar","useSnackbar","focus","setFocus","open","setOpen","menuOpen","setMenuOpen","anchorEl","setAnchorEl","setValue","ShoppingCartWithRef","React","forwardRef","props","ref","children","MenuItemsWithRef","createRef","AppBar","position","Toolbar","Hidden","lgUp","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","paper","smDown","mdDown","Box","startIcon","FormControl","TextField","onChange","onFocus","onBlur","InputProps","endAdornment","InputAdornment","Badge","badgeContent","Modal","BackdropProps","display","justifyContent","addToShoppingCartAction","product","delFromShoppingCartAction","addToCart","delFromCart","selected","setSelected","find","RatingButton","ratingValue","setRatinValue","Rating","newValue","loadingProducts","getProductsForClientRequest","Grid","container","spacing","xs","sm","md","lg","Card","CardActionArea","CardMedia","image","img","title","CardContent","gutterBottom","description","CardActions","disableSpacing","ToUpButton","show","setShow","scrollHandler","document","documentElement","scrollTop","window","addEventListener","removeEventListener","Zoom","timeout","in","unmountOnExit","Fab","scroll","top","behavior","HomePage","registrationRequestAction","form","registrationFailureAction","massage","loginRequestAction","loginSuccessAction","token","loginFailureAction","logoutAction","loading","authState","registrationRequest","loginRequest","email","password","err","setErr","setForm","changeInputHandler","popperHandler","Popper","placement","transition","TransitionProps","Fade","justify","alignContent","error","inputProps","required","ButtonGroup","disabled","AuthPage","DeveloperPage","settingsList","path","icon","listItem","root","listIcon","divider","CustomButton","to","activeOnlyWhenExact","math","useRouteMatch","exact","isExact","ListItemIcon","ListItemText","AdminSettingsList","Drawer","elevation","Divider","light","CustomLink","textDecoration","logout","location","console","log","findName","pathname","margin","undefined","padding","AdminRoutes","getCategoryRequestAction","getCategorySuccessAction","deleteCategoryRequestAction","deleteCategoryFailureAction","showCategoryOnWebSiteRequestAction","checked","showCategoryOnWebSiteFailureAction","addCategoryRequestAction","addCategoryFailureAction","categoryCreatorState","success","addCategoryRequest","setCategory","isOpen","setIsOpen","modalCloseHendler","addCatogory","useCallback","aria-labelledby","aria-describedby","size","FormHelperText","autoComplete","BreadcrumbsCreator","active","categoriesState","oneCategoryLoading","getCategoryRequest","deleteCategoryRequest","showCategoryOnWebSiteRequest","getCategory","Breadcrumbs","separator","align","scope","Checkbox","addProductRequestAction","addProductFailureAction","formCleanerAction","status","productCreatorState","categoriesLoading","addProductRequest","addProductFailure","formCleaner","amount","getCategories","Select","displayEmpty","MenuItem","getProductsRequestAction","getProductsSuccessAction","getProductsFailureAction","showOnWebSiteRequestAction","showOnWebSiteFailureAction","deleteProductRequestAction","deleteProductFailureAction","productsState","oneProductLoading","getProductsRequest","showOnWebSiteRequest","deleteProductRequest","getProducts","checkboxChangeHendler","TableCreator","filter","match","InputLabel","htmlFor","Input","startAdornment","AdminDashboard","border","mapStateToProps","isAuth","Routes","AdminPanelPage","ProductsList","ProductCreator","Categories","sessionStorage","getItem","initialState","localStorage","JSON","parse","rootReducer","combineReducers","action","filterState","registrationWorker","loginWorker","logoutWorker","authWatcher","fetchRegister","fetch","method","body","stringify","headers","then","response","json","fetchLogin","call","data","put","setItem","removeItem","takeLatest","getProductsWorker","showOnWebSideWorker","delProductWorker","productsWatcher","fetchProducts","fetchShowOnWebSite","fetchDelProduct","addProductWorker","addProductWatcher","fetchAddNewProduct","errors","getCategoriesWorker","delCategoryWorker","showCategoryOnWebSiteWorker","categoriesWatcher","fetchCategories","res","fetchDeleteCategory","fetchShowCategoryOnWebSite","addCategoryWorker","addCategoryWatcher","fetchAddNewCategory","getProductsForClientWorker","getCategoriesForClientWorker","forClientWatcher","fetchProductsForClient","fetchCategoriesForClient","getFilteredProductsWorker","filterWatcher","fetchFilteredProducts","filterValue","rootSaga","all","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","theme","createMuiTheme","palette","primary","main","blue","secondary","orange","ruRU","responsiveFontSizes","App","ThemeProvider","maxSnack","autoHideDuration","anchorOrigin","horizontal","vertical","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.efe012ba.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nimport './ShoppingCart.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nconst ShoppingCart = ({ cart }) => {\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(5)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  const total = () => {\r\n    const prices = cart.map(item => item.price)\r\n    if (prices.length > 0) {\r\n      return prices.reduce((a, b) => a + b)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      id: 'name',\r\n      label: \"Название\",\r\n    },\r\n    {\r\n      id: 'price',\r\n      label: \"Цена\",\r\n    },\r\n    {\r\n      id: 'delete',\r\n      label: \"Удалить\",\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Paper style={{ width: \"100%\" }} className=\"table-wrapper\">\r\n      <TableContainer style={{ height: 325 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cart.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={cart.length}\r\n        rowsPerPage={rowsPerPage}\r\n        labelRowsPerPage=\"Товаров на странице\"\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <div>Всего: {total()}</div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","export const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n\r\nexport const setCurrentCategoryAction = category => {\r\n  return {\r\n    type: SET_CURRENT_CATEGORY,\r\n    payload: category\r\n  }\r\n}","export const GET_PRODUCTS_FOR_CLIENT_REQUEST = 'GET_PRODUCTS_FOR_CLIENT_REQUEST'\r\nexport const GET_PRODUCTS_FOR_CLIENT_SUCCESS = 'GET_PRODUCTS_FOR_CLIENT_SUCCESS'\r\nexport const GET_PRODUCTS_FOR_CLIENT_FAILURE = 'GET_PRODUCTS_FOR_CLIENT_FAILURE'\r\nexport const GET_CATEGORIES_FOR_CLIENT_REQUEST ='GET_CATEGORIES_FOR_CLIENT_REQUEST'\r\nexport const GET_CATEGORIES_FOR_CLIENT_SUCCESS ='GET_CATEGORIES_FOR_CLIENT_SUCCESS'\r\nexport const GET_CATEGORIES_FOR_CLIENT_FAILURE ='GET_CATEGORIES_FOR_CLIENT_FAILURE'\r\nexport const CLEAR_PRODUCTS_MESSAGE = 'CLEAR_PRODUCTS_MESSAGE'\r\n\r\n\r\nexport const getProductsForClientRequestAction = category => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n    payload: category\r\n  }\r\n}\r\n\r\nexport const getProductsForClientSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsForClientFailreAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n    payload: message \r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientSuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\n\r\nexport const getCategoriesForClientFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const clearProductsMessageAction = () => {\r\n  return {\r\n    type: CLEAR_PRODUCTS_MESSAGE\r\n  }\r\n}","import React from 'react'\r\nimport { CircularProgress, Paper } from '@material-ui/core'\r\n\r\n\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <Paper className=\"preloader-wrapper\">\r\n      <CircularProgress />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { setCurrentCategoryAction } from './action'\r\n\r\nimport './CategoriesList.scss'\r\nimport { getCategoriesForClientRequestAction } from '../../pages/Home.page/action'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst CategoriesList = ({ categories, setCurrentCategory, getCategoriesForClientRequest, loadingCategories, currentCategory }) => {\r\n\r\n  useEffect(() => {\r\n    getCategoriesForClientRequest()\r\n  }, [getCategoriesForClientRequest])\r\n\r\n  if (loadingCategories) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  } else {\r\n    return (\r\n      <List className=\"categories-list\">\r\n        {categories.map((item) => (\r\n          <ListItem key={item.name}>\r\n            <Button\r\n              fullWidth\r\n              classes={{\r\n                fullWidth: (currentCategory === item.name ? 'full-width-btn active' : 'full-width-btn')\r\n              }}\r\n              variant='text'\r\n              onClick={() => setCurrentCategory(item.name)}\r\n              color={currentCategory === item.name ? 'secondary' : 'default'}\r\n              endIcon={currentCategory === item.name ? <Icon>beenhere</Icon> : null}\r\n            >\r\n              <Typography variant=\"button\">{item.name}</Typography>\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    categories: state.forClientState.categories,\r\n    loadingCategories: state.forClientState.loadingCategories,\r\n    currentCategory: state.currentCategoryState.currentCategory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentCategory: bindActionCreators(setCurrentCategoryAction, dispatch),\r\n    getCategoriesForClientRequest: bindActionCreators(getCategoriesForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList)","export const SET_FILTER_VALUE = 'SET_FILTER_VALUE'\n\nexport const setFilterValueAction = value => {\n  return {\n    type: SET_FILTER_VALUE,\n    payload: value\n  }\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Icon,\r\n  InputAdornment,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  Modal,\r\n  Hidden,\r\n  Menu,\r\n  FormControl,\r\n} from '@material-ui/core';\r\n\r\nimport './NavBar.scss'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport CategoriesList from '../CategoriesList/CategoriesList';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setFilterValueAction } from './adction';\r\nimport { useSnackbar } from 'notistack'\r\nimport { clearProductsMessageAction } from '../../pages/Home.page/action';\r\n\r\n\r\nconst NavBar = ({ setFilterValue, message, clearProductsMessage, cart }) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [focus, setFocus] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [value, setValue] = useState('')\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n      clearProductsMessage()\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  const handleMenuOpen = event => {\r\n    setMenuOpen(true)\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const searchHandler = () => {\r\n    setFilterValue(value)\r\n  }\r\n\r\n  const ShoppingCartWithRef = React.forwardRef((props, ref) => {\r\n    return (\r\n      <div tabIndex={-1} ref={ref} className=\"body-container-for-modal\">\r\n        {props.children}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const MenuItemsWithRef = React.forwardRef((props, ref) => {\r\n    return (\r\n      <div ref={ref} className=\"body-for-menu-items\">\r\n        {props.children}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const ref = React.createRef()\r\n\r\n  return (\r\n    <AppBar position=\"static\" className=\"nav-bar\" color=\"inherit\" component=\"nav\">\r\n      <Toolbar className=\"tool-bar\">\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenuOpen}\r\n          >\r\n            <Icon>{menuOpen ? 'close' : 'menu'}</Icon>\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            keepMounted\r\n            open={menuOpen}\r\n            onClose={handleMenuClose}\r\n            classes={{\r\n              paper: \"mobile-menu\"\r\n            }}\r\n            anchorEl={anchorEl}\r\n          >\r\n            <MenuItemsWithRef ref={ref}>\r\n              <CategoriesList />\r\n            </MenuItemsWithRef>\r\n          </Menu>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <Typography variant=\"h3\">LOGOtip</Typography>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Box className=\"phones-wrapper\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 049 XX XX\r\n              </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Icon>phone</Icon>}\r\n            >\r\n              +380 73 049 XX XX\r\n              </Button>\r\n          </Box>\r\n        </Hidden>\r\n        <FormControl\r\n          className=\"search-wrapper\">\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Поиск\"\r\n            onChange={inputFilterHandler}\r\n            onFocus={() => setFocus(true)}\r\n            onBlur={() => setFocus(false)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    color={focus ? 'primary' : 'default'}\r\n                    onClick={searchHandler}\r\n                    >\r\n                    <Icon>search</Icon>\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <IconButton\r\n          aria-label=\"cart\"\r\n          onClick={handleOpen}\r\n        >\r\n          <Badge badgeContent={cart.length} color=\"secondary\">\r\n            <Icon>shopping_cart</Icon>\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        BackdropProps={{ style: { display: 'flex', justifyContent: 'center' } }}\r\n      >\r\n        <ShoppingCartWithRef ref={ref}>\r\n          <ShoppingCart />\r\n        </ShoppingCartWithRef>\r\n      </Modal>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.forClientState.message,\r\n    cart: state.shoppingCartState.cart\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilterValue: bindActionCreators(setFilterValueAction, dispatch),\r\n    clearProductsMessage: bindActionCreators(clearProductsMessageAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","export const ADD_TO_SHOPPING_CART = 'ADD_TO_SHOPPING_CART'\nexport const DEL_FROM_SHOPPING_CART = 'DEL_FROM_SHOPPING_CART'\n\n\nexport const addToShoppingCartAction = product => {\n  return {\n    type: ADD_TO_SHOPPING_CART,\n    payload: product\n  }\n}\n\nexport const delFromShoppingCartAction = id => {\n  return {\n    type: DEL_FROM_SHOPPING_CART,\n    payload: id\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Box } from '@material-ui/core';\n\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addToShoppingCartAction, delFromShoppingCartAction } from './action'\n\nconst PriceToggleButton = ({ children, product, addToCart, delFromCart, cart }) => {\n  const [selected, setSelected] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    const findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      setSelected(true)\n    }\n  }, [cart])\n\n  const handler = () => {\n    let findProduct = cart.find(item => item._id === product._id)\n    if (findProduct) {\n      enqueueSnackbar('Удалено из корзины')\n      delFromCart(product._id)\n      setSelected(false)\n    } else {\n      enqueueSnackbar('Добавлено в корзину')\n      addToCart(product)\n      setSelected(true)\n    }\n  }\n\n  return (\n    <Box component=\"div\" className=\"card-button-wrapper\">\n      <Button\n        color={selected ? 'inherit' : 'primary'}\n        variant={selected ? 'outlined' : 'contained'}\n        aria-label=\"add to shopping cart\"\n        onClick={handler}\n        endIcon={selected ? <Icon>check</Icon> : <Icon>shopping_cart</Icon>}\n      >\n        {children} $\n    </Button>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: bindActionCreators(addToShoppingCartAction, dispatch),\n    delFromCart: bindActionCreators(delFromShoppingCartAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceToggleButton)","import React, { useState } from 'react'\nimport { Rating } from '@material-ui/lab'\nimport { Box, Typography} from '@material-ui/core'\nimport { useSnackbar } from 'notistack'\n\n\nexport const RatingButton = ({id}) => {\n  const [ratingValue, setRatinValue] = useState(0)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const ratingHandler = (event, newValue) => {\n    setRatinValue(+newValue)\n    enqueueSnackbar('Спасибо за оценку')\n  }\n\n  return (\n    <Box component=\"div\">\n      <Typography component=\"legend\" variant=\"caption\">Оценка: {ratingValue}</Typography>\n      <Rating\n        name={id}\n        value={ratingValue}\n        onChange={ratingHandler}\n      />\n    </Box>\n  )\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\n\r\nimport './CardsList.scss'\r\nimport { connect } from 'react-redux'\r\nimport { getProductsForClientRequestAction } from '../../pages/Home.page/action'\r\nimport { bindActionCreators } from 'redux'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport PriceToggleButton from '../ToggleButton/ToggleButton'\r\nimport { RatingButton } from '../RatingBurron/RatingBurron'\r\n\r\n\r\nconst CardsList = ({ products, getProductsForClientRequest, currentCategory, loadingProducts }) => {\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== '') {\r\n      getProductsForClientRequest(currentCategory)\r\n    }\r\n  }, [currentCategory])\r\n\r\n  if (loadingProducts) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  } else {\r\n    return (\r\n      <Paper className=\"cards-list\">\r\n        <Grid container spacing={3}>\r\n          {products.map(item => {\r\n            return (\r\n              <Grid item xs={12} sm={6} md={6} lg={4} key={item._id}>\r\n                <Card\r\n                  className=\"card\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"card-img\"\r\n                      image={item.img}\r\n                      title={item.name}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {item.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions\r\n                    disableSpacing={true}\r\n                  >\r\n                    <RatingButton \r\n                      id={item._id}\r\n                    />\r\n                    <PriceToggleButton\r\n                      product={item}\r\n                    >\r\n                      {item.price}\r\n                    </PriceToggleButton>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsForClientRequest: bindActionCreators(getProductsForClientRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    loadingProducts: state.forClientState.loadingProducts,\r\n    currentCategory: state.currentCategoryState.currentCategory,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Hidden,\r\n} from '@material-ui/core'\r\n\r\nimport CategoriesList from '../CategoriesList/CategoriesList'\r\nimport CardsList from '../CardsList/CardsList'\r\n\r\nimport './Catalog.scss'\r\n\r\n\r\nconst Catalog = ({ products }) => {\r\n  return (\r\n    <Box className=\"catalog-wrapper\">\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n      >\r\n        <Hidden mdDown>\r\n          <Grid item xs={12}>\r\n            <Paper className=\"header\">\r\n              <Typography variant=\"h5\">Header and filter</Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n          >\r\n            <Paper className=\"filter\">\r\n              <Typography\r\n                className=\"products-counter\"\r\n                variant=\"h5\"\r\n              >\r\n                Товары ({!products.length ? \"...\" : products.length})\r\n            </Typography>\r\n              <Box className=\"buttons-wrapper\">\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Популярное\r\n            </Button>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Лучшие цены\r\n              </Button>\r\n              </Box>\r\n              <CategoriesList />\r\n            </Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={12}\r\n          xs={12}\r\n        >\r\n          <CardsList />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.forClientState.products,\r\n    message: state.forClientState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)","import React, { useEffect, useState } from 'react'\nimport { Fab, Icon, Zoom } from '@material-ui/core'\nimport './ToUpButton.scss'\n\n\nexport const ToUpButton = () => {\n  const [show, setShow] = useState(false)\n\n  const scrollHandler = () => {\n    document.documentElement.scrollTop > 400\n      ? setShow(true)\n      : setShow(false)\n  }\n  const scrollToTopHandler = () => {\n    window.scroll({top: 0, behavior: 'smooth'})\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler)\n    return () => {\n      window.removeEventListener('scroll', scrollHandler)\n    }\n  }, [])\n\n  return (\n    <div className=\"to-up-button\">\n      <Zoom\n        timeout={350}\n        in={show}\n        unmountOnExit\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={scrollToTopHandler}\n        >\n          <Icon>expand_less</Icon>\n        </Fab>\n      </Zoom>\n    </div>\n  )\n}","import React from 'react'\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport Catalog from '../../components/Catalog/Catalog'\r\nimport { ToUpButton } from '../../components/ToUpButton/ToUpButton'\r\n\r\nconst HomePage = () => {\r\n\r\n  return  (\r\n    <div >\r\n      <NavBar />\r\n      <Catalog />\r\n      <ToUpButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","export const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST'\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS'\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE'\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const registrationRequestAction = (form) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const registrationSuccessAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_SUCCESS,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const registrationFailureAction = (massage) => {\r\n  return {\r\n    type: REGISTRATION_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (form) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (token) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: token\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (massage) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: massage\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAction = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { registrationRequestAction, loginRequestAction } from './action'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Fade,\r\n  Popper,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './AuthForm.scss'\r\n\r\n\r\nconst AuthForm = ({ registrationRequest, loginRequest, loading, message }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState()\r\n  const [err, setErr] = useState(\r\n    { email: false, password: false }\r\n  )\r\n  const [form, setForm] = useState(\r\n    { email: '', password: '' }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setErr({\r\n      ...err,\r\n      [event.target.name]: (event.target.value.length > 0 ? false : true)\r\n    })\r\n  }\r\n\r\n  const popperHandler = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n    setOpen(!open)\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    registrationRequest(form)\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    loginRequest(form)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <Popper open={open} anchorEl={anchorEl} onClick={popperHandler} placement=\"bottom-start\" transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className=\"popper-content\" variant=\"body1\">login: test1@mail.ru, password: 123456</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center' alignContent='center' className=\"container\">\r\n        <Grid item xs={12} sm={8} md={6} lg={4} component={Paper}>\r\n          <FormControl className=\"form-wrapper\">\r\n            <Typography variant=\"h3\" className=\"title\">\r\n              LOGOtip\r\n            <Typography variant=\"caption\">\r\n                админ\r\n            </Typography>\r\n            </Typography>\r\n            <TextField\r\n              error={err.email}\r\n              className=\"auth-input\"\r\n              id=\"email\"\r\n              label=\"email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              inputProps={{ value: form.email }}\r\n              onChange={changeInputHandler}\r\n              required\r\n            />\r\n            <TextField\r\n              error={err.password}\r\n              className=\"auth-input\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={changeInputHandler}\r\n              inputProps={{ value: form.password }}\r\n              required\r\n            />\r\n            <ButtonGroup variant=\"contained\" className=\"button-wrapper\">\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>forward</Icon>}\r\n                type=\"submit\"\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Войти</Typography>\r\n            </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Icon>add_box</Icon>}\r\n                type=\"submit\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n              >\r\n                <Typography variant=\"button\">Регистрация</Typography>\r\n            </Button>\r\n              <Button onClick={popperHandler} className=\"login-helper\" color=\"primary\">\r\n                <Icon>help_outline</Icon>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    registrationRequest: bindActionCreators(registrationRequestAction, dispatch),\r\n    loginRequest: bindActionCreators(loginRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authState.loading,\r\n    message: state.authState.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthForm)","import React from 'react'\r\nimport AuthForm from '../components/AuthForm/AuthForm'\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <AuthForm />\r\n  )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\n\r\nconst DeveloperPage = () => {\r\n  return (\r\n    <div>Its page for me ueeee</div>\r\n  )\r\n}\r\n\r\nexport default DeveloperPage","import React from 'react'\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Icon,\r\n  List,\r\n  Drawer,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport './AdminSettingsList.scss'\r\n\r\nexport const settingsList = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin/dashboard',\r\n    icon: 'widgets'\r\n  },\r\n  {\r\n    name: 'Список товаров',\r\n    path: '/admin/products',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Список категорий',\r\n    path: '/admin/categories',\r\n    icon: 'category'\r\n  }\r\n]\r\n\r\nconst classes = {\r\n  listItem: {\r\n    root: 'drawer-btn',\r\n    selected: 'drawer-btn-selected'\r\n  },\r\n  listIcon: {\r\n    root: 'drawen-icon'\r\n  },\r\n  divider: {\r\n    root: \"divider\"\r\n  }\r\n}\r\n\r\nconst CustomButton = ({ to, label, activeOnlyWhenExact, icon }) => {\r\n  const math = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <Link to={to} className=\"admin-drawer-link\">\r\n      <ListItem\r\n        component={Button}\r\n        variant=\"contained\"\r\n        classes={classes.listItem}\r\n        selected={math ? math.isExact : false}\r\n      >\r\n        <ListItemIcon\r\n          classes={classes.listIcon}\r\n        >\r\n          <Icon>{icon}</Icon>\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          <Typography variant=\"caption\">\r\n            {label}\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport const AdminSettingsList = () => {\r\n  return (\r\n    <Drawer\r\n      open\r\n      variant=\"permanent\"\r\n      className=\"drawer-container\"\r\n      classes={{\r\n        paper: 'drawer-bg'\r\n      }}\r\n      elevation={16}\r\n    >\r\n      <List>\r\n        <Link to='/admin/dashboard' className=\"to-home\">\r\n          <ListItem\r\n            classes={classes.listItem}\r\n          >\r\n            <ListItemText>\r\n              <Typography variant=\"h4\">\r\n                LOGOtip&nbsp;\r\n                  <Typography variant=\"caption\">\r\n                  aдмин\r\n                  </Typography>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </Link >\r\n        <Divider\r\n          variant=\"middle\"\r\n          light\r\n          classes={classes.divider}\r\n        />\r\n        {settingsList.map((item) => {\r\n          return (\r\n            <CustomButton\r\n              key={item.name}\r\n              to={item.path}\r\n              label={item.name}\r\n              activeOnlyWhenExact\r\n              icon={item.icon} />\r\n          )\r\n        })}\r\n      </List>\r\n      <Link to='/developer' className=\"to-developer admin-drawer-link\">\r\n        <ListItem\r\n          component={Button}\r\n          variant=\"contained\"\r\n          classes={classes.listItem}\r\n          selected\r\n        >\r\n          <ListItemIcon\r\n            classes={classes.listIcon}\r\n          >\r\n            <Icon>code</Icon>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"caption\">\r\n              Разработчик\r\n              </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </Link >\r\n    </Drawer>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AdminSettingsList } from \"../components/AdminSettingsList/AdminSettingsList\"\r\nimport { logoutAction } from \"../components/AuthForm/action\"\r\nimport { AdminRoutes } from '../routes/routes'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport { settingsList } from '../components/AdminSettingsList/AdminSettingsList'\r\n\r\nconst CustomLink = ({to, onClick}) => {\r\n  return (\r\n    <Link to={to} onClick={onClick} style={{textDecoration:'none'}}>\r\n      <Button>Выйти</Button>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst AdminPanelPage = ({ logout, location }) => {\r\n  console.log(location)\r\n  const pathList = settingsList.map(item => ({ path: item.path, name: item.name }))\r\n  const findName = pathList.find(item => item.path === location.pathname)\r\n\r\n  return (\r\n    <Grid container className=\"admin-panel\">\r\n      <Grid item lg={2} />\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, display: 'flex', justifyContent: 'space-between' }} component={Paper}>\r\n          <Typography variant=\"body1\">\r\n            {findName !== undefined ? findName.name : ''}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"secondary\">\r\n            Дисклеймер: Админ панель ещё в разработке\r\n          </Typography>\r\n          <CustomLink to='/admin' onClick={logout}/>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={2} className=\"admin-drawer\">\r\n        <AdminSettingsList />\r\n      </Grid>\r\n      <Grid item lg={10}>\r\n        <Box style={{ margin: 20, padding: 20}} component={Paper}>\r\n          <AdminRoutes />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: bindActionCreators(logoutAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelPage)\r\n","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\r\nexport const GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\r\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST';\r\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS';\r\nexport const DEL_CATEGORY_FAILURE = 'DEL_CATEGORY_FAILURE';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_REQUEST = 'SHOW_CATEGORY_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_SUCCESS = 'SHOW_CATEGORY_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_CATEGORY_ON_WEB_SITE_FAILURE = 'SHOW_CATEGORY_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getCategoryRequestAction = () => {\r\n  return {\r\n    type: GET_CATEGORIES_REQUEST\r\n  }\r\n}\r\nexport const getCategorySuccessAction = categories => {\r\n  return {\r\n    type: GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  }\r\n}\r\nexport const getCategoryFailureAction = message => {\r\n  return {\r\n    type: GET_CATEGORIES_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryRequestAction = id => {\r\n  return {\r\n    type: DEL_CATEGORY_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteCategorySuccessAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteCategoryFailureAction = message => {\r\n  return {\r\n    type: DEL_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showCategoryOnWebSiteFailureAction = (message) => {\r\n  return {\r\n    type: SHOW_CATEGORY_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","export const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\r\nexport const ADD_CATEGORY_FAILURE = 'ADD_CATEGORY_FAILURE'\r\n\r\nexport const addCategoryRequestAction = (name) => {\r\n  return {\r\n    type: ADD_CATEGORY_REQUEST,\r\n    payload: name\r\n  }\r\n}\r\n\r\nexport const addCategorySuccessAction = message => {\r\n  return {\r\n    type: ADD_CATEGORY_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addCategoryFailureAction = (message) => {\r\n  return {\r\n    type: ADD_CATEGORY_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nimport './CategoryCreator.scss'\r\nimport { TextField, Paper, Button, FormControl, FormHelperText, Modal } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addCategoryRequestAction } from './action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst CategoryCreator = ({\r\n  message,\r\n  addCategoryRequest,\r\n  loading,\r\n  success,\r\n}) => {\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const changeInputHandler = event => {\r\n    setCategory({ name: event.target.value })\r\n  }\r\n  const modalOpenHandler = () => {\r\n    setIsOpen(true)\r\n  }\r\n  const modalCloseWrapper = (event) => {\r\n    if(event.currentTarget === event.target) {\r\n      setIsOpen(false)\r\n    }\r\n  }\r\n  const modalCloseHendler = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const addCatogory = useCallback(() => {\r\n    addCategoryRequest(category.name)\r\n  }, [category.name, addCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      modalCloseHendler()\r\n      setCategory({name: ''})\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message, enqueueSnackbar])\r\n\r\n  return (\r\n    <Paper className=\"category-creator\">\r\n      <Button variant=\"outlined\" onClick={modalOpenHandler}>Добавить</Button>\r\n      <Modal\r\n        open={isOpen}\r\n        onClose={modalCloseHendler}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"category-creator-body\" onClick={modalCloseWrapper}>\r\n          <FormControl\r\n            className=\"add-category-form\"\r\n            margin=\"dense\"\r\n            required\r\n            size=\"small\"\r\n          >\r\n            <FormHelperText>Добавление категории</FormHelperText>\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Название\"\r\n              variant=\"outlined\"\r\n              name=\"name\"\r\n              size=\"small\"\r\n              onChange={changeInputHandler}\r\n              value={category.name}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" disabled={loading} onClick={addCatogory}>Добавить</Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={modalCloseHendler}>Закрыть</Button>\r\n          </FormControl>\r\n        </div>\r\n      </Modal>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoryCreatorState.message,\r\n    loading: state.categoryCreatorState.loading,\r\n    success: state.categoryCreatorState.success,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCategoryRequest: bindActionCreators(addCategoryRequestAction, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryCreator)","import React, { useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {getCategoryRequestAction, deleteCategoryRequestAction, showCategoryOnWebSiteRequestAction} from './action'\r\nimport CategoryCreator from '../CategoryCreator/CategoryCreator'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  CircularProgress,\r\n  IconButton,\r\n  Checkbox,\r\n  Icon,\r\n  Paper,\r\n  Breadcrumbs\r\n} from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './Categories.scss'\r\nimport { useSnackbar } from 'notistack'\r\n\r\n\r\nconst BreadcrumbsCreator = [\r\n  {\r\n    name: 'Панель управления',\r\n    path: '/admin'\r\n  },\r\n  {\r\n    name: 'Категории',\r\n    path: '/admin/categories',\r\n    active: true\r\n  },\r\n]\r\n\r\nconst Categories = ({\r\n  categories,\r\n  getCategoryRequest,\r\n  deleteCategoryRequest,\r\n  showCategoryOnWebSiteRequest,\r\n  oneCategoryLoading,\r\n  loading,\r\n  message,\r\n}) => {\r\n  \r\n  const {enqueueSnackbar} = useSnackbar()\r\n\r\n  const getCategory = useCallback(\r\n    () => {\r\n      getCategoryRequest()\r\n    },\r\n    [categories],\r\n  )\r\n\r\n  const showCategoryOnWebSiteHendler = (id, checked) => {\r\n    showCategoryOnWebSiteRequest(id, checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {BreadcrumbsCreator.map(item => (\r\n          <NavLink key={item.name} to={item.path} className={item.active ? 'active-link link' : 'link' }>{item.name}</NavLink>\r\n        ))}\r\n      </Breadcrumbs>\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a categories table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell>Название категории</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categories.map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {(\r\n                      '123' === row._id\r\n                        ? <Preloader />\r\n                        : <Checkbox\r\n                        color=\"primary\"\r\n                        name={row._id}\r\n                        checked={row.show || false}\r\n                        onChange={(event) => {\r\n                          showCategoryOnWebSiteHendler(row._id, event.target.checked)\r\n                        }}\r\n                        disabled={loading || oneCategoryLoading}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                    className=\"centered-btn\"\r\n                    onClick={() => {deleteCategoryRequest(row._id)}}\r\n                    disabled={loading || oneCategoryLoading}\r\n                  >\r\n                      <Icon>delete_outline</Icon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <CategoryCreator />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    message: state.categoriesState.message,\r\n    categories: state.categoriesState.categories,\r\n    loading: state.categoriesState.loading,\r\n    oneCategoryLoading: state.categoryCreatorState.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n    deleteCategoryRequest: bindActionCreators(deleteCategoryRequestAction, dispatch),\r\n    showCategoryOnWebSiteRequest: bindActionCreators(showCategoryOnWebSiteRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","export const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\nexport const CLEAR_FORM = 'CLEAR_FORM'\r\n\r\nexport const addProductRequestAction = form => {\r\n  return {\r\n    type: ADD_PRODUCT_REQUEST,\r\n    payload: form\r\n  }\r\n}\r\n\r\nexport const addProductSuccessAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const addProductFailureAction = message => {\r\n  return {\r\n    type: ADD_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const formCleanerAction = status => {\r\n  return {\r\n    type: CLEAR_FORM,\r\n    payload: status\r\n  }\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Select, MenuItem, FormHelperText, FormControl, Paper } from '@material-ui/core'\r\n\r\nimport './ProductCreator.scss'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addProductRequestAction, addProductFailureAction, formCleanerAction } from './action'\r\nimport { getCategoryRequestAction } from '../Categories/action'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst ProductCreator = ({\r\n  message,\r\n  loading,\r\n  addProductRequest,\r\n  categories,\r\n  formCleaner,\r\n  success,\r\n  getCategoryRequest,\r\n  categoriesLoading,\r\n}) => {\r\n  const {enqueueSnackbar} = useSnackbar()\r\n  const [form, setForm] = useState(\r\n    {\r\n      name: '',\r\n      category: '',\r\n      amount: '',\r\n      img: '',\r\n      description: '',\r\n      price: '',\r\n    }\r\n  )\r\n\r\n  const changeInputHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const addProductHandler = () => {\r\n    addProductRequest(form)\r\n  }\r\n\r\n  const getCategories = useCallback(() => {\r\n    getCategoryRequest()\r\n  },[getCategoryRequest])\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    formCleaner(false)\r\n    return () => {\r\n      setForm({\r\n        name: '',\r\n        category: '',\r\n        amount: '',\r\n        img: '',\r\n        description: '',\r\n        price: '',\r\n      })\r\n    }\r\n  }, [success])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar(message)\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <div className=\"product-creator\">\r\n      <Paper className=\"form-wrapper\">\r\n        <FormControl\r\n          className=\"add-product-form\"\r\n          margin=\"dense\"\r\n          required\r\n          size=\"small\"\r\n        >\r\n          <FormHelperText>Добавление товара</FormHelperText>\r\n          <Select\r\n            className=\"categories-select\"\r\n            value={form.category}\r\n            onChange={changeInputHandler}\r\n            name=\"category\"\r\n            displayEmpty\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled={categoriesLoading}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Выберите категорию\r\n            </MenuItem>\r\n            {categories.map(item => {\r\n              return (<MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>)\r\n            })}\r\n          </Select>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Название\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.name}\r\n          />\r\n          <TextField\r\n            id=\"amount\"\r\n            label=\"Колличество\"\r\n            variant=\"outlined\"\r\n            name=\"amount\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.amount}\r\n          />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Цена\"\r\n            variant=\"outlined\"\r\n            name=\"price\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.price}\r\n          />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Описание\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.description}\r\n          />\r\n          <TextField\r\n            id=\"img\"\r\n            label=\"Изображение (url)\"\r\n            variant=\"outlined\"\r\n            name=\"img\"\r\n            size=\"small\"\r\n            onChange={changeInputHandler}\r\n            value={form.img}\r\n          />\r\n          <Button type=\"submit\" variant=\"outlined\" disabled={loading} onClick={addProductHandler}>Добавить</Button>\r\n        </FormControl>\r\n        <NavLink className=\"btn\" to=\"/admin/products\">Список продуктов</NavLink>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productCreatorState.loading,\r\n    err: state.productCreatorState.err,\r\n    success: state.productCreatorState.success,\r\n    categories: state.categoriesState.categories,\r\n    categoriesLoading: state.categoriesState.loading,\r\n    message: state.productCreatorState.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProductRequest: bindActionCreators(addProductRequestAction, dispatch),\r\n    addProductFailure: bindActionCreators(addProductFailureAction, dispatch),\r\n    formCleaner: bindActionCreators(formCleanerAction, dispatch),\r\n    getCategoryRequest: bindActionCreators(getCategoryRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCreator)","export const GET_PRODUCTS_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST';\r\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS';\r\nexport const DEL_PRODUCT_FAILURE = 'DEL_PRODUCT_FAILURE';\r\nexport const SHOW_ON_WEB_SITE_REQUEST = 'SHOW_ON_WEB_SITE_REQUEST';\r\nexport const SHOW_ON_WEB_SITE_SUCCESS = 'SHOW_ON_WEB_SITE_SUCCESS';\r\nexport const SHOW_ON_WEB_SITE_FAILURE = 'SHOW_ON_WEB_SITE_FAILURE';\r\n\r\nexport const getProductsRequestAction = () => {\r\n  return {\r\n    type: GET_PRODUCTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const getProductsSuccessAction = products => {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport const getProductsFailureAction = message => {\r\n  return {\r\n    type: GET_PRODUCTS_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteRequestAction = (id, checked) => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_REQUEST,\r\n    payload: {\r\n      id,\r\n      checked\r\n    }\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteSuccessAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const showOnWebSiteFailureAction = message => {\r\n  return {\r\n    type: SHOW_ON_WEB_SITE_FAILURE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductRequestAction = id => {\r\n  return {\r\n    type: DEL_PRODUCT_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const deleteProductSuccessAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_SUCCESS,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const deleteProductFailureAction = message => {\r\n  return {\r\n    type: DEL_PRODUCT_FAILURE,\r\n    payload: message\r\n  }\r\n}","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport {\r\n  getProductsRequestAction,\r\n  showOnWebSiteRequestAction,\r\n  deleteProductRequestAction,\r\n} from './action'\r\n\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Input,\r\n  Icon,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport './ProductsList.scss'\r\n\r\n\r\nconst ProductsList = ({\r\n  loading,\r\n  products,\r\n  getProductsRequest,\r\n  showOnWebSiteRequest,\r\n  oneProductLoading,\r\n  deleteProductRequest,\r\n  message\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [value, setValue] = useState('')\r\n\r\n  const getProducts = useCallback(() => {\r\n    getProductsRequest()\r\n  }, [getProductsRequest])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      enqueueSnackbar( typeof message === \"string\" ? message : 'Неизвестная ошибка')\r\n    }\r\n  }, [message])\r\n\r\n  const inputFilterHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const checkboxChangeHendler = (event) => {\r\n    showOnWebSiteRequest(event.target.name, event.target.checked)\r\n  }\r\n\r\n  const Preloader = () => {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const TableCreator = () => {\r\n    return (\r\n      <TableContainer className=\"table-container\" component={Paper}>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a products table\">\r\n          <TableHead className=\"table-headers\">\r\n            <TableRow>\r\n              <TableCell>id</TableCell>\r\n              <TableCell >Имя товара</TableCell>\r\n              <TableCell >Количество</TableCell>\r\n              <TableCell >Цена</TableCell>\r\n              <TableCell >Описание</TableCell>\r\n              <TableCell align=\"center\">Отображать на сайте</TableCell>\r\n              <TableCell align=\"center\">Удалить</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.filter(row => row.name.match(value)).map(row => {\r\n              return (\r\n                <TableRow key={row._id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell >{row.name}</TableCell>\r\n                  <TableCell >{row.amount}</TableCell>\r\n                  <TableCell >{row.price}</TableCell>\r\n                  <TableCell >{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox disabled={oneProductLoading === row.id} color=\"primary\" name={row._id} checked={row.show} onChange={checkboxChangeHendler} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      onClick={() => { deleteProductRequest(row._id) }}\r\n                      disabled={oneProductLoading === row.id}\r\n                    >\r\n                      <Icon>clear</Icon>\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-list\">\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"input-with-icon-search\">Введите имя товара</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-search\"\r\n          onChange={inputFilterHandler}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Icon>search</Icon>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      {loading ? <Preloader /> : <TableCreator />}\r\n      <NavLink\r\n        to=\"/admin/products/add\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      >Добавить</NavLink>\r\n      <NavLink\r\n        to=\"/admin\"\r\n        variant=\"outlined\"\r\n      >Панель управления</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.productsState.loading,\r\n    products: state.productsState.products,\r\n    message: state.productsState.message,\r\n    oneProductLoading: state.productsState.oneProductLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductsRequest: bindActionCreators(getProductsRequestAction, dispatch),\r\n    showOnWebSiteRequest: bindActionCreators(showOnWebSiteRequestAction, dispatch),\r\n    deleteProductRequest: bindActionCreators(deleteProductRequestAction, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList)","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Grid container className=\"admin-dashboard\">\r\n      <Grid item lg={12}>\r\n        <Typography variant=\"subtitle1\">Пользователей на сайте</Typography>\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Модераторы(4)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n        Контент-менеджеры(2)\r\n      </Grid>\r\n      <Grid item lg={4} style={{ border: '1px solid #000' }}>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HomePage from '../pages/Home.page/Home.page'\r\nimport AuthPage from '../pages/Auth.page'\r\nimport DeveloperPage from '../pages/Developer.page'\r\nimport AdminPanelPage from '../pages/AdminPanel.page'\r\nimport Categories from '../components/Categories/Categories'\r\nimport ProductCreator from '../components/ProductCreator/ProductCreator'\r\nimport ProductsList from '../components/ProductsList/ProductsList'\r\nimport AdminDashboard from '../components/AdminDashboard/AdminDashboard'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WithOutRoutes = ({ isAuth }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin' component={isAuth ? AdminPanelPage : AuthPage}/>\r\n      <Route path='/developer' exact component={DeveloperPage} />\r\n      <Route path='/' exact component={HomePage} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const WithOutAdminRoutes = ({ isAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/admin/dashboard' exact component={AdminDashboard} />\r\n        <Route path='/admin/products' exact component={ProductsList} />\r\n        <Route path='/admin/products/add' exact component={ProductCreator} />\r\n        <Route path='/admin/categories' exact component={Categories} />\r\n        <Redirect to='/admin/dashboard' />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Redirect to='/admin'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.authState.isAuth\r\n  }\r\n}\r\n\r\nexport const Routes = connect(mapStateToProps)(WithOutRoutes)\r\nexport const AdminRoutes = connect(mapStateToProps)(WithOutAdminRoutes)","import {\r\n  LOGOUT,\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n} from \"./action\"\r\n\r\nconst token = (sessionStorage.getItem('token') ? sessionStorage.getItem('token') : false)\r\n\r\nconst initialState = {\r\n  form: {},\r\n  loading: false,\r\n  token,\r\n  isAuth: (token ? true : false),\r\n  message: null\r\n}\r\n\r\nexport const authState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTRATION_REQUEST:{\r\n      return {\r\n        ...state,\r\n        form: action.payload,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    } \r\n    case REGISTRATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }     \r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        loading: false,\r\n        message: null,\r\n        token: action.payload,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n        },\r\n        message: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_REQUEST,\r\n  GET_PRODUCTS_FAILURE,\r\n  SHOW_ON_WEB_SITE_SUCCESS,\r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  SHOW_ON_WEB_SITE_FAILURE,\r\n  DEL_PRODUCT_REQUEST,\r\n  DEL_PRODUCT_SUCCESS,\r\n  DEL_PRODUCT_FAILURE\r\n} from \"./action\";\r\n\r\n\r\nconst initialState = {\r\n  oneProductLoading: '',\r\n  loading: false,\r\n  products: [],\r\n  message: null\r\n}\r\n\r\nexport const productsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_REQUEST:\r\n      return {...state, loading: true, message: null}\r\n    case GET_PRODUCTS_SUCCESS: \r\n      return {...state, loading: false, products: action.payload}\r\n    case GET_PRODUCTS_FAILURE: \r\n      return {...state, loading: false, products: [], message: action.payload}\r\n    case SHOW_ON_WEB_SITE_REQUEST: \r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case SHOW_ON_WEB_SITE_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case SHOW_ON_WEB_SITE_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_REQUEST:\r\n      return {...state, oneProductLoading: action.payload.id, message: null}\r\n    case DEL_PRODUCT_SUCCESS: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    case DEL_PRODUCT_FAILURE: \r\n      return {...state, oneProductLoading: '', message: action.payload}\r\n    default: \r\n      return { ...state }\r\n  } \r\n}","import { ADD_PRODUCT_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, CLEAR_FORM } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const productCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true,\r\n      }\r\n    }\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_FORM: {\r\n      return {\r\n        ...state,\r\n        success: action.status\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import {\r\n  GET_CATEGORIES_REQUEST,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  DEL_CATEGORY_REQUEST,\r\n  DEL_CATEGORY_SUCCESS,\r\n  DEL_CATEGORY_FAILURE,\r\n  SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n  SHOW_CATEGORY_ON_WEB_SITE_SUCCESS,\r\n  SHOW_CATEGORY_ON_WEB_SITE_FAILURE\r\n} from \"./action\"\r\n\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  message: null\r\n}\r\n\r\nexport const categoriesState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: null,\r\n        categories: action.payload,\r\n        message: null\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      }\r\n    }\r\n    case DEL_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case DEL_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case DEL_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    case SHOW_CATEGORY_ON_WEB_SITE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n  }\r\n}","import { ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  message: null,\r\n  success: false\r\n}\r\n\r\nexport const categoryCreatorState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        success: false\r\n      }\r\n    }\r\n    case ADD_CATEGORY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: true\r\n      }\r\n    }\r\n    case ADD_CATEGORY_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n        success: false\r\n      }\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { SET_CURRENT_CATEGORY } from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  currentCategory: 'Популярно'\r\n}\r\n\r\nexport const currentCategoryState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CATEGORY: {\r\n      return {\r\n        ...state,\r\n        currentCategory: action.payload\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import {\r\n  GET_PRODUCTS_FOR_CLIENT_REQUEST,\r\n  GET_PRODUCTS_FOR_CLIENT_SUCCESS,\r\n  GET_PRODUCTS_FOR_CLIENT_FAILURE,\r\n  GET_CATEGORIES_FOR_CLIENT_REQUEST,\r\n  GET_CATEGORIES_FOR_CLIENT_SUCCESS,\r\n  GET_CATEGORIES_FOR_CLIENT_FAILURE,\r\n  CLEAR_PRODUCTS_MESSAGE\r\n} from \"./action\"\r\n\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: [],\r\n  loadingProducts: false,\r\n  loadingCategories: false,\r\n  message: null\r\n}\r\n\r\nexport const forClientState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n        message: null,\r\n        products: []\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        message: null,\r\n        products: action.payload\r\n      }\r\n    }\r\n    case GET_PRODUCTS_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: true,\r\n        message: null,\r\n        categories: []\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: action.payload,\r\n        message: null,\r\n      }\r\n    }\r\n    case GET_CATEGORIES_FOR_CLIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loadingCategories: false,\r\n        categories: [],\r\n        message: action.payload\r\n      }\r\n    }\r\n    case CLEAR_PRODUCTS_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { SET_FILTER_VALUE } from \"./adction\"\n\n\nconst initialState = {\n  value: '',\n}\n\nexport const filterState = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_VALUE: {\n      return {\n        ...state,\n        value: action.payload\n      }\n    }\n    default: return state\n  }\n}","import { ADD_TO_SHOPPING_CART, DEL_FROM_SHOPPING_CART } from \"./action\"\n\n\nconst initialState = {\n  cart: localStorage.getItem('shopping-cart') ? JSON.parse(localStorage.getItem('shopping-cart')) : []\n}\n\nexport const shoppingCartState = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      }\n    }\n    case DEL_FROM_SHOPPING_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\r\nimport { authState } from '../components/AuthForm/reducer'\r\nimport { productsState } from '../components/ProductsList/reducer'\r\nimport { productCreatorState } from '../components/ProductCreator/reducer'\r\nimport { categoriesState } from '../components/Categories/reducer'\r\nimport { categoryCreatorState } from '../components/CategoryCreator/reducer'\r\nimport { currentCategoryState } from '../components/CategoriesList/reducer'\r\nimport { forClientState } from '../pages/Home.page/reducer'\r\nimport { filterState } from '../components/NavBar/reducer'\r\nimport { shoppingCartState } from '../components/ToggleButton/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  authState,\r\n  productsState,\r\n  productCreatorState,\r\n  categoriesState,\r\n  categoryCreatorState,\r\n  forClientState,\r\n  currentCategoryState,\r\n  filterState,\r\n  shoppingCartState,\r\n})","import {\r\n  takeLatest,\r\n  put,\r\n  call\r\n} from 'redux-saga/effects';\r\nimport {\r\n  registrationSuccessAction,\r\n  REGISTRATION_REQUEST,\r\n  registrationFailureAction,\r\n  LOGIN_REQUEST,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  LOGOUT\r\n} from './action';\r\n\r\n\r\nconst fetchRegister = form => {\r\n  return fetch('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchLogin = (form) => {\r\n  return fetch('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* registrationWorker(action) {\r\n  try {\r\n    const data = yield call(fetchRegister, action.payload)\r\n    if(data.status) {\r\n      yield put(registrationSuccessAction(data.message))\r\n    } else {\r\n      yield put(registrationFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(registrationFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(fetchLogin, action.payload)\r\n    if (data.status) {\r\n      yield put(loginSuccessAction(data.token))\r\n      yield sessionStorage.setItem('token', data.token)\r\n    } else {\r\n      yield put(loginFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(loginFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* logoutWorker() {\r\n  yield sessionStorage.removeItem('token')\r\n}\r\n\r\nfunction* authWatcher() {\r\n  yield takeLatest(REGISTRATION_REQUEST, registrationWorker)\r\n  yield takeLatest(LOGIN_REQUEST, loginWorker)\r\n  yield takeLatest(LOGOUT, logoutWorker)\r\n}\r\n\r\nexport default authWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  GET_PRODUCTS_REQUEST,\r\n  getProductsSuccessAction,\r\n  getProductsFailureAction,\r\n  \r\n  SHOW_ON_WEB_SITE_REQUEST,\r\n  showOnWebSiteSuccessAction,\r\n  showOnWebSiteFailureAction,\r\n  \r\n  DEL_PRODUCT_REQUEST,\r\n  deleteProductSuccessAction,\r\n  deleteProductFailureAction\r\n} from './action';\r\n\r\nconst fetchProducts = () => {\r\n  return fetch('/api/products/get-products', {\r\n    method: 'GET',\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchShowOnWebSite = (payload) => {\r\n  return fetch('/api/products/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nconst fetchDelProduct = (id) => {\r\n  return fetch('/api/products/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getProductsWorker() {\r\n  try {\r\n    const data = yield call(fetchProducts)\r\n    yield put(getProductsSuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getProductsFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* showOnWebSideWorker(action) {\r\n  try {\r\n    const data = yield call(fetchShowOnWebSite, action.payload)\r\n    if(data.status) {\r\n      yield put(showOnWebSiteSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(showOnWebSiteFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(showOnWebSiteFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDelProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(deleteProductSuccessAction(data.message))\r\n      yield put(getProductsSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* productsWatcher() {\r\n  yield takeLatest(GET_PRODUCTS_REQUEST, getProductsWorker)\r\n  yield takeLatest(SHOW_ON_WEB_SITE_REQUEST, showOnWebSideWorker)\r\n  yield takeLatest(DEL_PRODUCT_REQUEST, delProductWorker)\r\n}\r\n\r\nexport default productsWatcher\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  addProductSuccessAction,\r\n  addProductFailureAction\r\n} from './action';\r\n\r\n\r\nconst fetchAddNewProduct = (form) => {\r\n  return fetch('/api/products/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...form}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addProductWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewProduct, action.payload)\r\n    if (data.status) {\r\n      yield put(addProductSuccessAction(data.message))\r\n    } \r\n    if (data.errors) {\r\n      yield put(addProductFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addProductFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addProductWatcher() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProductWorker)\r\n}\r\n\r\nexport default addProductWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n GET_CATEGORIES_REQUEST,\r\n getCategorySuccessAction,\r\n getCategoryFailureAction,\r\n DEL_CATEGORY_REQUEST,\r\n deleteCategoryFailureAction,\r\n SHOW_CATEGORY_ON_WEB_SITE_REQUEST,\r\n showCategoryOnWebSiteFailureAction,\r\n showCategoryOnWebSiteSuccessAction,\r\n deleteCategorySuccessAction\r\n} from './action';\r\n\r\nconst fetchCategories = () => {\r\n  return fetch('/api/categories/get', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchDeleteCategory = (id) => {\r\n  return fetch('/api/categories/del', {\r\n    method: 'POST',\r\n    body: JSON.stringify({id}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\n\r\nconst fetchShowCategoryOnWebSite = (payload) => {\r\n  return fetch('/api/categories/show', {\r\n    method: 'POST',\r\n    body: JSON.stringify({...payload}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* getCategoriesWorker () {\r\n  try {\r\n    const data = yield call(fetchCategories)\r\n    yield put(getCategorySuccessAction(data))\r\n  } catch (e) {\r\n    yield put(getCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* delCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchDeleteCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(deleteCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(deleteCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(deleteCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n }\r\n\r\n function* showCategoryOnWebSiteWorker(action) {\r\n   try {\r\n    const data = yield call(fetchShowCategoryOnWebSite, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(showCategoryOnWebSiteSuccessAction(data.message))\r\n    } else {\r\n      yield put(showCategoryOnWebSiteFailureAction(data.message))\r\n    }\r\n   } catch (e) {\r\n    yield put(showCategoryOnWebSiteFailureAction('Неизвестная ошибка'))\r\n   }\r\n }\r\n\r\nfunction* categoriesWatcher() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesWorker)\r\n  yield takeLatest(DEL_CATEGORY_REQUEST, delCategoryWorker)\r\n  yield takeLatest(SHOW_CATEGORY_ON_WEB_SITE_REQUEST, showCategoryOnWebSiteWorker)\r\n}\r\n\r\nexport default categoriesWatcher","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n} from 'redux-saga/effects';\r\nimport { addCategorySuccessAction, addCategoryFailureAction, ADD_CATEGORY_REQUEST } from './action';\r\nimport { getCategorySuccessAction } from '../Categories/action';\r\n\r\nconst fetchAddNewCategory = (name) => {\r\n  return fetch('/api/categories/add', {\r\n    method: 'POST',\r\n    body: JSON.stringify({name}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction* addCategoryWorker(action) {\r\n  try {\r\n    const data = yield call(fetchAddNewCategory, action.payload)\r\n    if (data.status) {\r\n      yield put(getCategorySuccessAction(data.categories))\r\n      yield put(addCategorySuccessAction(data.message))\r\n    } else {\r\n      yield put(addCategoryFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(addCategoryFailureAction('Неизвестная ошибка'))\r\n  }\r\n}\r\n\r\nfunction* addCategoryWatcher() {\r\n  yield takeLatest(ADD_CATEGORY_REQUEST, addCategoryWorker)\r\n}\r\n\r\nexport default addCategoryWatcher","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport { GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientSuccessAction, getProductsForClientFailreAction, GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientSuccessAction, getCategoriesForClientFailureAction } from './action'\r\n\r\n\r\nconst fetchProductsForClient = category => {\r\n  return fetch('/api/products/get-products-for-clients', {\r\n    method: 'POST',\r\n    body: JSON.stringify({category}),\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n}\r\n\r\nconst fetchCategoriesForClient = () => {\r\n  return fetch('api/categories/get-for-client').then(res => res.json())\r\n}\r\n\r\nfunction* getProductsForClientWorker (action) {\r\n  try {\r\n    const data = yield call(fetchProductsForClient, action.payload)\r\n    if(data.status) {\r\n      yield put(getProductsForClientSuccessAction(data.products))\r\n    } else {\r\n      yield put(getProductsForClientFailreAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getProductsForClientFailreAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* getCategoriesForClientWorker () {\r\n  try {\r\n    const data = yield call(fetchCategoriesForClient)\r\n    if(data.status) {\r\n      yield put(getCategoriesForClientSuccessAction(data.categories))\r\n    } else {\r\n      yield put(getCategoriesForClientFailureAction(data.message))\r\n    }\r\n  } catch (e) {\r\n    yield put(getCategoriesForClientFailureAction(e.message))\r\n  }\r\n}\r\n\r\nfunction* forClientWatcher () {\r\n  yield takeLatest(GET_PRODUCTS_FOR_CLIENT_REQUEST, getProductsForClientWorker)\r\n  yield takeLatest(GET_CATEGORIES_FOR_CLIENT_REQUEST, getCategoriesForClientWorker)\r\n}\r\n\r\nexport default forClientWatcher","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { SET_FILTER_VALUE } from './adction'\nimport { getProductsForClientSuccessAction, getProductsForClientFailreAction } from '../../pages/Home.page/action'\nimport { setCurrentCategoryAction } from '../CategoriesList/action'\n\nconst fetchFilteredProducts = (filterValue) => {\n  return fetch('/api/products/get-filtered-products', {\n    method: 'POST',\n    body: JSON.stringify({filterValue}),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nfunction* getFilteredProductsWorker(action) {\n  yield put(setCurrentCategoryAction(''))\n  try {\n    const data = yield call(fetchFilteredProducts, action.payload)\n    if(data.status) {\n      yield put(getProductsForClientSuccessAction(data.products))\n    } else {\n      yield put(getProductsForClientFailreAction(data.message))\n    }\n  } catch (e) {\n    yield put(getProductsForClientFailreAction('Произошла неизвестная ошибка'))\n  }\n}\n\nfunction* filterWatcher () {\n  yield takeLatest(SET_FILTER_VALUE, getFilteredProductsWorker)\n}\n\nexport default filterWatcher","import { all } from 'redux-saga/effects';\r\nimport authWatcher from '../components/AuthForm/saga'\r\nimport productsWatcher from '../components/ProductsList/saga'\r\nimport addProductWatcher from '../components/ProductCreator/saga'\r\nimport categoriesWatcher from '../components/Categories/saga';\r\nimport addCategoryWatcher from '../components/CategoryCreator/saga';\r\nimport forClientWatcher from '../pages/Home.page/saga'\r\nimport filterWatcher from '../components/NavBar/saga';\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authWatcher(),\r\n    productsWatcher(),\r\n    addProductWatcher(),\r\n    categoriesWatcher(),\r\n    addCategoryWatcher(),\r\n    forClientWatcher(),\r\n    filterWatcher()\r\n  ]);\r\n}\r\n","import { rootReducer } from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../sagas/rootSaga'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagasMiddleware))\r\n)\r\n\r\nsagasMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Routes } from './routes/routes'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\nimport { orange, blue } from '@material-ui/core/colors';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from '@material-ui/core';\r\nimport { ruRU } from '@material-ui/core/locale'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[800]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    },\r\n  },\r\n}, ruRU)\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3} autoHideDuration={2000} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}